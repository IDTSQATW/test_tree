DL_SCRIPTVERSION
1
44256

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "V3-031" ' !!!!! EDIT THIS !!!!!
' This test case is to verify reader does not crash in dispalying *bmp images along w/ switching to PT mode

'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result
      
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
      
End Sub

'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
'DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0

result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication

'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON " Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub


Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function

'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function

'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
'============================================================
MyInput = MsgBox ("Are you testing a Vend3 type reader?", VBYesNo, "Test Step")

'------------------------------------------------------------
If MyInput = 6 Then

  DL.SendSequence "PT off"
  resultIgnore = DL.WaitForSequence("PT 2c-xx generic resp ", 1, 3000)
  DL.Pause 500

  If result <> 0  Then
   DL.ResetReceiveCounter
   DL.AddComment "list all dir files "
   DL.SendSequence "list all dir files"
   result = DL.WaitForSequence("lcdalloff128-64.bmp resp ", 1, 6000)
   If result = 0 Then
    prompt2 = "lcdalloff128-64.bmp' not found. Please re-run this test after you load it. Click Ok to quit."
    result = MsgBox(prompt2, VBOKOnly, "Test Vend3")
    result = 0
   End If
  End If
  DL.Pause 500

  If result <> 0  Then
   DL.ResetReceiveCounter
   DL.AddComment "list all dir files "
   DL.SendSequence "list all dir files"
   result = DL.WaitForSequence("lcdchecker128-64.bmp resp ", 1, 6000)
   If result = 0 Then
    prompt2 = "lcdchecker128-64.bmp' not found. Please re-run this test after you load it. Click Ok to quit."
    result = MsgBox(prompt2, VBOKOnly, "Test Vend3")
    result = 0
   End If
  End If
  DL.Pause 500

runCounter = 0
runLimit = 10
Do
  If result <> 0  Then
   DL.ResetReceiveCounter
   DL.AddComment "display lcdalloff128-64.bmp img  (full screen) "
   DL.SendSequence "display lcdalloff128-64.bmp img  (full screen)"
   result = DL.WaitForSequence("generic 83-xx positive resp ", 1, 6000)
  End If
  DL.Pause 500

'  If result <> 0 Then
'   MyInput1 = MsgBox ("Do you see 'Blank' image displayed in full screen?", VBYesNo, "Test Step")
'   If MyInput1 = 6 Then
'     result = 1
'   Else
'     result = 0
'   End If
'  End If


  If result <> 0  Then
   DL.ResetReceiveCounter
   DL.AddComment "PT on "
   DL.SendSequence "PT on"
   result = DL.WaitForSequence("PT 2c-xx generic resp ", 1, 6000)
  End If

   If result <> 0  Then
   DL.ResetReceiveCounter
   DL.AddComment "PT short beep "
   DL.SendSequence "PT short beep"
   result = DL.WaitForSequence("PT 0B-xx generic resp ", 1, 6000)
  End If

  If result <> 0  Then
   DL.ResetReceiveCounter
   DL.AddComment "PT off "
   DL.SendSequence "PT off"
   result = DL.WaitForSequence("PT 2c-xx generic resp ", 1, 6000)
  End If

  If result <> 0  Then
   DL.ResetReceiveCounter
   DL.AddComment "PT on "
   DL.SendSequence "PT on"
   result = DL.WaitForSequence("PT 2c-xx generic resp ", 1, 6000)
  End If

   If result <> 0  Then
   DL.ResetReceiveCounter
   DL.AddComment "PT long beep "
   DL.SendSequence "PT long beep"
   result = DL.WaitForSequence("PT 0B-xx generic resp ", 1, 6000)
  End If

  If result <> 0  Then
   DL.ResetReceiveCounter
   DL.AddComment "PT off "
   DL.SendSequence "PT off"
   result = DL.WaitForSequence("PT 2c-xx generic resp ", 1, 6000)
  End If

  If result <> 0  Then
   DL.ResetReceiveCounter
   DL.AddComment "display lcdchecker128-64.bmp img (full screen) "
   DL.SendSequence "display lcdchecker128-64.bmp img (full screen)"
   result = DL.WaitForSequence("generic 83-xx positive resp ", 1, 6000)
  End If
  DL.Pause 500

'  If result <> 0 Then
'   MyInput1 = MsgBox ("Do you see 'Square mark' image displayed in full screen?", VBYesNo, "Test Step")
'   If MyInput1 = 6 Then
'     result = 1
'   Else
'     result = 0
'   End If
'  End If

  If result <> 0  Then
   DL.ResetReceiveCounter
   DL.AddComment "PT on "
   DL.SendSequence "PT on"
   result = DL.WaitForSequence("PT 2c-xx generic resp ", 1, 6000)
  End If

   If result <> 0  Then
   DL.ResetReceiveCounter
   DL.AddComment "PT short beep "
   DL.SendSequence "PT short beep"
   result = DL.WaitForSequence("PT 0B-xx generic resp ", 1, 6000)
  End If

  If result <> 0  Then
   DL.ResetReceiveCounter
   DL.AddComment "PT off "
   DL.SendSequence "PT off"
   result = DL.WaitForSequence("PT 2c-xx generic resp ", 1, 6000)
  End If
  
  runCounter = runCounter + 1
Loop While (runCounter < runLimit)

  If result <> 0 Then
   MyInput1 = MsgBox ("Did you see 'Blank' and 'Square mark' images displayed w/o crashing the reader?", VBYesNo, "Test Step")
   If MyInput1 = 6 Then
     result = 1
   Else
     result = 0
   End If
  End If


Else
   DL.AddComment vbCrLf & "User selected 'No'. It is not a Vend3 type reader." & vbCrLf
   result = 0
End If

  DL.SendSequence "PT off"
  resultIgnore = DL.WaitForSequence("PT 2c-xx generic resp ", 1, 3000)

DL.Pause 1500
DL.AddComment vbCrLf
PrintMyResult(result)

DL.AddComment "---------- END OF TEST ----------" & vbCrLf
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""

'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.pause 1000

If result = 0 then
  DL.AddComment Chr(13) & "Result = FAILED"
Else
  DL.AddComment Chr(13) & "Result = PASSED"
End If

If Prompting(0) = "ON" Then
  If result = 0 then
    MsgBox "Result = FAILED", VBOKOnly, "Result"
  Else 
    MsgBox "Result = PASSED", VBOKOnly, "Result"
  End If
End If

'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------

If MasterResult = 1 Then
      MasterVerdict = "PASSED"
ElseIf MasterResult = 0 Then
      MasterVerdict = "FAILED"
End If
result = MasterResult
DL.AddComment vbCrLf
DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 



