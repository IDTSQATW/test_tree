DL_SCRIPTVERSION
1
58472

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "AC100" ' !!!!! EDIT THIS !!!!!
' Objective: to verify JIRA #CS-1563
' If AT cmd had tag 9F03, config tag FFF4 (Byte 2, bits 7 & 8) can control transaction.
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result

  'Set Reader Type
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerType = result

  'Set Reader Model
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerModel = result

  'Set Reader FW version
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwVersion = result

  'Set Reader FW build
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwBuild = result

  'Set Reader General Flag
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  genFlag = result
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
      
End Sub

'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
'DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0
result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication

'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub

Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function
'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function

'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
readercheck = msgbox ("This is VP3300 & F/W ver. greater than v1.10?", vbyesno)
If result <> 0 Then
   dl.resetreceivecounter
   DL.AddComment "--- Set default config"
   DL.SendSequence "Set default config"
   result = DL.WaitForSequence("04 00", 1, 5000)
   dl.pause 500
End If

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Poll on Demand"
   DL.SendSequence "Poll on Demand"
   result = DL.WaitForSequence("01 00", 1, 2000)
   dl.pause 500
End If

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Burst Off"
   if readerType <> "NEO2" then DL.SendSequence "Burst Off"
   if readerType = "NEO2" then DL.SendSequence "Burst Off (NEO2)"
   result = DL.WaitForSequence("04 00", 1, 2000)
   dl.pause 500
End If

if readercheck = 7 then
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Set Group tag 9F66 = A0004000"
   if readerType <> "NEO2" then DL.SendSequence "Set Group 0 tag 9F66 = A0004000"
   if readerType = "NEO2" then DL.SendSequence "Set Group 90 tag 9F66 = A0004000 (NEO2)"
   result = DL.WaitForSequence("04 00", 1, 2000)
   dl.pause 500
End If
end if
'------------------------------------------------------------
for i = 1 to 3
    if result <> 0 then
    if i = 1 or i = 3 then
       dl.resetreceivecounter
       dl.addcomment vbcrlf
       DL.AddComment "--- 04-00 tag FFF4 = 01 00 01 (default)"
       if readerType <> "NEO2" then 
          if readercheck = 7 then DL.SendSequence "04-00 tag FFF4 = 01 00 01 (default)"
          if readercheck = 6 then DL.SendSequence "04-03 tag FFF4 = 01 00 01 (default) (VP3300)"
       end if
       if readerType = "NEO2" then DL.SendSequence "04-03 tag FFF4 = 01 00 01 (default) (NEO2)"
       result = DL.WaitForSequence("04 00", 1, 2000)
       dl.pause 500
    elseif i = 2 then
           dl.resetreceivecounter
           dl.addcomment vbcrlf
           DL.AddComment "--- 04-00 tag FFF4 = 01 C0 01"         
           if readerType <> "NEO2" then 
              if readercheck = 7 then DL.SendSequence "04-00 tag FFF4 = 01 C0 01"
              if readercheck = 6 then DL.SendSequence "04-03 tag FFF4 = 01 C0 01 (VP3300)"
           end if
           if readerType = "NEO2" then DL.SendSequence "04-03 tag FFF4 = 01 C0 01 (NEO2)"
           result = DL.WaitForSequence("04 00", 1, 2000)
           dl.pause 500
    end if
    end if

    If result <> 0 Then
       dl.resetreceivecounter
       dl.addcomment vbcrlf
       MsgBox "Click OK -> Tap VISA qVSDC card", VBOKOnly
       DL.AddComment "--- AT cmd w/ tag 9F03"
       DL.SendSequence "AT cmd w/ tag 9F03"
       if i = 1 or i = 3 then result = DL.WaitForSequence("02 23", 1, 5000)
       if i = 2 then 
          result = DL.WaitForSequence("02 0A", 1, 5000)
          if result <> 0 then result = DL.WaitForSequence("error code 55", 1, 5000)
       end if
       dl.pause 1500
    End If
next
'------------------------------------------------------------
DL.SendSequence "Set default config"
dl.pause 3000

DL.AddComment vbCrLf

DL.AddComment "---------- END OF TEST ----------" & vbCrLf
PrintMyResult(result)
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""
'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'DL.pause 1000
'If 0 Then
'If result = 0 then
'  DL.AddComment Chr(13) & "Result = FAILED"
'Else
'  DL.AddComment Chr(13) & "Result = PASSED"
'End If
'End If

'If Prompting(0) = "ON" Then
'  If result = 0 then
'    MsgBox "Result = FAILED", VBOKOnly, "Result"
'  Else 
'    MsgBox "Result = PASSED", VBOKOnly, "Result"
'  End If
'End If
'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------
'If MasterResult = 1 Then
'      MasterVerdict = "PASSED"
'ElseIf MasterResult = 0 Then
'      MasterVerdict = "FAILED"
'End If
'result = MasterResult
'DL.AddComment vbCrLf
'DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 

Sub DL_OnSend()
    usDataLen = DL.OnSend_GetSize() - 2
    If usDataLen > 0 Then
        crcStr = DL.CalcChecksum("CRC-CCITT", DL.OnSend_GetData("H"), "H", 1, usDataLen) 
        ' Write result to the last two bytes of the sequence
        DL.OnSend_Poke usDataLen + 1, CInt("&h" + Right(crcStr, 2)) ' low byte
        DL.OnSend_Poke usDataLen + 2, CInt("&h" + Left(crcStr, 2)) ' high byte
    End If
End Sub
