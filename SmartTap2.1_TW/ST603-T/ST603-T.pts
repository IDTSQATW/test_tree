DL_SCRIPTVERSION
1
17977

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "ST603-T" ' !!!!! EDIT THIS !!!!!
' Objective: to verify auto output, cmd 01-0C (VAS card)
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
   'Display Test Case Number and Description     
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()
   Prompting(0) = result
      
   'Display Test Steps   
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   Prompting(1) = result

   'Set Docklight COM Port     
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   COM_Port(1) = result

   'Set Reader Baud Rate
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   POSBaudRate(1) = result

   'Set Reader Type
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   readerType = result

   'Set Reader Model
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   readerModel = result

   'Set Reader FW version
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   fwVersion = result

   'Set Reader FW build
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   fwBuild = result

   'Set Reader General Flag
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   fwGF = result
Loop

Sub StepPrompt(PromptString)
    DL.AddComment PromptString
    If Prompting(1) = "ON" Then
       MsgBox PromptString, VBOKOnly, "Test Step"
    Else
    End If
End Sub
'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0
countf = 0
vivotech = 0
idtech = 0
failcount = 0

result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""
'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication
'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
End If

Sub PrintMyResult(ResultX)
    If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
       MasterResult = 1
       DL.AddComment "Result = PASSED"
    Else
       MasterResult = 0
       DL.AddComment "Result = FAILED"
    End If
End Sub

Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function
'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
         DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
         MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function
'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
If result <> 0 Then
   dl.resetreceivecounter
   DL.AddComment "--- 04-09 reset to default"
   DL.SendSequence "04-09"
   result = DL.WaitForSequence("04 00", 1, 6000)
   dl.pause 500
End If

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 01-01 - Auto Poll"
   DL.SendSequence "01-01 - Auto Poll"
   result = DL.WaitForSequence("01 00", 1, 2000)
   dl.pause 500
End If

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Burst mode OFF"
   if readerType <> "NEO2" then DL.SendSequence "Burst mode OFF"
   if readerType = "NEO2" then DL.SendSequence "Burst mode OFF (NEO2)"
   result = DL.WaitForSequence("04 00", 1, 3000)
   dl.pause 500
End If

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- C7-65 set private key"
   DL.SendSequence "C7-65 set private key"
   result = DL.WaitForSequence("C7 00", 1, 2000)
   dl.pause 500
End If

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 01-0D - Auto output = for good & bad reads"
   DL.SendSequence "01-0D - Auto output = for good & bad reads"
   result = DL.WaitForSequence("01 00", 1, 2000)
   dl.pause 500
End If
'------------------------------------------------------------
for i = 2 to 3
    if i = 2 then 
       If result <> 0 Then
          dl.resetreceivecounter
          dl.addcomment vbcrlf & "======================================================="
          DL.AddComment "--- 01-0C - Data output =  Simplified output mode"
          DL.SendSequence "01-0C - Data output =  Simplified output mode"
          result = DL.WaitForSequence("01 00", 1, 2000)
          dl.pause 500
       End If
    end if

    if i = 3 then 
       If result <> 0 Then
          dl.resetreceivecounter
          dl.addcomment vbcrlf & "======================================================="
          DL.AddComment "--- 01-0C - Data output =  Tags only"
          DL.SendSequence "01-0C - Data output =  Tags only"
          result = DL.WaitForSequence("01 00", 1, 2000)
          dl.pause 500
       End If
    end if
    '------------------------------------------------------------9 terminal type
    for j = 1 to 9
        if j = 1 then 
           if result <> 0 then
              dl.resetreceivecounter
              dl.addcomment vbcrlf
              DL.AddComment "--- Case 0.1 - Get VAS Only"
              DL.SendSequence "Case 0.1 - Get VAS Only"
              result = DL.WaitForSequence("04 00", 1, 2000)
              dl.pause 500
              cmd = "Case 0.1 - Get VAS Only"
           end if
           if result <> 0 then
              dl.resetreceivecounter
              dl.addcomment vbcrlf
              DL.AddComment "--- 04-00 Terminal Mode = Get VAS Only"
              DL.SendSequence "04-00 Terminal Mode = Get VAS Only"
              result = DL.WaitForSequence("04 00", 1, 2000)
              dl.pause 500
           end if
        end if

        if j = 2 then 
           if result <> 0 then
              dl.resetreceivecounter
              dl.addcomment vbcrlf
              DL.AddComment "--- Case 0.3 - Secure Get VAS Only"
              DL.SendSequence "Case 0.3 - Secure Get VAS Only"
              result = DL.WaitForSequence("04 00", 1, 2000)
              dl.pause 500
              cmd = "Case 0.3 - Secure Get VAS Only"
           end if
           if result <> 0 then
              dl.resetreceivecounter
              dl.addcomment vbcrlf
              DL.AddComment "--- 04-00 Terminal Mode = Secure Get VAS Only"
              DL.SendSequence "04-00 Terminal Mode = Secure Get VAS Only"
              result = DL.WaitForSequence("04 00", 1, 2000)
              dl.pause 500
           end if
        end if

        if j = 3 then 
           if result <> 0 then
              dl.resetreceivecounter
              dl.addcomment vbcrlf
              DL.AddComment "--- Case 0.6 - Get VAS AND Payment"
              DL.SendSequence "Case 0.6 - Get VAS AND Payment"
              result = DL.WaitForSequence("04 00", 1, 2000)
              dl.pause 500
              cmd = "Case 0.6 - Get VAS AND Payment"
           end if
           if result <> 0 then
              dl.resetreceivecounter
              dl.addcomment vbcrlf
              DL.AddComment "--- 04-00 Terminal Mode = Get VAS AND Payment"
              DL.SendSequence "04-00 Terminal Mode = Get VAS AND Payment"
              result = DL.WaitForSequence("04 00", 1, 2000)
              dl.pause 500
           end if
        end if

        if j = 4 then 
           if result <> 0 then
              dl.resetreceivecounter
              dl.addcomment vbcrlf
              DL.AddComment "--- Case 0.8 - Secure Get VAS AND Payment"
              DL.SendSequence "Case 0.8 - Secure Get VAS AND Payment"
              result = DL.WaitForSequence("04 00", 1, 2000)
              dl.pause 500
              cmd = "Case 0.8 - Secure Get VAS AND Payment"
           end if
           if result <> 0 then
              dl.resetreceivecounter
              dl.addcomment vbcrlf
              DL.AddComment "--- 04-00 Terminal Mode = Secure Get VAS AND Payment"
              DL.SendSequence "04-00 Terminal Mode = Secure Get VAS AND Payment"
              result = DL.WaitForSequence("04 00", 1, 2000)
              dl.pause 500
           end if
        end if

        if j = 5 then 
           if result <> 0 then
              dl.resetreceivecounter
              dl.addcomment vbcrlf
              DL.AddComment "--- Case 0.13 - Get VAS OR Payment"
              DL.SendSequence "Case 0.13 - Get VAS OR Payment"
              result = DL.WaitForSequence("04 00", 1, 2000)
              dl.pause 500
              cmd = "Case 0.13 - Get VAS OR Payment"
           end if
           if result <> 0 then
              dl.resetreceivecounter
              dl.addcomment vbcrlf
              DL.AddComment "--- 04-00 Terminal Mode = Get VAS OR Payment"
              DL.SendSequence "04-00 Terminal Mode = Get VAS OR Payment"
              result = DL.WaitForSequence("04 00", 1, 2000)
              dl.pause 500
           end if
        end if

        if j = 6 then 
           if result <> 0 then
              dl.resetreceivecounter
              dl.addcomment vbcrlf
              DL.AddComment "--- Case 0.14 - Secure Get VAS OR Payment"
              DL.SendSequence "Case 0.14 - Secure Get VAS OR Payment"
              result = DL.WaitForSequence("04 00", 1, 2000)
              dl.pause 500
              cmd = "Case 0.14 - Secure Get VAS OR Payment"
           end if
           if result <> 0 then
              dl.resetreceivecounter
              dl.addcomment vbcrlf
              DL.AddComment "--- 04-00 Terminal Mode = Secure Get VAS OR Payment"
              DL.SendSequence "04-00 Terminal Mode = Secure Get VAS OR Payment"
              result = DL.WaitForSequence("04 00", 1, 2000)
              dl.pause 500
           end if
        end if

        if j = 7 then 
           if result <> 0 then
              dl.resetreceivecounter
              dl.addcomment vbcrlf
              DL.AddComment "--- Case 0.5 - Push VAS Only"
              DL.SendSequence "Case 0.5 - Push VAS Only"
              result = DL.WaitForSequence("04 00", 1, 2000)
              dl.pause 500
              cmd = "Case 0.5 - Push VAS Only"
           end if
           if result <> 0 then
              dl.resetreceivecounter
              dl.addcomment vbcrlf
              DL.AddComment "--- 04-00 Terminal Mode = Push VAS Only"
              DL.SendSequence "04-00 Terminal Mode = Push VAS Only"
              result = DL.WaitForSequence("04 00", 1, 2000)
              dl.pause 500
           end if
        end if

        if j = 8 then 
           if result <> 0 then
              dl.resetreceivecounter
              dl.addcomment vbcrlf
              DL.AddComment "--- Case 0.10 - Push VAS AND Payment"
              DL.SendSequence "Case 0.10 - Push VAS AND Payment"
              result = DL.WaitForSequence("04 00", 1, 2000)
              dl.pause 500
              cmd = "Case 0.10 - Push VAS AND Payment"
           end if
           if result <> 0 then
              dl.resetreceivecounter
              dl.addcomment vbcrlf
              DL.AddComment "--- 04-00 Terminal Mode = Push VAS AND Payment"
              DL.SendSequence "04-00 Terminal Mode = Push VAS AND Payment"
              result = DL.WaitForSequence("04 00", 1, 2000)
              dl.pause 500
           end if
        end if

        if j = 9 then 
           if result <> 0 then
              dl.resetreceivecounter
              dl.addcomment vbcrlf
              DL.AddComment "--- 04-00 Terminal Mode = Payment Only"
              DL.SendSequence "04-00 Terminal Mode = Payment Only"
              result = DL.WaitForSequence("04 00", 1, 2000)
              dl.pause 500
              cmd = "Case 0.1 - Payment Only"
           end if
        end if

        if result <> 0 then
           dl.resetreceivecounter
           dl.addcomment vbcrlf
           DL.AddComment "--- VAS data auto output"
           msgbox "Tap phone (Merchant APP: " & cmd & ") --> Click OK", vbokonly
           if j = 3 or j = 4 or j = 8 then
              if i = 2 then result = DL.WaitForSequence("02 23", 1, 2000)
              if i = 3 then result = DL.WaitForSequence("23", 1, 2000)
              if result <> 0 then result = DL.WaitForSequence("02-xx resp " & j & "_" & i, 1, 2000)
           else
              result = DL.WaitForSequence("02-xx resp " & j & "_" & i, 1, 2000)
           end if
           if i = 2 and j = 7 then ReverseResult(result)
           dl.pause 500
           if result = 0 then 
              failcount = failcount + 1
              dl.addcomment vbcrlf & "** FAIL"
              result = 1
           end if
        end if
    next
next

if failcount <> 0 then result = 0

DL.AddComment vbCrLf
'============================================================
DL.AddComment "---------- END OF TEST ----------" & vbCrLf
PrintMyResult(result)

Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""
'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'DL.pause 1000
'If result = 0 then
'   DL.AddComment Chr(13) & "Result = FAILED"
'Else
'   DL.AddComment Chr(13) & "Result = PASSED"
'End If

'If Prompting(0) = "ON" Then
'   If result = 0 then
'      MsgBox "Result = FAILED", VBOKOnly, "Result"
'   Else 
'      MsgBox "Result = PASSED", VBOKOnly, "Result"
'   End If
'End If
'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------
'If MasterResult = 1 Then
'   MasterVerdict = "PASSED"
'ElseIf MasterResult = 0 Then
'       MasterVerdict = "FAILED"
'End If
'result = MasterResult
'DL.AddComment vbCrLf
'DL.AddComment "MASTER RESULT = " & MasterVerdict
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
   FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
       FileOutput.WriteLine "1|PASS|OK"
End If
FileOutput.CloseFile

Sub DL_OnSend()
    usDataLen = DL.OnSend_GetSize() - 2
    If usDataLen > 0 Then
        crcStr = DL.CalcChecksum("CRC-CCITT", DL.OnSend_GetData("H"), "H", 1, usDataLen) 
        ' Write result to the last two bytes of the sequence
        DL.OnSend_Poke usDataLen + 1, CInt("&h" + Right(crcStr, 2)) ' low byte
        DL.OnSend_Poke usDataLen + 2, CInt("&h" + Left(crcStr, 2)) ' high byte
    End If
End Sub
