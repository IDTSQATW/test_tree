DL_SCRIPTVERSION
1
7524

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "ST200-1" ' !!!!! EDIT THIS !!!!!
' Objective: TS-9987 "when AT cmd + AppleVAS + tag DFEF7A applied at the same time"
' Test w/ VISA MSD card (ENC OFF)
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result

  'Set Reader Type
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerType = result

  'Set Reader Model
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerModel = result

  'Set Reader FW version
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwVersion = result

  'Set Reader FW build
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwBuild = result

  'Set Reader General Flag
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  genFlag = result
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
      
End Sub

'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
dim r(13)
max=1
min=0
Randomize
errCnt = 0
caseValid = 0
countf = 0
result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication
'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub

Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function

sub countfail()
    if readerType <> "NEO2" then
    for i = 1 to 11
        if r(i) = 0 then
           countf = countf + 1
        end if
    next
    else
    for i = 1 to 2
        if r(i) = 0 then
           countf = countf + 1
        end if
    next
    end if
end sub
'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function
'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
if readerType = "GR" or readerType = "NEO1" then
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 04-F0"
   DL.SendSequence "04-F0"
   result = DL.WaitForSequence("burst off", 1, 2000)
   dl.pause 15000
End If
end if
'------------------------------------------------------------
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Poll on Demand"
   DL.SendSequence "Poll on Demand"
   result = DL.WaitForSequence("Poll Response", 1, 2000)
   dl.pause 500
else 
   countf = countf + 1
End If
'------------------------------------------------------------
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Burst mode Off"
   if readerType <> "NEO2" then DL.SendSequence "burst mode off"
   if readerType = "NEO2" then DL.SendSequence "burst mode off (NEO2)"
   result = DL.WaitForSequence("burst off", 1, 2000)
   dl.pause 500
else 
   countf = countf + 1
End If
'------------------------------------------------------------
for k = 1 to 2

If result <> 0 Then
   a1 = MsgBox("Click OK --> Tap VISA MSD (NEO2: Tap VISA qVSDC)", VBOKOnly)
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   if k = 1 then
      DL.AddComment "--- 02-40 VAS_AND_PAY"
      DL.SendSequence "02-40 #9987 VAS_AND_PAY"
   elseif k = 2 then
      DL.AddComment "--- 02-40 VAS_OR_PAY"
      DL.SendSequence "02-40 #9987 VAS_OR_PAY"
   end if
   result = DL.WaitForSequence("02-01 resp", 1, 10000)

   if result <> 0 then
      if readerType <> "NEO2" then
      r(1) = dl.waitforsequence("Tag 50", 1, 1000)
           if r(1) = 0 then dl.addcomment vbcrlf & "Tag 50...FAIL!"
      r(2) = dl.waitforsequence("Tag 84", 1, 1000)
           if r(2) = 0 then dl.addcomment vbcrlf & "Tag 84...FAIL!"
      r(3) = dl.waitforsequence("Tag 9F06", 1, 1000)
           if r(3) = 0 then dl.addcomment vbcrlf & "Tag 9F06...FAIL!"
      r(4) = dl.waitforsequence("Tag 9F35", 1, 1000)
           if r(4) = 0 then dl.addcomment vbcrlf & "Tag 9F35...FAIL!"
      r(5) = dl.waitforsequence("Tag 9F39", 1, 1000)
           if r(5) = 0 then dl.addcomment vbcrlf & "Tag 9F39...FAIL!"
      r(6) = dl.waitforsequence("Tag FFEE01", 1, 1000)
           if r(6) = 0 then dl.addcomment vbcrlf & "Tag FFEE01...FAIL!"
      r(7) = dl.waitforsequence("Track 1", 1, 1000)
           if r(7) = 0 then dl.addcomment vbcrlf & "Track 1...FAIL!"
      r(8) = dl.waitforsequence("Track 2", 1, 1000)
           if r(8) = 0 then dl.addcomment vbcrlf & "Track 2...FAIL!"
      r(9) = dl.waitforsequence("Tag DFEE26", 1, 1000)
           if r(9) = 0 then dl.addcomment vbcrlf & "Tag DFEE26...FAIL!"
      r(10) = dl.waitforsequence("Tag DFEF7B", 1, 1000)
           if r(10) = 0 then dl.addcomment vbcrlf & "Tag DFEF7B...FAIL!"
      r(11) = dl.waitforsequence("Tag FFEE08", 1, 1000)
           if r(11) = 0 then dl.addcomment vbcrlf & "Tag FFEE08...FAIL!"
      else
      r(1) = dl.waitforsequence("Tag DFEF7B", 1, 1000)
           if r(1) = 0 then dl.addcomment vbcrlf & "Tag DFEF7B...FAIL!"      
      r(2) = dl.waitforsequence("Tag 57", 1, 1000)
           if r(2) = 0 then dl.addcomment vbcrlf & "Tag 57...FAIL!"     
      end if

      countfail()
   else 
      countf = countf + 1
   end if
   dl.pause 500
else 
   countf = countf + 1
End If

next
'------------------------------------------------------------
if countf <> 0 then
   result = 0
   dl.addcomment vbcrlf
   dl.addcomment "=============="
   dl.addcomment "FAIL items: " & countf
   dl.addcomment "=============="
else
   result = 1
end if

DL.AddComment vbcrlf & "---------- END OF TEST ----------" & vbCrLf
PrintMyResult(result)
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""

'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'DL.pause 1000

'If result = 0 then
'  DL.AddComment Chr(13) & "Result = FAILED"
'Else
'  DL.AddComment Chr(13) & "Result = PASSED"
'End If

'If Prompting(0) = "ON" Then
'  If result = 0 then
'    MsgBox "Result = FAILED", VBOKOnly, "Result"
'  Else 
'    MsgBox "Result = PASSED", VBOKOnly, "Result"
'  End If
'End If
'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------

If MasterResult = 1 Then
      MasterVerdict = "PASSED"
ElseIf MasterResult = 0 Then
      MasterVerdict = "FAILED"
End If
result = MasterResult
DL.AddComment vbCrLf
DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 

Sub DL_OnSend()
    usDataLen = DL.OnSend_GetSize() - 2
    If usDataLen > 0 Then
        crcStr = DL.CalcChecksum("CRC-CCITT", DL.OnSend_GetData("H"), "H", 1, usDataLen) 
        ' Write result to the last two bytes of the sequence
        DL.OnSend_Poke usDataLen + 1, CInt("&h" + Right(crcStr, 2)) ' low byte
        DL.OnSend_Poke usDataLen + 2, CInt("&h" + Left(crcStr, 2)) ' high byte
    End If
End Sub
