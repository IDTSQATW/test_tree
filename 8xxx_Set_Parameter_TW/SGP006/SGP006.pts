DL_SCRIPTVERSION
1
1964

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "SGP006" ' !!!!! EDIT THIS !!!!!
' Modify from SGP039
' [20200410] for VP6300, modify by NEO 2 IDG Supplement for VP6300 STD v1.0.9 Draft
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result

  'Set Reader Type
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerType = result

  'Set Reader Model
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerModel = result

  'Set Reader FW version
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwVersion = result

  'Set Reader FW build
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwBuild = result

  'Set Reader General Flag
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  genFlag = result
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
      
End Sub

'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000
DL.StartCommunication

'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub

Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function

'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function
'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
readercheck = msgbox ("Is this SRED reader?", vbyesno)

Dim counter
Dim fffb
Dim P1
Dim P2
Dim P3
Dim P4

counter = 0
fffb = 0
P1 = 0
P2 = 0
P3 = 0
P4 = 0

If result <> 0 Then
  dl.addcomment "===================================== Set parameter"
  dl.addcomment "==================================================="
  DL.ResetReceiveCounter
  DL.AddComment "--- 9f 4e"
  DL.SendSequence " 9f 4e"
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- 9f 02"
  DL.SendSequence " 9f 02"
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- 9f 03"
  DL.SendSequence " 9f 03"
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- 9f 33"
  DL.SendSequence " 9f 33"
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- 9f 40"
  DL.SendSequence " 9f 40"
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- 9f 1a"
  DL.SendSequence " 9f 1a"
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- 9f 1b"
  DL.SendSequence " 9f 1b"
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- 9f 35"
  DL.SendSequence " 9f 35"
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- 5f 2a"
  DL.SendSequence " 5f 2a"
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- 9c"
  DL.SendSequence " 9c"
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- ff fc"
  if readerType <> "NEO2" then 
     DL.SendSequence "ff fc"
  elseif readerType = "NEO2" then 
     DL.SendSequence "ff fc (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- ff fd"
  if readerType <> "NEO2" then 
     DL.SendSequence " ff fd"
  elseif readerType = "NEO2" then 
     DL.SendSequence " ff fd (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- ff fe"
  if readerType <> "NEO2" then 
     DL.SendSequence " ff fe"
  elseif readerType = "NEO2" then 
     DL.SendSequence " ff fe (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- ff ff"
  if readerType <> "NEO2" then 
     DL.SendSequence " ff ff"
  elseif readerType = "NEO2" then 
     DL.SendSequence " ff ff (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- ff fb"
  if readerType <> "NEO2" then 
     DL.SendSequence " ff fb 02"
  elseif readerType = "NEO2" then 
     DL.SendSequence " ff fb 02 (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 1000)

  if result = 1 then 
     fffb = 2
  else
     if readerType <> "NEO2" then 
        dl.sendsequence "ff fb 01"
     elseif readerType = "NEO2" then 
        dl.sendsequence "ff fb 01 (NEO2)"
     end if
     result = dl.waitforsequence("Set Parameter Response", 1, 1000)

     if result = 1 then
        fffb = 1
     else
        if readerType <> "NEO2" then 
           dl.sendsequence "ff fb 03"
        elseif readerType = "NEO2" then 
           dl.sendsequence "ff fb 03 (NEO2)"
        end if
        result = dl.waitforsequence("Set Parameter Response", 1, 1000)
        if result = 1 then
           fffb = 3
        end if
     end if        
  end if
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- ff fa"
  if readerType <> "NEO2" then 
     DL.SendSequence " ff fa"
  elseif readerType = "NEO2" then 
     DL.SendSequence " ff fa (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- ff f9"
  if readerType <> "NEO2" then 
     DL.SendSequence " ff f9"
  elseif readerType = "NEO2" then 
     DL.SendSequence " ff f9 (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- ff f8"
  if readerType <> "NEO2" then 
     DL.SendSequence " ff f8"
  elseif readerType = "NEO2" then 
     DL.SendSequence " ff f8 (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- ff f7"
  if readerType <> "NEO2" then 
     DL.SendSequence " ff f7"
  elseif readerType = "NEO2" then
     if readercheck = 6 then DL.SendSequence "ff f7 (NEO2_SRED)"
     if readercheck = 7 then DL.SendSequence "ff f7 (NEO2)"
  else
     DL.SendSequence " ff f7"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- ff f5"
  if readerType <> "NEO2" then 
     DL.SendSequence " ff f5"
  elseif readerType = "NEO2" then 
     DL.SendSequence " ff f5 (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- ff f4"
  if readerType <> "NEO2" then 
     DL.SendSequence " ff f4"
  elseif readerType = "NEO2" then 
     DL.SendSequence " ff f4 (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- 9f 66"
  DL.SendSequence " 9f 66"
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- ff f2"
  if readerType <> "NEO2" then 
     DL.SendSequence " ff f2"
  elseif readerType = "NEO2" then 
     DL.SendSequence " ff f2 (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- ff f1"
  if readerType <> "NEO2" then 
     DL.SendSequence " ff f1"
  elseif readerType = "NEO2" then 
     DL.SendSequence " ff f1 (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- ff f3"
  if readerType <> "NEO2" then 
     DL.SendSequence " ff f3"
  elseif readerType = "NEO2" then 
     DL.SendSequence " ff f3 (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- ff f0"
  if readerType <> "NEO2" then 
     DL.SendSequence " ff f0"
  elseif readerType = "NEO2" then 
     DL.SendSequence " ff f0 (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- df 63"
  if readerType <> "NEO2" then 
     DL.SendSequence " df 63"
  elseif readerType = "NEO2" then 
     DL.SendSequence " df 63 (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- df 64"
  if readerType <> "NEO2" then 
     DL.SendSequence " df 64"
  elseif readerType = "NEO2" then 
     DL.SendSequence " df 64 (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- df 65"
  if readerType <> "NEO2" then 
     DL.SendSequence " df 65"
  elseif readerType = "NEO2" then 
     DL.SendSequence " df 65 (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- df 66"
  if readerType <> "NEO2" then 
     DL.SendSequence " df 66"
  elseif readerType = "NEO2" then 
     DL.SendSequence " df 66 (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- 5f 36"
  DL.SendSequence " 5f 36"
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- 9f 09"
  DL.SendSequence " 9f 09"
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- 9f 15"
  DL.SendSequence " 9f 15"
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- 9f 53"
  DL.SendSequence " 9f 53"
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- 9f 6d"
  DL.SendSequence " 9f 6d"
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- df 28"
  if readerType <> "NEO2" then 
     DL.SendSequence " df 28"
  elseif readerType = "NEO2" then 
     DL.SendSequence " df 28 (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
  DL.Pause 200
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- df 29"
  if readerType <> "NEO2" then 
     DL.SendSequence " df 29"
  elseif readerType = "NEO2" then 
     DL.SendSequence " df 29 (NEO2)"
  end if
  result = DL.WaitForSequence("Set Parameter Response", 1, 3000)
  if result = 0 then 
     P1 = P1 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  end if
'------------------------------------------------------------
End If

if P1 = 0 then
   result = 1
else
   result = 1
   dl.addcomment vbcrlf
   dl.addcomment "FAIL items (change value of config) = " & P1
end if

If result <> 0 Then
  dl.addcomment vbcrlf
  dl.addcomment "===================================== Get parameter"
  dl.addcomment "==================================================="
  DL.Pause 500
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- Get EMV Parameters"
  DL.SendSequence " Get EMV Parameters"
  dl.pause 500

  dl.addcomment vbcrlf
  result = DL.WaitForSequence("9f 4e Response", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
     DL.AddComment "--- 9f 4e: PASS"
  end if

  result = DL.WaitForSequence("9f 02 Response", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
     DL.AddComment "--- 9f 02: PASS"
  end if

  result = DL.WaitForSequence("9f 03 Response", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
     DL.AddComment "--- 9f 03: PASS"
  end if

  result = DL.WaitForSequence("9f 33 Response", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 33: PASS"
  end if

  result = DL.WaitForSequence("9f 40 Response", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 40: PASS"
  end if

  result = DL.WaitForSequence("9f 1a Response", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 1a: PASS"
  end if

  result = DL.WaitForSequence("9f 1b Response", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
     DL.AddComment "--- 9f 1b: PASS"
  end if

  result = DL.WaitForSequence("9f 35 Response", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 35: PASS"
  end if

  result = DL.WaitForSequence("5f 2a Response", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 5f 2a: PASS"
  end if

  result = DL.WaitForSequence("9c Response", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9c: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff fc Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff fc Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff fc: PSSS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff fd Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff fd Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff fd: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff fe Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff fe Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff fe: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff ff Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff ff Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff ff: PASS"
  end if

  if fffb = 2 then
     if readerType <> "NEO2" then 
        result = DL.WaitForSequence("ff fb Response 02", 1, 3000)
     elseif readerType = "NEO2" then 
        result = DL.WaitForSequence("ff fb Response 02 (NEO2)", 1, 3000)
     end if
  elseif fffb = 1 then
         if readerType <> "NEO2" then 
            result = dl.waitforsequence("ff fb Response 01", 1, 3000)
         elseif readerType = "NEO2" then 
            result = dl.waitforsequence("ff fb Response 01 (NEO2)", 1, 3000)
         end if
  elseif fffb = 3 then
         if readerType <> "NEO2" then 
            result = dl.waitforsequence("ff fb Response 03", 1, 3000)
         elseif readerType = "NEO2" then 
            result = dl.waitforsequence("ff fb Response 03 (NEO2)", 1, 3000)
         end if  
  else result = 0
  end if
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff fb: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff fa Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff fa Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff fa: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f9 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f9 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff f9: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f8 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f8 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff f8: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f7 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     if readercheck = 6 then result = DL.WaitForSequence("ff f7 Response (NEO2_SRED)", 1, 3000)
     if readercheck = 7 then result = DL.WaitForSequence("ff f7 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff f7: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f5 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f5 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff f5: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f4 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f4 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff f4: PASS"
  end if

  result = DL.WaitForSequence("9f 66 Response", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 66: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f2 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f2 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff f2: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f1 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f1 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff f1: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f3 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f3 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff f3: PASS"
  end if

  if readerType <> "NEO2" then result = DL.WaitForSequence("ff f0 Response", 1, 3000)
  if readerType = "NEO2" then result = DL.WaitForSequence("ff f0 Response (NEO2)", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff f0: PASS"
  end if

  if readerType <> "NEO2" then result = DL.WaitForSequence("df 63 Response", 1, 3000)
  if readerType = "NEO2" then result = DL.WaitForSequence("df 63 Response (NEO2)", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- df 63: PASS"
  end if

  if readerType <> "NEO2" then result = DL.WaitForSequence("df 64 Response", 1, 3000)
  if readerType = "NEO2" then result = DL.WaitForSequence("df 64 Response (NEO2)", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- df 64: PASS"
  end if

  if readerType <> "NEO2" then result = DL.WaitForSequence("df 65 Response", 1, 3000)
  if readerType = "NEO2" then result = DL.WaitForSequence("df 65 Response (NEO2)", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- df 65: PASS"
  end if

  if readerType <> "NEO2" then result = DL.WaitForSequence("df 66 Response", 1, 3000)
  if readerType = "NEO2" then result = DL.WaitForSequence("df 66 Response (NEO2)", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- df 66: PASS"
  end if

  result = DL.WaitForSequence("5f 36 Response", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 5f 36: PASS"
  end if

  result = DL.WaitForSequence("9f 09 Response", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 09: PASS"
  end if

  result = DL.WaitForSequence("9f 15 Response", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 15: PASS"
  end if

  result = DL.WaitForSequence("9f 53 Response", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 53: PASS"
  end if

  result = DL.WaitForSequence("9f 6d Response", 1, 3000)
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 6d: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("df 28 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("df 28 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- df 28: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("df 29 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("df 29 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P2 = P2 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- df 29: PASS"
  end if
end if

if P2 = 0 then
   result = 1
else
   result = 1
   dl.addcomment vbcrlf
   dl.addcomment "FAIL items (check value of config after changed) = " & P2
end if

'==========================================================================
'Reboot DUT
'==========================================================================
If result <> 0 Then
   prompt2 = "Power cycle the reader by manually. After rebooting Press OK."
   result = MsgBox(prompt2, VBOKOnly, "Test")
   DL.AddComment vbCrLf & "Reader has rebooted ..." & vbCRLf
   DL.Pause 12000
end if
'==========================================================================
'==========================================================================
If result <> 0 Then
  dl.addcomment vbcrlf
  dl.addcomment "=================== Reboot DUT, get parameter again"
  dl.addcomment "==================================================="
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- Get EMV Parameters"
  DL.SendSequence " Get EMV Parameters"
  dl.pause 500

  dl.addcomment vbcrlf
  result = DL.WaitForSequence("9f 4e Response", 1, 3000)
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 4e: PASS"
  end if

  result = DL.WaitForSequence("9f 02 Response", 1, 3000)
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 02: PASS"
  end if

  result = DL.WaitForSequence("9f 03 Response", 1, 3000)
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 03: PASS"
  end if

  result = DL.WaitForSequence("9f 33 Response", 1, 3000)
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 33: PASS"
  end if

  result = DL.WaitForSequence("9f 40 Response", 1, 3000)
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 40: PASS"
  end if

  result = DL.WaitForSequence("9f 1a Response", 1, 3000)
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 1a: PASS"
  end if

  result = DL.WaitForSequence("9f 1b Response", 1, 3000)
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 1b: PASS"
  end if

  result = DL.WaitForSequence("9f 35 Response", 1, 3000)
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 35: PASS"
  end if

  result = DL.WaitForSequence("5f 2a Response", 1, 3000)
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 5f 2a: PSSS"
  end if

  result = DL.WaitForSequence("9c Response", 1, 3000)
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9c: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff fc Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff fc Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff fc: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff fd Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff fd Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff fd: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff fe Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff fe Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff fe: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff ff Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff ff Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff ff: PASS"
  end if

  if fffb = 2 then
     if readerType <> "NEO2" then 
        result = DL.WaitForSequence("ff fb Response 02", 1, 3000)
     elseif readerType = "NEO2" then 
        result = DL.WaitForSequence("ff fb Response 02 (NEO2)", 1, 3000)
     end if
  elseif fffb = 1 then
         if readerType <> "NEO2" then 
            result = dl.waitforsequence("ff fb Response 01", 1, 3000)
         elseif readerType = "NEO2" then 
            result = dl.waitforsequence("ff fb Response 01 (NEO2)", 1, 3000)
         end if
  elseif fffb = 3 then
         if readerType <> "NEO2" then 
            result = dl.waitforsequence("ff fb Response 03", 1, 3000)
         elseif readerType = "NEO2" then 
            result = dl.waitforsequence("ff fb Response 03 (NEO2)", 1, 3000)
         end if
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff fb: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff fa Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff fa Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff fa: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f9 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f9 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff f9: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f8 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f8 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff f8: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f7 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     if readercheck = 6 then result = DL.WaitForSequence("ff f7 Response (NEO2_SRED)", 1, 3000)
     if readercheck = 7 then result = DL.WaitForSequence("ff f7 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff f7: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f5 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f5 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff f5: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f4 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f4 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff f4: PASS"
  end if

  result = DL.WaitForSequence("9f 66 Response", 1, 3000)
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 66: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f2 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f2 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff f2: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f1 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f1 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff f1: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f3 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f3 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff f3: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f0 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f0 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- ff f0: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("df 63 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("df 63 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- df 63: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("df 64 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("df 64 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- df 64: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("df 65 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("df 65 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- df 65: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("df 66 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("df 66 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- df 66: PASS"
  end if

  result = DL.WaitForSequence("5f 36 Response", 1, 3000)
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 5f 36: PASS"
  end if

  result = DL.WaitForSequence("9f 09 Response", 1, 3000)
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 09: PASS"
  end if

  result = DL.WaitForSequence("9f 15 Response", 1, 3000)
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 15: PASS"
  end if

  result = DL.WaitForSequence("9f 53 Response", 1, 3000)
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 53: PASS"
  end if

  result = DL.WaitForSequence("9f 6d Response", 1, 3000)
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- 9f 6d: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("df 28 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("df 28 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- df 28: PASS"
  end if

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("df 29 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("df 29 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P3 = P3 + 1
     dl.addcomment vbcrlf
     dl.addcomment "**FAIL**"
  else
    DL.AddComment "--- df 29: PASS"
  end if
end if

if P3 = 0 then
   result = 1
else
   result = 1
   dl.addcomment vbcrlf
   dl.addcomment "FAIL items (check value of config after reboot) = " & P3
end if

'==========================================================================
'04-09 set config default
'==========================================================================
If result <> 0 Then
  dl.addcomment vbcrlf
  dl.addcomment "======== 04-09 set config as default, get parameter"
  dl.addcomment "==================================================="
  DL.Pause 300
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment " Default NVM"
  DL.SendSequence " Default NVM"
  result = DL.WaitForSequence("Set Parameter Response", 1, 15000)
  dl.pause 1000
End If
'==========================================================================
'==========================================================================

If result <> 0 Then
  DL.ResetReceiveCounter
  dl.addcomment vbcrlf
  DL.AddComment "--- Get EMV Parameters"
  DL.SendSequence " Get EMV Parameters"
  dl.pause 500
'------------------------------------------------------------------
  dl.addcomment vbcrlf
  result = DL.WaitForSequence("9f 4e Response", 1, 3000)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- 9f 4e Default: **FAIL**"
  else
    DL.AddComment "--- 9f 4e Default >>> As spec's definition, 04-09 did not modify this tag.: PASS"
  end if
'------------------------------------------------------------------

  result = DL.WaitForSequence("9f 02 Default Response", 1, 3000)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- 9f 02 Default: **FAIL**"
  else
    DL.AddComment "--- 9f 02 Default: PASS"
  end if
 
'------------------------------------------------------------------

  if readercheck = 7 then
  result = DL.WaitForSequence("9f 03 Default Response", 1, 3000)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- 9f 03 Default: **FAIL**"
  else
    DL.AddComment "--- 9f 03 Default: PASS"
  end if
  end if
 
'------------------------------------------------------------------

  if readercheck = 7 then
  result = DL.WaitForSequence("9f 33 Default Response", 1, 3000)
  if readerType = "NEO2" then ReverseResult(result)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- 9f 33 Default: **FAIL**"
  else
    DL.AddComment "--- 9f 33 Default: PASS"
  end if
  end if
 
'------------------------------------------------------------------

  if readercheck = 7 then
  result = DL.WaitForSequence("9f 40 Default Response", 1, 3000)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- 9f 40 Default: **FAIL**"
  else
    DL.AddComment "--- 9f 40 Default: PASS"
  end if
  end if
 
'------------------------------------------------------------------

  if readercheck = 7 then
  result = DL.WaitForSequence("9f 1a Default Response", 1, 3000)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- 9f 1a Default: **FAIL**"
  else
    DL.AddComment "--- 9f 1a Default: PASS"
  end if
  end if
 
'------------------------------------------------------------------

  if readercheck = 7 then
  result = DL.WaitForSequence("9f 1b Default Response", 1, 3000)
  if readerType = "NEO2" then ReverseResult(result)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- 9f 1b Default: **FAIL**"
  else
    DL.AddComment "--- 9f 1b Default: PASS"
  end if
  end if
 
'------------------------------------------------------------------

  if readercheck = 7 then
  result = DL.WaitForSequence("9f 35 Default Response", 1, 3000)
  if readerType = "NEO2" then ReverseResult(result)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- 9f 35 Default: **FAIL**"
  else
    DL.AddComment "--- 9f 35 Default: PASS"
  end if
  end if
 
'------------------------------------------------------------------

  if readercheck = 7 then
  result = DL.WaitForSequence("5f 2a Default Response", 1, 3000)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- 5f 2a Default: **FAIL**"
  else
    DL.AddComment "--- 5f 2a Default: PASS"
  end if
  end if
 
'------------------------------------------------------------------

  result = DL.WaitForSequence("9c Default Response", 1, 3000)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- 9c Default: **FAIL**"
  else
    DL.AddComment "--- 9c Default: PASS"
  end if
 
'------------------------------------------------------------------

  if readercheck = 7 then
  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff fc Default Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff fc Default Response (NEO2)", 1, 3000)
  end if
  if readerType = "NEO2" then ReverseResult(result)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- ff fc Default: **FAIL**"
  else
    DL.AddComment "--- ff fc Default: PASS"
  end if
  end if
 
'------------------------------------------------------------------

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff fd Default Response", 1, 3000)
  elseif readerType = "NEO2" then 
     if readercheck = 6 then result = DL.WaitForSequence("ff fd Default Response (NEO2_SRED)", 1, 3000)
     if readercheck = 7 then result = DL.WaitForSequence("ff fd Default Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- ff fd Default: **FAIL**"
  else
    DL.AddComment "--- ff fd Default: PASS"
  end if
 
'------------------------------------------------------------------

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff fe Default Response", 1, 3000)
  elseif readerType = "NEO2" then 
     if readercheck = 6 then result = DL.WaitForSequence("ff fe Default Response (NEO2_SRED)", 1, 3000)
     if readercheck = 7 then result = DL.WaitForSequence("ff fe Default Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- ff fe Default: **FAIL**"
  else
    DL.AddComment "--- ff fe Default: PASS"
  end if
 
'------------------------------------------------------------------

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff ff Default Response", 1, 3000)
  elseif readerType = "NEO2" then 
     if readercheck = 6 then result = DL.WaitForSequence("ff ff Default Response (NEO2_SRED)", 1, 3000)
     if readercheck = 7 then result = DL.WaitForSequence("ff ff Default Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- ff ff Default: **FAIL**"
  else
    DL.AddComment "--- ff ff Default: PASS"
  end if
 
'------------------------------------------------------------------

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff fb Default Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff fb Default Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- ff fb Default: **FAIL**"
  else
    DL.AddComment "--- ff fb Default: PASS"
  end if
 
'------------------------------------------------------------------

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff fa Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff fa Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- ff fa Default: **FAIL**"
  else
    DL.AddComment "--- ff fa Default >>> As spec's definition, 04-09 did not modify this tag.: PASS"
  end if
 
'------------------------------------------------------------------

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f9 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f9 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- ff f9 Default: **FAIL**"
  else
    DL.AddComment "--- ff f9 Default >>> As spec's definition, 04-09 did not modify this tag.: PASS"
  end if
 
'------------------------------------------------------------------

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f8 Default Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f8 Default Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- ff f8 Default: **FAIL**"
  else
    DL.AddComment "--- ff f8 Default: PASS"
  end if
 
'------------------------------------------------------------------

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f7 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     if readercheck = 6 then result = DL.WaitForSequence("ff f7 Response (NEO2_SRED)", 1, 3000)
     if readercheck = 7 then result = DL.WaitForSequence("ff f7 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- ff f7 Default: **FAIL**"
  else
    DL.AddComment "--- ff f7 Default >>> As spec's definition, 04-09 did not modify this tag.: PASS"
  end if
 
'------------------------------------------------------------------

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f5 Default Response", 1, 3000)
  elseif readerType = "NEO2" then 
     if readercheck = 6 then result = DL.WaitForSequence("ff f5 Default Response (NEO2_SRED)", 1, 3000)
     if readercheck = 7 then result = DL.WaitForSequence("ff f5 Default Response (NEO2)", 1, 3000)
  end if
  if readerType = "NEO2" then ReverseResult(result)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- ff f5 Default: **FAIL**"
  else
    DL.AddComment "--- ff f5 Default: PASS"
  end if
 
'------------------------------------------------------------------

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f4 Default Response", 1, 3000)
  elseif readerType = "NEO2" then 
     if readercheck = 6 then result = DL.WaitForSequence("ff f4 Default Response (NEO2_SRED)", 1, 3000)
     if readercheck = 7 then result = DL.WaitForSequence("ff f4 Default Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- ff f4 Default: **FAIL**"
  else
    DL.AddComment "--- ff f4 Default: PASS"
  end if
 
'------------------------------------------------------------------

  if readercheck = 7 then
  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("9f 66 Default Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("9f 66 Default Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- 9f 66 Default: **FAIL**"
  else
    DL.AddComment "--- 9f 66 Default: PASS"
  end if
  end if
 
'------------------------------------------------------------------

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f2 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f2 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- ff f2 Default: **FAIL**"
  else
    DL.AddComment "--- ff f2 Default >>> As spec's definition, 04-09 did not modify this tag.: PASS"
  end if
 
'------------------------------------------------------------------

  if readercheck = 7 then
  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f1 Default Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f1 Default Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- ff f1 Default: **FAIL**"
  else
    DL.AddComment "--- ff f1 Default: PASS"
  end if
  end if
 
'------------------------------------------------------------------

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f3 Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f3 Response (NEO2)", 1, 3000)
  end if
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- ff f3 Default: **FAIL**"
  else
    DL.AddComment "--- ff f3 Default >>> As spec's definition, 04-09 did not modify this tag.: PASS"
  end if
 
'------------------------------------------------------------------

  if readercheck = 7 then
  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("ff f0 Default Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("ff f0 Default Response (NEO2)", 1, 3000)
  end if
  if readerType = "NEO2" then ReverseResult(result)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- ff f0 Default: **FAIL**"
  else
    DL.AddComment "--- ff f0 Default: PASS"
  end if
  end if
 
'------------------------------------------------------------------

  if readercheck = 7 then
  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("df 63 Default Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("df 63 Default Response (NEO2)", 1, 3000)
  end if
  if readerType = "NEO2" then ReverseResult(result)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- df 63 Default: **FAIL**"
  else
    DL.AddComment "--- df 63 Default: PASS"
  end if
  end if
 
'------------------------------------------------------------------

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("df 64 Default Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("df 64 Default Response (NEO2)", 1, 3000)
  end if
  if readerType = "NEO2" then ReverseResult(result)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- df 64 Default: **FAIL**"
  else
    DL.AddComment "--- df 64 Default: PASS"
  end if
 
'------------------------------------------------------------------

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("df 65 Default Response", 1, 3000)
  elseif readerType = "NEO2" then 
     if readercheck = 6 then result = DL.WaitForSequence("df 65 Default Response (NEO2_SRED)", 1, 3000)
     if readercheck = 7 then result = DL.WaitForSequence("df 65 Default Response (NEO2)", 1, 3000)
  end if
  if readerType = "NEO2" then ReverseResult(result)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- df 65 Default: **FAIL**"
  else
    DL.AddComment "--- df 65 Default: PASS"
  end if
 
'------------------------------------------------------------------

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("df 66 Default Response", 1, 3000)
  elseif readerType = "NEO2" then 
     if readercheck = 6 then result = DL.WaitForSequence("df 66 Default Response (NEO2_SRED)", 1, 3000)
     if readercheck = 7 then result = DL.WaitForSequence("df 66 Default Response (NEO2)", 1, 3000)
  end if
  if readerType = "NEO2" then ReverseResult(result)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- df 66 Default: **FAIL**"
  else
    DL.AddComment "--- df 66 Default: PASS"
  end if
 
'------------------------------------------------------------------

  if readercheck = 7 then
  result = DL.WaitForSequence("5f 36 Default Response", 1, 3000)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- 5f 36 Default: **FAIL**"
  else
    DL.AddComment "--- 5f 36 Default: PASS"
  end if
  end if
 
'------------------------------------------------------------------

  if readercheck = 7 then
  result = DL.WaitForSequence("9f 09 Default Response", 1, 3000)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- 9f 09 Default: **FAIL**"
  else
    DL.AddComment "--- 9f 09 Default: PASS"
  end if
  end if
 
'------------------------------------------------------------------

  if readercheck = 7 then
  result = DL.WaitForSequence("9f 15 Default Response", 1, 3000)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- 9f 15 Default: **FAIL**"
  else
    DL.AddComment "--- 9f 15 Default: PASS"
  end if
  end if
 
'------------------------------------------------------------------

  result = DL.WaitForSequence("9f 53 Response", 1, 3000)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- 9f 53 Default: **FAIL**"
  else
    DL.AddComment "--- 9f 53 Default >>> As spec's definition, 04-09 did not modify this tag.: PASS"
  end if
 
'------------------------------------------------------------------

  if readercheck = 7 then
  result = DL.WaitForSequence("9f 6d Default Response", 1, 3000)
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- 9f 6d Default: **FAIL**"
  else
    DL.AddComment "--- 9f 6d Default: PASS"
  end if
  end if
 
'------------------------------------------------------------------

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("df 28 Default Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("df 28 Default Response (NEO2)", 1, 5000)
  end if
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- df 28 Default: **FAIL**"
  else
    DL.AddComment "--- df 28 Default: PASS"
  end if
 
'------------------------------------------------------------------

  if readerType <> "NEO2" then 
     result = DL.WaitForSequence("df 29 Default Response", 1, 3000)
  elseif readerType = "NEO2" then 
     result = DL.WaitForSequence("df 29 Default Response (NEO2)", 1, 5000)
  end if
  if result = 0 then 
     P4 = P4 + 1
     dl.addcomment vbcrlf
     dl.addcomment "--- df 29 Default: **FAIL**"
  else
    DL.AddComment "--- df 29 Default: PASS"
  end if
 
'------------------------------------------------------------------

else
  P4 = 1
end if

if P4 = 0 then
   result = 1
else 
   dl.addcomment vbcrlf
   dl.addcomment "FAIL items (check value of config after reset) = " & P4
end if

if P1 <> 0 or P2 <> 0 or P3 <> 0 or P4 <> 0 then
   result = 0
else
   result = 1
end if

dl.addcomment vbcrlf
PrintMyResult(result)
DL.AddComment "---------- END OF TEST ----------" & vbCrLf
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""

'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.pause 1000

If 0 Then
If result = 0 then
  DL.AddComment Chr(13) & "Result = FAILED"
Else
  DL.AddComment Chr(13) & "Result = PASSED"
End If
End If

If Prompting(0) = "ON" Then
  If result = 0 then
    MsgBox "Result = FAILED", VBOKOnly, "Result"
  Else 
    MsgBox "Result = PASSED", VBOKOnly, "Result"
  End If
End If

'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------

If MasterResult = 1 Then
      MasterVerdict = "PASSED"
ElseIf MasterResult = 0 Then
      MasterVerdict = "FAILED"
End If
result = MasterResult
DL.AddComment vbCrLf
DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 

Sub DL_OnSend()
    usDataLen = DL.OnSend_GetSize() - 2
    If usDataLen > 0 Then
        crcStr = DL.CalcChecksum("CRC-CCITT", DL.OnSend_GetData("H"), "H", 1, usDataLen) 
        ' Write result to the last two bytes of the sequence
        DL.OnSend_Poke usDataLen + 1, CInt("&h" + Right(crcStr, 2)) ' low byte
        DL.OnSend_Poke usDataLen + 2, CInt("&h" + Left(crcStr, 2)) ' high byte
    End If
End Sub
