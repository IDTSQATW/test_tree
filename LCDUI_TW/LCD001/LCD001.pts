DL_SCRIPTVERSION
1
41551

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "LCD001" ' !!!!! EDIT THIS !!!!!
'+++
' Objective: to test cmd 61-0A, 61-0B, 61-11, Create Screen
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result

  'Set Reader Type
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerType = result

  'Set Reader Model
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerModel = result

  'Set Reader FW version
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwVersion = result

  'Set Reader FW build
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwBuild = result

  'Set Reader General Flag
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  genFlag = result
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
      
End Sub

'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
'DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0

result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
if POSBaudRate(1) = 0 then 
   DL.SetChannelSettings(COM_Port(1))
else
   DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
end if
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication

'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub
'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function
'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
DL.SendSequence "61-0B Destroy Screen1"
dl.pause 300
DL.SendSequence "61-0B Destroy Screen2"
dl.pause 300
DL.SendSequence "61-0B Destroy Screen4"
dl.pause 300

if result <> 0 then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 61-0B Destroy Screen4" 
   DL.SendSequence "61-0B Destroy Screen4"
   result = DL.WaitForSequence("61 0A", 1, 3000)
end if

if result <> 0 then     'creat screen 1/ 2
for i = 1 to 2
if result <> 0 then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 61-0A Create Screen" & i 
   DL.SendSequence "61-0A Create Screen" & i
   result = DL.WaitForSequence("61 00, id 000" & i-1, 1, 3000)
end if
next
end if

if result <> 0 then     'creat screen 1/ 2 again, should reject
for i = 1 to 2
if result <> 0 then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 61-0A Create Screen" & i 
   DL.SendSequence "61-0A Create Screen" & i
   result = DL.WaitForSequence("61 A0", 1, 3000)
end if
next
end if

if result <> 0 then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 61-11 Get All Screens"
   DL.SendSequence "61-11 Get All Screens"
   result = DL.WaitForSequence("61-11 resp = 2 screens", 1, 3000)
end if

if result <> 0 then     'destroy screen 1/ 2
for i = 1 to 2
if result <> 0 then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 61-0B Destroy Screen" & i 
   DL.SendSequence "61-0B Destroy Screen" & i
   result = DL.WaitForSequence("61 00", 1, 3000)
end if
next
end if
'------------------------------------------------------------
DL.AddComment vbCrLf
DL.AddComment "---------- END OF TEST ----------" & vbCrLf
PrintMyResult(result)

Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""

'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'DL.pause 1000

'If result = 0 then
'  DL.AddComment Chr(13) & "Result = FAILED"
'Else
'  DL.AddComment Chr(13) & "Result = PASSED"
'End If

'If Prompting(0) = "ON" Then
'  If result = 0 then
'    MsgBox "Result = FAILED", VBOKOnly, "Result"
'  Else 
'    MsgBox "Result = PASSED", VBOKOnly, "Result"
'  End If
'End If

'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------

'If MasterResult = 1 Then
'      MasterVerdict = "PASSED"
'ElseIf MasterResult = 0 Then
'      MasterVerdict = "FAILED"
'End If
'result = MasterResult
'DL.AddComment vbCrLf
'DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 

Sub DL_OnSend()
    usDataLen = DL.OnSend_GetSize() - 2
    If usDataLen > 0 Then
        crcStr = DL.CalcChecksum("CRC-CCITT", DL.OnSend_GetData("H"), "H", 1, usDataLen) 
        ' Write result to the last two bytes of the sequence
        DL.OnSend_Poke usDataLen + 1, CInt("&h" + Right(crcStr, 2)) ' low byte
        DL.OnSend_Poke usDataLen + 2, CInt("&h" + Left(crcStr, 2)) ' high byte
    End If
End Sub
