DL_SCRIPTVERSION
1
30252

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "PM009" ' !!!!! EDIT THIS !!!!!
' Objective: to verify PMC status if reboot/ 04-09/ 04-F0
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result

  'Set Reader Type
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerType = result

  'Set Reader Model
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerModel = result

  'Set Reader FW version
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwVersion = result

  'Set Reader FW build
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwBuild = result   

  'Set Reader General Flag
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwGF = result    
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
End Sub
'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
'DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0

result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""
'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication
'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub

Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function
'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function
'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
DL.SendSequence "18-01 Ping"
dl.pause 3000
dl.addcomment vbcrlf

If result <> 0 Then
   dl.resetreceivecounter
   DL.AddComment "--- F0-00 Set PMC Status (3C idle/ 3C sleep)"
   DL.SendSequence "F0-00 Set PMC Status (3C idle/ 3C sleep)"
   result = DL.WaitForSequence("F0-00 ok resp", 1, 5000)
   dl.pause 500
End If

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- F0-01 Get PMC Status"
   DL.SendSequence "F0-01 Get PMC Status"
   result = DL.WaitForSequence("F0 00 - 3c3c", 1, 5000)
   dl.pause 500
End If

'--------------------------------------------------'reboot, check value again

if result <> 0 then
   msgbox "Power off/ on the reader by manual, then click OK", vbokonly
   dl.pause 500

   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 18-01 Ping"
   DL.SendSequence "18-01 Ping"
   result = DL.WaitForSequence("18 00", 1, 2000)
end if

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- F0-01 Get PMC Status"
   DL.SendSequence "F0-01 Get PMC Status"
   result = DL.WaitForSequence("F0 00 - 3c3c", 1, 5000)
End If

'--------------------------------------------------'Auto-power off, power on and then check value again

If result <> 0 Then
   dl.addcomment vbcrlf & "Waiting over 2 min..."
   dl.pause 120500
   ledcheck = msgbox ("Reader is RUN mode?", vbyesno)
   if ledcheck = 6 then
      result = 0
   else
      result = 1
   end if
end if

if result <> 0 then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 18-01 Ping"
   DL.SendSequence "18-01 Ping"
   result = DL.WaitForSequence("18 00", 1, 3000)
   if result = 1 then
      result = 0
   else
      result = 1
   end if
end if

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- F0-01 Get PMC Status"
   DL.SendSequence "F0-01 Get PMC Status"
   result = DL.WaitForSequence("F0 00 - 3c3c", 1, 5000)
End If

'--------------------------------------------------'cmd 04-0A, check value again

if result <> 0 then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 04-0A Set Configuration Defaults and Keep Encrypt Key Command"
   DL.SendSequence "04-0A Set Configuration Defaults and Keep Encrypt Key Command"
   result = DL.WaitForSequence("04 00", 1, 5000)
   dl.pause 5000
End If

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- F0-01 Get PMC Status"
   DL.SendSequence "F0-01 Get PMC Status"
   result = DL.WaitForSequence("F0 00 - 0514", 1, 5000)
End If

DL.AddComment vbCrLf
PrintMyResult(result)

DL.AddComment "---------- END OF TEST ----------" & vbCrLf
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""
'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.pause 1000

If result = 0 then
  DL.AddComment Chr(13) & "Result = FAILED"
Else
  DL.AddComment Chr(13) & "Result = PASSED"
End If

If Prompting(0) = "ON" Then
  If result = 0 then
    MsgBox "Result = FAILED", VBOKOnly, "Result"
  Else 
    MsgBox "Result = PASSED", VBOKOnly, "Result"
  End If
End If

'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------

If MasterResult = 1 Then
      MasterVerdict = "PASSED"
ElseIf MasterResult = 0 Then
      MasterVerdict = "FAILED"
End If
result = MasterResult
DL.AddComment vbCrLf
DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 
