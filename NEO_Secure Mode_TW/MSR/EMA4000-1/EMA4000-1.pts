DL_SCRIPTVERSION
1
14073

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "EMA4000-1" ' !!!!! EDIT THIS !!!!!
' Objective: load Retail MAC Salt via DKI (encryption key)
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result

  'Set Reader Type
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerType = result

  'Set Reader Model
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerModel = result

  'Set Reader FW version
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwVersion = result

  'Set Reader FW build
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwBuild = result

  'Set Reader General Flag
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  genFlag = result
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
      
End Sub

'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
dim r(8)
max=1
min=0
Randomize
errCnt = 0
caseValid = 0
countf = 0
result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication

'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub


Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function
'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function

'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Burst mode Off"
   DL.SendSequence "burst mode off"
   result = DL.WaitForSequence("04 00", 1, 2000)
   dl.pause 500
End If

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 90-12 (dki same) key = 1234567890123456"
   DL.SendSequence "90-12 (dki same) key = 1234567890123456"
   result = DL.WaitForSequence("90 00", 1, 2000)
   dl.pause 500
End If
'------------------------------------------------------------
sub pod()
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Poll on Demand"
   DL.SendSequence "Poll on Demand"
   result = DL.WaitForSequence("Poll Response", 1, 2000)
   dl.pause 500
End If
end sub

sub ap()
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Auto Poll"
   DL.SendSequence "Auto Poll"
   result = DL.WaitForSequence("Poll Response", 1, 2000)
   dl.pause 500
End If
end sub
'------------------------------------------------------------
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Loading Retail MAC Salt"
   DL.SendSequence "83-00"
   result = DL.WaitForSequence("83-00 rx", 1, 2000)
   if result <> 0 then 
      dl.resetreceivecounter
      DL.SendSequence "80-00 1"
      result = DL.WaitForSequence("80-xx rx", 1, 2000)
   end if
   if result <> 0 then 
      dl.resetreceivecounter
      DL.SendSequence "80-00 2"
      result = DL.WaitForSequence("80-xx rx", 1, 2000)
   end if   
   if result <> 0 then 
      dl.resetreceivecounter
      DL.SendSequence "80-01"
      result = DL.WaitForSequence("80-xx rx", 1, 2000)
   end if
   if result <> 0 then 
      dl.resetreceivecounter
      DL.SendSequence "81-00"
      result = DL.WaitForSequence("81-00 rx", 1, 2000)
   end if  
   if result <> 0 then 
      dl.resetreceivecounter
      DL.SendSequence "80-03 Index 54h"
      result = DL.WaitForSequence("80-xx rx", 1, 2000)
   end if
   if result <> 0 then 
      dl.resetreceivecounter
      DL.SendSequence "81-0A KCV 54h"
      result = DL.WaitForSequence("81-0A rx", 1, 2000)
   end if   
   dl.pause 500
End If
'------------------------------------------------------------
for i = 1 to 2
    if i = 1 then
       if result <> 0 then 
          dl.resetreceivecounter
          dl.addcomment vbcrlf
          DL.AddComment "--- DFEC47 = 01"
          DL.SendSequence "DFEC47 = 01"
          result = DL.WaitForSequence("04 00", 1, 2000)
       end if  
    elseif i = 2 then
       if result <> 0 then 
          dl.resetreceivecounter
          dl.addcomment vbcrlf
          DL.AddComment "--- DFEC47 = 00"
          DL.SendSequence "DFEC47 = 00"
          result = DL.WaitForSequence("04 00", 1, 2000)
       end if 
    end if

If result <> 0 Then
   pod()

   MsgBox "Click OK --> Swipe card (PAN=4472700000001529)", vbokonly
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 02-40 Activate Transaction"
   DL.SendSequence "02-40"
   result = DL.WaitForSequence("02 00", 1, 8000)
   dl.pause 200
   if result <> 0 and i = 1 then result = DL.WaitForSequence("DFEC48", 1, 5000)
   if result <> 0 and i = 2 then
      result = DL.WaitForSequence("DFEC48", 1, 1200)
      ReverseResult(result)
   end if
End If

If result <> 0 Then
   ap()

   MsgBox "Swipe card (PAN=4472700000001529) --> Click OK", vbokonly
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 03-40 Get Transaction Result"
   DL.SendSequence "03-40"
   result = DL.WaitForSequence("03 00", 1, 8000)
   dl.pause 200
   if result <> 0 and i = 1 then result = DL.WaitForSequence("DFEC48", 1, 5000)
   if result <> 0 and i = 2 then
      result = DL.WaitForSequence("DFEC48", 1, 1200)
      ReverseResult(result)
   end if
End If
next

pod()
'------------------------------------------------------------
DL.AddComment vbcrlf & "---------- END OF TEST ----------" & vbCrLf
PrintMyResult(result)

Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""

'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'DL.pause 1000

'If result = 0 then
'  DL.AddComment Chr(13) & "Result = FAILED"
'Else
'  DL.AddComment Chr(13) & "Result = PASSED"
'End If

'If Prompting(0) = "ON" Then
'  If result = 0 then
'    MsgBox "Result = FAILED", VBOKOnly, "Result"
'  Else 
'    MsgBox "Result = PASSED", VBOKOnly, "Result"
'  End If
'End If
'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------
'If MasterResult = 1 Then
'      MasterVerdict = "PASSED"
'ElseIf MasterResult = 0 Then
'      MasterVerdict = "FAILED"
'End If
'result = MasterResult
'DL.AddComment vbCrLf
'DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 

Sub DL_OnSend()
    usDataLen = DL.OnSend_GetSize() - 2
    If usDataLen > 0 Then
        crcStr = DL.CalcChecksum("CRC-CCITT", DL.OnSend_GetData("H"), "H", 1, usDataLen) 
        ' Write result to the last two bytes of the sequence
        DL.OnSend_Poke usDataLen + 1, CInt("&h" + Right(crcStr, 2)) ' low byte
        DL.OnSend_Poke usDataLen + 2, CInt("&h" + Left(crcStr, 2)) ' high byte
    End If
End Sub
