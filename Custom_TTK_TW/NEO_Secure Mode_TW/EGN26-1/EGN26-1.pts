DL_SCRIPTVERSION
1
20563

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "EGN26-1" ' !!!!! EDIT THIS !!!!!
' Objective: to verify KSN can work (to increase progressively) 
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result 
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
End Sub
'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
dim r(5)
max=1
min=0
Randomize
errCnt = 0
caseValid = 0
countf = 0
result = 1
finalcount = 0

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication
'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON " Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub

Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function
'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function
'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Erase All Key (83-00)"
   DL.SendSequence "Erase All Key (83-00)"
   result = DL.WaitForSequence("83-00 ok resp", 1, 2000)
   dl.pause 300
   if result <> 0 then
      dl.resetreceivecounter
      dl.addcomment vbcrlf
      DL.AddComment "--- Load KPK"
      DL.SendSequence "Load Plaintext Key - command 1 (80-00)"
      result = DL.WaitForSequence("80-xx ok resp", 1, 2000)
      dl.pause 300 
      if result <> 0 then
         dl.resetreceivecounter
         DL.SendSequence "Load Plaintext Key - command 2  (80-00)"
         result = DL.WaitForSequence("80-xx ok resp", 1, 2000)
         dl.pause 300 
         if result <> 0 then
            dl.resetreceivecounter
            DL.SendSequence "Load Encrypted KPK (80-01)"
            result = DL.WaitForSequence("80-xx ok resp", 1, 2000)
            dl.pause 300 
            if result <> 0 then
               dl.resetreceivecounter
               dl.addcomment vbcrlf
               DL.AddComment "--- Load DUKPT key"
               DL.SendSequence "Enter DUKPT Key (81-00)"
               result = DL.WaitForSequence("81-xx ok resp", 1, 2000)
               dl.pause 300 
            end if
         end if
      end if
   end if 
end if

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Enable Data Encryption  (C7-36)"
   DL.SendSequence "Enable Data Encryption  (C7-36)"
   result = DL.WaitForSequence("C7-xx ok resp", 1, 5000)
End If
DL.ClearCommWindows
'------------------------------------------------------------
if result <> 0 then
   hwcheck = inputbox ("Which interface do u want to verify:" & vbcrlf & vbcrlf & "1) CL" & vbcrlf & "2) CT" & vbcrlf & "3) MSR" & vbcrlf & vbcrlf & "4) EXIT", vbokonly, "4")

   do until hwcheck = 4
      '------------------------------------------------------------ CL
      if hwcheck = 1 then
         countf = 0
         result = 1
         For i = 1 to 5
             if result <> 0 then
                msgbox "Click OK, tap Discover card", vbokonly
                dl.resetreceivecounter
                dl.addcomment vbcrlf
                DL.AddComment "--- Activate Transaction (02-40): Tap card"
                DL.SendSequence "Activate Transaction (02-40) - 9F02"
                result = DL.WaitForSequence("FFEE12", 1, 5000)
                dl.pause 2000
             else
                countf = countf + 1
             end if
         next

         if countf = 0 then
            usercheck = msgbox ("Can KSN work per transaction? (to increase progressively)", vbyesno)
            if usercheck = 7 then finalcount = 1
         else 
            finalcount = 1
         end if
         DL.ClearCommWindows
      end if
      '------------------------------------------------------------ CT/ Fallback to CT/ Fallback to MSR
      if hwcheck = 2 then
         countf = 0
         result = 1
         For i = 1 to 5
             if result <> 0 then
                msgbox "Click OK, insert T=0 card", vbokonly
                dl.resetreceivecounter
                dl.addcomment vbcrlf
                DL.AddComment "--- Contact Start Transaction (60-10)"
                DL.SendSequence "60-10"
                result = DL.WaitForSequence("FFEE12", 1, 5000)
                dl.pause 2000
                if result <> 0 then
                   dl.resetreceivecounter
                   dl.addcomment vbcrlf
                   DL.SendSequence "60-11"
                   result = DL.WaitForSequence("FFEE12", 1, 5000)
                   dl.pause 2000
                   if result <> 0 then
                      dl.resetreceivecounter
                      dl.addcomment vbcrlf
                      DL.SendSequence "60-12"
                      result = DL.WaitForSequence("FFEE12", 1, 5000)
                      dl.pause 2000
                   else
                      countf = countf + 1
                   end if
                else
                   countf = countf + 1
                end if
                msgbox "Remove card, click OK", vbokonly
             else
                countf = countf + 1
             end if
             DL.ClearCommWindows
         next

         if countf = 0 then
            usercheck = msgbox ("Can KSN work per transaction? (to increase progressively)", vbyesno)
            if usercheck = 7 then finalcount = 1
         else 
            finalcount = 1
         end if
         DL.ClearCommWindows

         countf = 0
         result = 1
         For i = 1 to 5
             if result <> 0 then
                msgbox "Click OK, swipe T=0 card", vbokonly
                dl.resetreceivecounter
                dl.addcomment vbcrlf
                DL.AddComment "--- Contact Start Transaction (60-10)"
                DL.SendSequence "60-10"
                result = DL.WaitForSequence("USE CHIP READER", 1, 10000)
                if result <> 0 then
                   msgbox "Click OK, insert T=0 card", vbokonly
                   result = DL.WaitForSequence("FFEE12", 1, 5000)
                   dl.pause 2000
                   if result <> 0 then
                      dl.resetreceivecounter
                      dl.addcomment vbcrlf
                      DL.SendSequence "60-11"
                      result = DL.WaitForSequence("FFEE12", 1, 5000)
                      dl.pause 2000
                      if result <> 0 then
                         dl.resetreceivecounter
                         dl.addcomment vbcrlf
                         DL.SendSequence "60-12"
                         result = DL.WaitForSequence("FFEE12", 1, 5000)
                         dl.pause 2000
                      else
                         countf = countf + 1
                      end if
                   else
                      countf = countf + 1
                   end if
                   msgbox "Remove card, click OK", vbokonly
                else
                   countf = countf + 1
                end if
             else
                countf = countf + 1
             end if
             DL.ClearCommWindows
         next

         if countf = 0 then
            usercheck = msgbox ("Can KSN work per transaction? (to increase progressively)", vbyesno)
            if usercheck = 7 then finalcount = 1
         else 
            finalcount = 1
         end if
         DL.ClearCommWindows

         countf = 0
         result = 1
         For i = 1 to 5
             if result <> 0 then
                msgbox "Click OK, swipe T=0 card", vbokonly
                dl.resetreceivecounter
                dl.addcomment vbcrlf
                DL.AddComment "--- Contact Start Transaction (60-10)"
                DL.SendSequence "60-10"
                result = DL.WaitForSequence("USE CHIP READER", 1, 10000)
                if result <> 0 then
                   msgbox "Click OK, insert T=0 card that can NOT be powered on", vbokonly
                   result = DL.WaitForSequence("USE MAGSTRIPE", 1, 10000)
                   if result <> 0 then
                      msgbox "Click OK, swipe T=0 card", vbokonly
                      result = DL.WaitForSequence("msr-ksn", 1, 5000)
                      dl.pause 2000
                   else
                      countf = countf + 1
                   end if
                else
                   countf = countf + 1
                end if
             else
                countf = countf + 1
             end if
             DL.ClearCommWindows
         next

         if countf = 0 then
            usercheck = msgbox ("Can KSN work per transaction? (to increase progressively)", vbyesno)
            if usercheck = 7 then finalcount = 1
         else 
            finalcount = 1
         end if
         DL.ClearCommWindows
      end if
      '------------------------------------------------------------ MSR
      if hwcheck = 3 then
         countf = 0
         result = 1
         For i = 1 to 5
             if result <> 0 then
                msgbox "Click OK, swipe Discover card", vbokonly
                dl.resetreceivecounter
                dl.addcomment vbcrlf
                DL.AddComment "--- Activate Transaction (02-40): Swipe card"
                DL.SendSequence "Activate Transaction (02-40) - 9F02"
                result = DL.WaitForSequence("msr-ksn", 1, 10000)
                dl.pause 2000
             else
                countf = countf + 1
             end if
         next

         if countf = 0 then
            usercheck = msgbox ("Can KSN work per transaction? (to increase progressively)", vbyesno)
            if usercheck = 7 then finalcount = 1
         else 
            finalcount = 1
         end if
         DL.ClearCommWindows
      end if

      hwcheck = inputbox ("Which interface do u want to verify:" & vbcrlf & vbcrlf & "1) CL" & vbcrlf & "2) CT" & vbcrlf & "3) MSR" & vbcrlf & vbcrlf & "4) EXIT", vbokonly, "4")
  loop
else
   finalcount = 1
end if

if finalcount <> 0 then result = 0
'------------------------------------------------------------
DL.AddComment vbcrlf & "---------- END OF TEST ----------" & vbCrLf
PrintMyResult(result)
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""

'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'DL.pause 1000

'If result = 0 then
'  DL.AddComment Chr(13) & "Result = FAILED"
'Else
'  DL.AddComment Chr(13) & "Result = PASSED"
'End If

'If Prompting(0) = "ON" Then
'  If result = 0 then
'    MsgBox "Result = FAILED", VBOKOnly, "Result"
'  Else 
'    MsgBox "Result = PASSED", VBOKOnly, "Result"
'  End If
'End If
'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------
'If MasterResult = 1 Then
'      MasterVerdict = "PASSED"
'ElseIf MasterResult = 0 Then
'      MasterVerdict = "FAILED"
'End If
'result = MasterResult
'DL.AddComment vbCrLf
'DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 
