DL_SCRIPTVERSION
1
38597

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "VAS100-T" ' !!!!! EDIT THIS !!!!!
' Objective: negative test -- cancel at cmd that w/ appleVAS tag FFEE06
' Objective: JIRA#FUI-223: [VP3300 Audio Jack][v1.01.044][SmartTap/ AppleVAS] Under Auto poll mode -> waited for the 2nd time AT cmd (w/ SmartTap or AppleVAS tag) timeout, reader returned nothing.
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result

  'Set Reader Type
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerType = result

  'Set Reader Model
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerModel = result

  'Set Reader FW version
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwVersion = result

  'Set Reader FW build
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwBuild = result

  'Set Reader General Flag
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  genFlag = result
Loop

Sub StepPrompt(PromptString)
    DL.AddComment PromptString
    If Prompting(1) = "ON" Then
       MsgBox PromptString, VBOKOnly, "Test Step"
    Else
    End If      
End Sub
'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
'DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0
result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""
'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication
'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
    If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
       MasterResult = 1
       DL.AddComment "Result = PASSED"
    Else
       MasterResult = 0
       DL.AddComment "Result = FAILED"
    End If
End Sub

Function ReverseResult(ResultParam)
         If ResultParam = 1 Then
            result = 0
         ElseIf ResultParam = 0 Then
                result = 1
         End If
End Function
'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
         DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
         MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function
'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
sub maintest()
    for k = 1 to 5
        if k = 1 then cmd = "ACT - VAS Only"
        if k = 2 then cmd = "ACT - VAS OR Pay"
        if k = 3 then cmd = "ACT - VAS AND Pay"
        if k = 4 then cmd = "ACT - Pay Only"
        if k = 5 then cmd = "ACT - VAS URL Only Protocol"

        If result <> 0 Then
           DL.ResetReceiveCounter
           dl.addcomment vbcrlf 
           DL.AddComment "--- " & cmd & " 0240"
           if readerType <> "NEO2" then
              DL.SendSequence cmd & " 0240"
           else
              DL.SendSequence cmd & " 0240 (NEO2)"
           end if
           dl.pause 1000
           DL.SendSequence "Cancel Transaction"
           result = DL.WaitForSequence("05 00", 1, 5000)
           if result <> 0 then
              DL.ResetReceiveCounter
              result = DL.WaitForSequence("02 08", 1, 3000)
              ReverseResult(result)
           end if
        End If
    next
end sub

If result <> 0 Then
   dl.addcomment vbcrlf & "------------------------------------------------------------2) 1 Merchant data --> AT cmd --> cancel cmd" & vbcrlf

   if result <> 0 then
      for r = 1 to 6
          if result <> 0 then
             DL.ResetReceiveCounter
             dl.addcomment vbcrlf 
             DL.AddComment "--- Clear Merchant " & r
             DL.SendSequence "Clear Merchant " & r
             result = DL.WaitForSequence("04 00", 1, 3000)
             dl.pause 500
          end if
      next
   end if

   if result <> 0 then
      DL.ResetReceiveCounter
      dl.addcomment vbcrlf 
      DL.AddComment "--- Set Merchant 4 - pass.com.apple.wallet.dev_Panera"
      DL.SendSequence "Set Merchant 4 - pass.com.apple.wallet.dev_Panera"
      result = DL.WaitForSequence("04 00", 1, 3000)
      dl.pause 500
   end if

   if result <> 0 then 
      DL.ResetReceiveCounter
      dl.addcomment vbcrlf 
      DL.AddComment "--- Poll on demand"
      DL.SendSequence "Poll on demand"
      result = DL.WaitForSequence("01 00", 1, 3000)
      dl.pause 500
      if result <> 0 then maintest()
   end if

   'if result <> 0 then 
   '   DL.ResetReceiveCounter
   '   dl.addcomment vbcrlf 
   '   DL.AddComment "--- Auto poll"
   '   DL.SendSequence "Auto poll"
   '   result = DL.WaitForSequence("01 00", 1, 3000)
   '   dl.pause 500
   '   if result <> 0 then maintest()
   'end if
End If
'------------------------------------------------------------
DL.AddComment vbCrLf
DL.AddComment "---------- END OF TEST ----------" & vbCrLf
PrintMyResult(result)
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""
'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'DL.pause 1000
'If 0 Then
'If result = 0 then
'  DL.AddComment Chr(13) & "Result = FAILED"
'Else
'  DL.AddComment Chr(13) & "Result = PASSED"
'End If
'End If
'If Prompting(0) = "ON" Then
'  If result = 0 then
'    MsgBox "Result = FAILED", VBOKOnly, "Result"
'  Else 
'    MsgBox "Result = PASSED", VBOKOnly, "Result"
'  End If
'End If
'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------
'If MasterResult = 1 Then
'      MasterVerdict = "PASSED"
'ElseIf MasterResult = 0 Then
'      MasterVerdict = "FAILED"
'End If
'result = MasterResult
'DL.AddComment vbCrLf
'DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'   FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	 FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
   FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile

Sub DL_OnSend()
    usDataLen = DL.OnSend_GetSize() - 2
    If usDataLen > 0 Then
        crcStr = DL.CalcChecksum("CRC-CCITT", DL.OnSend_GetData("H"), "H", 1, usDataLen) 
        ' Write result to the last two bytes of the sequence
        DL.OnSend_Poke usDataLen + 1, CInt("&h" + Right(crcStr, 2)) ' low byte
        DL.OnSend_Poke usDataLen + 2, CInt("&h" + Left(crcStr, 2)) ' high byte
    End If
End Sub
