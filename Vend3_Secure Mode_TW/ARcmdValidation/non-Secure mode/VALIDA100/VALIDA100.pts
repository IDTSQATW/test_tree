DL_SCRIPTVERSION
1
20734

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "VALIDA100" ' !!!!! EDIT THIS !!!!!
' Objective: verify spec's definiton for cmd 04-20 "To successfully execute the command at least, a valid Master Data Encryption Key or a valid DUKPT Data Encryption Key or both should be present. Once the command is successfully executed the reader will be rebooted automatically after 5 seconds. If not, the reader needs to be manually rebooted/power-cycled for proper operation"
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result
      
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
      
End Sub

'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
'DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0
countf = 0

result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication

'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON " Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub

Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function

sub loadkey_KPK()
    dl.resetreceivecounter
    dl.addcomment vbcrlf
    dl.addcomment "Loading KPK..."
    dl.resetreceivecounter
    dl.sendsequence "Load Plaintext KPK Component (the 1st)"
    result = dl.waitforsequence("load kpk ok", 1, 2000)
    dl.pause 500
    if result <> 0 then
       dl.resetreceivecounter
       dl.sendsequence "Load Plaintext KPK Component (the last)"
       result = dl.waitforsequence("load kpk ok", 1, 2000)
       dl.pause 500
       if result <> 0 then
          dl.resetreceivecounter
          dl.sendsequence "Load KPK"
          result = dl.waitforsequence("load kpk ok", 1, 2000)
          dl.pause 500
          if result = 0 then
             dl.addcomment vbcrlf & "Load KPK: FAIL!"
          else
             dl.addcomment vbcrlf & "OK!"
          end if
       else
          dl.addcomment vbcrlf & "Load Plaintext KPK Component (the last): FAIL!"
       end if
    else
       dl.addcomment vbcrlf & "Load Plaintext KPK Component (the 1st): FAIL!"
    end if    
end sub

sub loadkey_D()
    dl.resetreceivecounter
    dl.addcomment vbcrlf
    dl.addcomment "Loading DUKPT key..."
    dl.resetreceivecounter
    dl.sendsequence "Load DUKPT key (key index 5)"
    result = dl.waitforsequence("dukpt ok", 1, 2000)
    dl.pause 500
    if result <> 0 then
       dl.resetreceivecounter
       dl.sendsequence "Select DUKPT Data Encryption Key (key slot 5)"
       result = dl.waitforsequence("dukpt ok", 1, 2000)
       dl.pause 500
       if result = 0 then
          dl.addcomment vbcrlf & "Select DUKPT Data Encryption Key (key slot 5): FAIL!"
       else 
          dl.addcomment vbcrlf & "OK!"
       end if
    else
       dl.addcomment vbcrlf & "Load DUKPT key (key index 5): FAIL!"
    end if
end sub

sub loadkey_M()
    dl.resetreceivecounter
    dl.addcomment vbcrlf
    dl.addcomment "Loading Master key..."
    dl.resetreceivecounter
    dl.sendsequence "Load Master key (key slot 5)"
    result = dl.waitforsequence("load kpk ok", 1, 2000)
    dl.pause 500
    if result <> 0 then
       dl.resetreceivecounter
       dl.sendsequence "Set Master Data Encryption Key (key slot 5)"
       result = dl.waitforsequence("load kpk ok", 1, 2000)
       dl.pause 500
       if result = 0 then
          dl.addcomment vbcrlf & "Set Master Data Encryption Key (key slot 5): FAIL!"
       else 
          dl.addcomment vbcrlf & "OK!"
       end if
    else
       dl.addcomment vbcrlf & "Load Master key (key slot 5): FAIL!"
    end if
end sub

sub countfail()
    countf = countf + 1
end sub
'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function

'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
DL.ResetReceiveCounter
DL.AddComment ">>>>> Case 1: NO any keys"
   
dl.addcomment vbcrlf
DL.AddComment "--- Erase All Keys"
DL.SendSequence "Erase All Keys"
result = DL.WaitForSequence("erase all keys ok resp", 1, 3000)

if result <> 0 then
   dl.addcomment vbcrlf
   DL.AddComment "--- SRED mode ON (Master key only)"
   DL.SendSequence "SRED Mode Config - Set to SRED (Master)"
   result = DL.WaitForSequence("no suitable key", 1, 3000)
   dl.pause 300
   if result <> 0 then
      dl.addcomment vbcrlf
      DL.AddComment "--- SRED mode ON (DUKPT key only)"
      DL.SendSequence "SRED Mode Config - Set to SRED (DUKPT)"
      result = DL.WaitForSequence("no suitable key", 1, 3000)
      dl.pause 300
      if result <> 0 then
         dl.addcomment vbcrlf
         DL.AddComment "--- SRED mode ON (Master & DUKPT keys both)"
         DL.SendSequence "SRED Mode Config - Set to SRED (Master & DUKPT)"
         result = DL.WaitForSequence("no suitable key", 1, 3000)
         dl.pause 300
         if result = 0 then countfail()
      else
         countfail()
      end if
   else
      countfail()
   end if
else
   countfail()
end if
'------------------------------------------------------------
DL.ResetReceiveCounter
dl.addcomment vbcrlf
DL.AddComment ">>>>> Case 2: Master key only"

loadkey_KPK()
loadkey_M()

if result <> 0 then
   dl.addcomment vbcrlf
   DL.AddComment "--- SRED mode ON (DUKPT key only)"
   DL.SendSequence "SRED Mode Config - Set to SRED (DUKPT)"
   result = DL.WaitForSequence("no suitable key", 1, 3000)
   dl.pause 300
   if result <> 0 then
      dl.addcomment vbcrlf
      DL.AddComment "--- SRED mode ON (Master & DUKPT keys both)"
      DL.SendSequence "SRED Mode Config - Set to SRED (Master & DUKPT)"
      result = DL.WaitForSequence("no suitable key", 1, 3000)
      dl.pause 300
      if result = 0 then countfail()
   else
      countfail()
   end if
else
   countfail()
end if
'------------------------------------------------------------
DL.ResetReceiveCounter
dl.addcomment vbcrlf
DL.AddComment ">>>>> Case 3: DUKPT key only"

dl.addcomment vbcrlf
DL.AddComment "--- Erase All Keys"
DL.SendSequence "Erase All Keys"
result = DL.WaitForSequence("erase all keys ok resp", 1, 3000)

loadkey_KPK()
loadkey_D()

if result <> 0 then
   dl.addcomment vbcrlf
   DL.AddComment "--- SRED mode ON (Master key only)"
   DL.SendSequence "SRED Mode Config - Set to SRED (Master)"
   result = DL.WaitForSequence("no suitable key", 1, 3000)
   dl.pause 300
   if result <> 0 then
      dl.addcomment vbcrlf
      DL.AddComment "--- SRED mode ON (Master & DUKPT keys both)"
      DL.SendSequence "SRED Mode Config - Set to SRED (Master & DUKPT)"
      result = DL.WaitForSequence("no suitable key", 1, 3000)
      dl.pause 300
      if result = 0 then countfail()
   else
      countfail()
   end if
else
   countfail()
end if
'------------------------------------------------------------
DL.ClearCommWindows

DL.ResetReceiveCounter
dl.addcomment vbcrlf
DL.AddComment ">>>>> Case 4: Master & DUKPT keys both"

dl.addcomment vbcrlf
DL.AddComment "--- Erase All Keys"
DL.SendSequence "Erase All Keys"
result = DL.WaitForSequence("erase all keys ok resp", 1, 3000)

loadkey_KPK()
loadkey_D()
loadkey_M()

if result <> 0 then
   dl.addcomment vbcrlf
   DL.AddComment "--- SRED mode ON (Master key only)"
   DL.SendSequence "SRED Mode Config - Set to SRED (Master)"
   result1 = DL.WaitForSequence("04-20 ok resp", 1, 3000)
   result2 = msgbox("Does reader reboot automatically after 5 sec?", vbyesno)
   dl.pause 60000
   if result1 <> 0 and result2 = 6 then
      dl.addcomment vbcrlf
      DL.AddComment "--- SRED mode ON (DUKPT key only)"
      DL.SendSequence "SRED Mode Config - Set to SRED (DUKPT)"
      result1 = DL.WaitForSequence("04-20 ok resp", 1, 3000)
      result2 = msgbox("Does reader reboot automatically after 5 sec?", vbyesno)
      dl.pause 60000
      if result1 <> 0 and result2 = 6 then
         dl.addcomment vbcrlf
         DL.AddComment "--- SRED mode ON (Master & DUKPT keys both)"
         DL.SendSequence "SRED Mode Config - Set to SRED (Master & DUKPT)"
         result1 = DL.WaitForSequence("04-20 ok resp", 1, 3000)
         result2 = msgbox("Does reader reboot automatically after 5 sec?", vbyesno)
         dl.pause 60000
         if result1 = 0 and result2 = 7 then countfail()
      else
         countfail()
      end if
   else
      countfail()
   end if
else
   countfail()
end if
'------------------------------------------------------------
if countf <> 0 then
   result = 0
else
   result = 1
end if

DL.AddComment vbCrLf
PrintMyResult(result)

DL.AddComment "---------- END OF TEST ----------" & vbCrLf
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""

'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.pause 1000

If result = 0 then
  DL.AddComment Chr(13) & "Result = FAILED"
Else
  DL.AddComment Chr(13) & "Result = PASSED"
End If

If Prompting(0) = "ON" Then
  If result = 0 then
    MsgBox "Result = FAILED", VBOKOnly, "Result"
  Else 
    MsgBox "Result = PASSED", VBOKOnly, "Result"
  End If
End If

'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------

If MasterResult = 1 Then
      MasterVerdict = "PASSED"
ElseIf MasterResult = 0 Then
      MasterVerdict = "FAILED"
End If
result = MasterResult
DL.AddComment vbCrLf
DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 
