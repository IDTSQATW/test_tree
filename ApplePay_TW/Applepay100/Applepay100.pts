DL_SCRIPTVERSION
1
29291

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "Applepay100" ' !!!!! EDIT THIS !!!!!
' Objective: To verify JIRA issue CS-1297
' CS-1297: Vendi - USA Tech - Slow Apple Vas transactions
' "When phone is stayed at 0cm and the finger is touched, PAY polling is just starting. But this polling is not success. So it hangs in the polling process"
' "if the touchID is pressed before the reader lands on the plane, this issue should not exist"
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result

  'Set Reader Type
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerType = result

  'Set Reader Model
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerModel = result

  'Set Reader FW version
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwVersion = result

  'Set Reader FW build
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwBuild = result

  'Set Reader General Flag
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  genFlag = result
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
End Sub
'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0
result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""
'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication
'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub

Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function
'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function
'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
If result <> 0 Then
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- #1. Setup the bezel *** " & readerType 
   if readerType <> "NEO2" then
      DL.SendSequence "#1. Setup the bezel"
   else
      DL.SendSequence "#1. Setup the bezel (NEO2)"
   end if
   result = DL.WaitForSequence("04 00", 1, 3000)
   dl.pause 300
End If

If result <> 0 Then
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- #2. Set Merchant 1"
   DL.SendSequence "#2. Set Merchant 1"
   result = DL.WaitForSequence("04 00", 1, 3000)
   dl.pause 300
End If

If result <> 0 Then
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- #3. Enable blue LEDs"
   DL.SendSequence "#3. Enable blue LEDs"
   dl.pause 3000
End If

if result <> 0 then
   countfa = 0
   for k = 1 to 5
       DL.ResetReceiveCounter
       msgbox "Turn off LCD of iPhone (have credit card) --> Click OK", vbokonly
       msgbox "Click OK --> Tap iPhone --> Place finger on iPhone (to pay via ApplePay)", vbokonly
       dl.addcomment vbcrlf
       DL.AddComment "--- #4. Activate Transaction (VAS and PAY) with delay" & " -- #" & k
       if readerType <> "NEO2" then
          DL.SendSequence "#4. Activate Transaction (VAS and PAY) with delay"
       else
          DL.SendSequence "#4. Activate Transaction (VAS and PAY) with delay (NEO2)"
       end if
       dl.pause 4000
       rx = DL.WaitForSequence("Receive Response", 1, 3500)
       dl.pause 1000
       if rx = 0 then 
          countfa = countfa + 1
          DL.SendSequence "05-01"
          dl.pause 1000
       end if
   next

   DL.AddComment vbcrlf & "======================================================================="

   countfb = 0
   for k = 1 to 5
       DL.ResetReceiveCounter
       msgbox "Turn off LCD of iPhone (have credit card) --> Click OK", vbokonly
       msgbox "Click OK --> Tap iPhone --> Place finger on iPhone (to pay via ApplePay)", vbokonly
       dl.addcomment vbcrlf
       DL.AddComment "--- 02-40 pay only" & " -- #" & k
       if readerType <> "NEO2" then
          DL.SendSequence "02-40 pay only"
       else
          DL.SendSequence "02-40 pay only (NEO2)"
       end if
       dl.pause 4000
       rx = DL.WaitForSequence("Receive Response", 1, 3500)
       dl.pause 1000
       if rx = 0 then 
          countfb = countfb + 1
          DL.SendSequence "05-01"
          dl.pause 1000
       end if
   next

   dl.addcomment vbcrlf & vbcrlf & "1) AT w/ AppleVAS -- VAS and PAY, Failed count (10 cycles): " & countfa 
   dl.addcomment vbcrlf & "2) AT w/ AppleVAS -- PAY only, Failed count (10 cycles): " & countfb
end if
'------------------------------------------------------------
DL.AddComment vbCrLf
DL.AddComment "---------- END OF TEST ----------" & vbCrLf & vbcrlf
dl.addcomment "Please judge result by yourself..." & vbcrlf & vbcrlf
dl.addcomment "* Is Failed count reasonable?" & vbcrlf
dl.addcomment "* Item 1 Failed count was more then Item 2?"

Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""
'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'DL.pause 1000
'If 0 Then
'If result = 0 then
'  DL.AddComment Chr(13) & "Result = FAILED"
'Else
'  DL.AddComment Chr(13) & "Result = PASSED"
'End If
'End If
'If Prompting(0) = "ON" Then
'  If result = 0 then
'    MsgBox "Result = FAILED", VBOKOnly, "Result"
'  Else 
'    MsgBox "Result = PASSED", VBOKOnly, "Result"
'  End If
'End If
'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------
'If MasterResult = 1 Then
'      MasterVerdict = "PASSED"
'ElseIf MasterResult = 0 Then
'      MasterVerdict = "FAILED"
'End If
'result = MasterResult
'DL.AddComment vbCrLf
'DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile

Sub DL_OnSend()
    usDataLen = DL.OnSend_GetSize() - 2
    If usDataLen > 0 Then
        crcStr = DL.CalcChecksum("CRC-CCITT", DL.OnSend_GetData("H"), "H", 1, usDataLen) 
        ' Write result to the last two bytes of the sequence
        DL.OnSend_Poke usDataLen + 1, CInt("&h" + Right(crcStr, 2)) ' low byte
        DL.OnSend_Poke usDataLen + 2, CInt("&h" + Left(crcStr, 2)) ' high byte
    End If
End Sub
