DL_SCRIPTVERSION
1
59424

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "ST300" ' !!!!! EDIT THIS !!!!!
' Objective: SmartTap 2.1, test tag DFED3F = 01 but no data key
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
   'Display Test Case Number and Description     
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()
   Prompting(0) = result
      
   'Display Test Steps   
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   Prompting(1) = result

   'Set Docklight COM Port     
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   COM_Port(1) = result

   'Set Reader Baud Rate
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   POSBaudRate(1) = result

   'Set Reader Type
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   readerType = result

   'Set Reader Model
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   readerModel = result

   'Set Reader FW version
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   fwVersion = result

   'Set Reader FW build
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   fwBuild = result

   'Set Reader General Flag
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   fwGF = result
Loop

Sub StepPrompt(PromptString)
    DL.AddComment PromptString
    If Prompting(1) = "ON" Then
       MsgBox PromptString, VBOKOnly, "Test Step"
    Else
    End If
End Sub
'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0
countf = 0
vivotech = 0
idtech = 0

result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""
'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication
'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
End If

Sub PrintMyResult(ResultX)
    If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
       MasterResult = 1
       DL.AddComment "Result = PASSED"
    Else
       MasterResult = 0
       DL.AddComment "Result = FAILED"
    End If
End Sub
'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
         DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
         MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function
'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
If result <> 0 Then
   dl.resetreceivecounter
   DL.AddComment "--- Poll on demand"
   DL.SendSequence "poll on demand"
   result = DL.WaitForSequence("01-01 resp 00", 1, 3000)
End If

If result <> 0 Then
   dl.pause 1000
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Burst mode off  ** " & readerType 
   if readerType <> "NEO2" then 
      DL.SendSequence "burst mode off"
   else
      DL.SendSequence "burst mode off (NEO2)"
   end if
   result = DL.WaitForSequence("04-00 resp 00", 1, 3000)
End If

If result <> 0 Then
   dl.pause 1000
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- C7-65 set private key"
   DL.SendSequence "C7-65 set private key"
   result = DL.WaitForSequence("C7 00", 1, 5000)
End If

If result <> 0 Then
   dl.pause 1000
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 04-00 w/ tag DFED3F = 01 (VAS data encryption ON)"
   DL.SendSequence "04-00 w/ tag DFED3F = 01 (VAS data encryption ON)"
   result = DL.WaitForSequence("04-00 resp 00", 1, 5000)
End If

If result <> 0 Then
   msgbox "The case tested SmartTap 2.1 -- Test Suite 0", vbokonly

start_case = 1
end_case = 14

   for k = 1 to 8
       if k = 1 then caseNO = "1"
       if k = 2 then caseNO = "3"
       if k = 3 then caseNO = "5"
       if k = 4 then caseNO = "6"
       if k = 5 then caseNO = "8"
       if k = 6 then caseNO = "10"
       if k = 7 then caseNO = "13"
       if k = 8 then caseNO = "14"
   '------------------------------------------------------------
       dl.resetreceivecounter
       dl.addcomment vbcrlf
       DL.AddComment "Set config -- case 0." & caseNO & " ============================================================="
       if readerType <> "NEO2" then
          DL.SendSequence "case 0." & caseNO 
       else
          DL.SendSequence "case 0." & caseNO & " (NEO2)"
       end if
       result = DL.WaitForSequence("04-00 resp 00", 1, 5000)

       if result <> 0 then
          dl.pause 1000
          '------------------------------------------------------------
          if k = start_case then 
             cmdcheck = msgbox ("Does reader support cmd 02-01?", vbyesno)
             if cmdcheck = 6 then vivotech = 1
          end if
   
          if vivotech = 1 then
             msgbox "Click OK --> tap mobile phone (Merchant APP w/ case 0." & caseNO & ")", vbokonly
             dl.resetreceivecounter
             dl.addcomment vbcrlf
             DL.AddComment "--- 02-01 case " & caseNO 
             DL.SendSequence "02-01 case " & caseNO 
                if (k >= 4 and K <= 6) then 
                   r = DL.WaitForSequence("02 23", 1, 5000)
                   if readerType = "NEO2" then
                      if r <> 0 then 
                         if k = 6 then     'for #FXT-320
                         else
                            r = DL.WaitForSequence("02-01 case " & caseNO & " (NEO2)", 1, 10000)
                         end if
                      end if
                   else 
                      r = DL.WaitForSequence("02-01 case " & caseNO, 1, 10000)
                   end if
                else
                   if readerType = "NEO2" then r = DL.WaitForSequence("02-01 case " & caseNO & " (NEO2)", 1, 10000)
                   if readerType <> "NEO2" then r = DL.WaitForSequence("02-01 case " & caseNO, 1, 10000)
                end if

             if r = 0 then 
                countf = countf + 1
                dl.addcomment vbcrlf & "***** FAIL *****"
             end if
             dl.pause 500
          else 
             DL.AddComment vbCrLf & vbcrlf & "cmd 02-01: NA" & vbcrlf 
          end if
          '------------------------------------------------------------
          if k = start_case then 
             cmdcheck = msgbox ("Does reader support cmd 02-40?", vbyesno)
             if cmdcheck = 6 then idtech = 1
          end if

          if idtech = 1 then
             msgbox "Click OK --> tap mobile phone (Merchant APP w/ case 0." & caseNO & ")", vbokonly
             dl.resetreceivecounter
             dl.addcomment vbcrlf
             DL.AddComment "--- 02-40 case " & caseNO 
             DL.SendSequence "02-40 case " & caseNO 
                if (k >= 4 and K <= 6) then 
                   r = DL.WaitForSequence("02 23", 1, 5000)
                   if readerType = "NEO2" then
                      if r <> 0 then 
                         if k = 6 then     'for #FXT-320
                         else
                            r = DL.WaitForSequence("02-40 case " & caseNO & " (NEO2)", 1, 10000)
                         end if
                      end if
                   else 
                      r = DL.WaitForSequence("02-40 case " & caseNO, 1, 10000)
                   end if
                else
                   if readerType = "NEO2" then r = DL.WaitForSequence("02-40 case " & caseNO & " (NEO2)", 1, 10000)
                   if readerType <> "NEO2" then r = DL.WaitForSequence("02-40 case " & caseNO, 1, 10000)
                end if

             if r = 0 then 
                countf = countf + 1
                dl.addcomment vbcrlf & "***** FAIL *****"
             end if
             dl.pause 500
          else 
             DL.AddComment vbCrLf & vbcrlf & "cmd 02-40: NA" & vbcrlf
          end if
          '------------------------------------------------------------
       else
          countf = countf + 1
       end if
   '------------------------------------------------------------
   next
End If

if countf <> 0 then result = 0

DL.AddComment vbCrLf
'============================================================
DL.AddComment "---------- END OF TEST ----------" & vbCrLf
PrintMyResult(result)

Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""
'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'DL.pause 1000

'If result = 0 then
'   DL.AddComment Chr(13) & "Result = FAILED"
'Else
'   DL.AddComment Chr(13) & "Result = PASSED"
'End If

'If Prompting(0) = "ON" Then
'   If result = 0 then
'      MsgBox "Result = FAILED", VBOKOnly, "Result"
'   Else 
'      MsgBox "Result = PASSED", VBOKOnly, "Result"
'   End If
'End If
'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------
'If MasterResult = 1 Then
'   MasterVerdict = "PASSED"
'ElseIf MasterResult = 0 Then
'       MasterVerdict = "FAILED"
'End If
'result = MasterResult
'DL.AddComment vbCrLf
'DL.AddComment "MASTER RESULT = " & MasterVerdict
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
   FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
       FileOutput.WriteLine "1|PASS|OK"
End If
FileOutput.CloseFile

Sub DL_OnSend()
    usDataLen = DL.OnSend_GetSize() - 2
    If usDataLen > 0 Then
        crcStr = DL.CalcChecksum("CRC-CCITT", DL.OnSend_GetData("H"), "H", 1, usDataLen) 
        ' Write result to the last two bytes of the sequence
        DL.OnSend_Poke usDataLen + 1, CInt("&h" + Right(crcStr, 2)) ' low byte
        DL.OnSend_Poke usDataLen + 2, CInt("&h" + Left(crcStr, 2)) ' high byte
    End If
End Sub
