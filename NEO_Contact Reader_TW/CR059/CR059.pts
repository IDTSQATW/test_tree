DL_SCRIPTVERSION
1
28359

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "CR059" ' !!!!! EDIT THIS !!!!!
' Objective: fallback status, cancel cmd 60-10 test
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result

  'Set Reader Type
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerType = result

  'Set Reader Model
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerModel = result

  'Set Reader FW version
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwVersion = result

  'Set Reader FW build
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwBuild = result    

  'Set Reader General Flag
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  GF = result  
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
End Sub
'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
'DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0

result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""
'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication
'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub

Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function
'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function
'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
If result <> 0 Then
   dl.resetreceivecounter
   DL.AddComment "--- 04-0A"
   DL.SendSequence "04-0A"
   result = DL.WaitForSequence("04 00", 1, 10000)
   if result <> 0 then dl.pause 8000
End If

if readerType = "NEO2" then
   If result <> 0 Then
      dl.resetreceivecounter
      dl.addcomment vbcrlf
      DL.AddComment "--- DFED59 =  00 (Send First Response 0x63)"
      DL.SendSequence "DFED59 =  00 (Send First Response 0x63)"
      result = DL.WaitForSequence("04 00", 1, 10000)
   End If
end if

for k = 1 to 2
    if k = 1 then cmd = "01-01-----Poll on Demand"
    if k = 2 then cmd = "01-01-----Auto Poll"

    if result <> 0 then
       dl.resetreceivecounter
       dl.addcomment vbcrlf
       DL.AddComment "--- " & cmd
       DL.SendSequence cmd
       result = DL.WaitForSequence("01 00", 1, 2000)
       dl.pause 1000
    end if
'------------------------------------------------------------fallback to chip reader
If result <> 0 Then
   dl.pause 2000
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 60-10 Contact Start Transaction *** " & readerType 
   DL.SendSequence "60-10"
   result = DL.WaitForSequence("60-xx 63 status", 1, 1200)
   if result <> 0 then
      msgbox "Click OK --> Swipe any card that service code is 2 or 6 (fallback to ICC)"
      if readerType <> "NEO2" then 
         result = DL.WaitForSequence("USE CHIP READER", 1, 10000)
      else
         lcdcheck = msgbox ("Does reader has LCD?", vbyesno)
         if lcdcheck = 6 then
            result = msgbox("Does LCD show 'USE CHIP READER'?", vbyesno)
            if result = 7 then result = 0
         elseif lcdcheck = 7 then
            result = DL.WaitForSequence("USE CHIP READER", 1, 10000)
         end if
      end if
   end if
End If

If result <> 0 Then
   dl.pause 2000
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 05-01 Cancel transaction"
   DL.SendSequence "05-01 Cancel transaction"
   result = DL.WaitForSequence("05-xx 00 status", 1, 2000)
   if result <> 0 then
      ledcheck = msgbox ("Is reader idle status?", vbyesno)
      if ledcheck = 7 then result = 0
   end if
   dl.pause 1000
End If
'------------------------------------------------------------fallback to MSR reader
If result <> 0 Then
   dl.pause 500
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 60-10 Contact Start Transaction"
   DL.SendSequence "60-10"
   result = DL.WaitForSequence("60-xx 63 status", 1, 1200)
   if result <> 0 then
      msgbox "Click OK --> Insert any card that IC Chip can not be powered ON (fallback to MSR)"
      if readerType <> "NEO2" then 
         result = DL.WaitForSequence("USE MAGSTRIPE", 1, 10000)
      else
         lcdcheck = msgbox ("Does reader has LCD?", vbyesno)
         if lcdcheck = 6 then
            result = msgbox("Does LCD show 'USE MAGSTRIPE'?", vbyesno)
            if result = 7 then result = 0
         elseif lcdcheck = 7 then
            result = DL.WaitForSequence("USE MAGSTRIPE", 1, 10000)
         end if
      end if
   end if
End If

If result <> 0 Then
   dl.pause 2000
   msgbox "Remove card --> Click OK"
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 05-01 Cancel transaction"
   DL.SendSequence "05-01 Cancel transaction"
   result = DL.WaitForSequence("05-xx 00 status", 1, 2000)
   if result <> 0 then
      ledcheck = msgbox ("Is reader idle status?", vbyesno)
      if ledcheck = 7 then result = 0
   end if
   dl.pause 1000
End If

next

if result = 0 then
   dl.addcomment vbcrlf
   DL.AddComment "--- 05-01 Cancel transaction"
   DL.SendSequence "05-01 Cancel transaction"
   dl.pause 1000
end if

DL.SendSequence "01-01-----Poll on Demand"
'------------------------------------------------------------
DL.AddComment vbCrLf
PrintMyResult(result)

DL.AddComment "---------- END OF TEST ----------" & vbCrLf
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""
'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.pause 1000

If result = 0 then
  DL.AddComment Chr(13) & "Result = FAILED"
Else
  DL.AddComment Chr(13) & "Result = PASSED"
End If

If Prompting(0) = "ON" Then
  If result = 0 then
    MsgBox "Result = FAILED", VBOKOnly, "Result"
  Else 
    MsgBox "Result = PASSED", VBOKOnly, "Result"
  End If
End If

'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------

If MasterResult = 1 Then
      MasterVerdict = "PASSED"
ElseIf MasterResult = 0 Then
      MasterVerdict = "FAILED"
End If
result = MasterResult
DL.AddComment vbCrLf
DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 
