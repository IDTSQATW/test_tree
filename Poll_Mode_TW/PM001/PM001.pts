DL_SCRIPTVERSION
1
61914

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "PM001" ' !!!!! EDIT THIS !!!!!
' Modify from PM001
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result

  'Set Reader Type
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerType = result

  'Set Reader Model
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerModel = result

  'Set Reader FW version
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwVersion = result

  'Set Reader FW build
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwBuild = result

  'Set Reader General Flag
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  genFlag = result
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
      
End Sub

'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
'DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0

result = 1
count = 0

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication

'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
		'dl.addcomment vbcrlf
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
		'dl.addcomment vbcrlf
            DL.AddComment "Result = FAILED"
		count = count + 1
      End If
End Sub


Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function

'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function

'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
If result <> 0 Then
  dl.resetreceivecounter
  DL.AddComment "--- Auto Poll"
  DL.SendSequence "Auto Poll"
  result = DL.WaitForSequence("Good Response", 1, 10000)
End If

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Burst Mode: OFF"
   if readerType <> "NEO2" then DL.SendSequence "burst mode off"
   if readerType = "NEO2" then DL.SendSequence "burst mode off (NEO2)"
   result = DL.WaitForSequence("burst mode off", 1, 10000)
End If

'------------------------------------------------------------
If result <> 0 Then

   dl.addcomment vbcrlf
   dl.addcomment "--- Tap 3 cards:"

   confirm = MsgBox ("Click Yes then tap ViVOtech card.")  
   dl.resetreceivecounter
   r1 = DL.WaitForSequence("burst mode data 1", 1, 4000)
   r2 = DL.WaitForSequence("burst mode data 2", 1, 1000)
   r3 = DL.WaitForSequence("burst mode data 3", 1, 1000)
   r4 = DL.WaitForSequence("transaction data", 1, 4000)
   If r1 = 1 or r2 = 1 or r3 = 1 or r4 = 1 Then
      result = 0
   else 
      result = 1
   end if
dl.pause 2000
   if result <> 0 then 
      prompt1 = prompt1 & "Did it BEEP?"
      confirm1 = InputBox(prompt1, "Enter (Y / y / N / n)", "Y / N")  
      result = (confirm1 = "y" Or confirm1 = "Y")
   else
      confirm = MsgBox ("Do u see RX has data AND that is burst mode data?", vbyesno) 
      if confirm = 6 then 
      elseif confirm = 7 then
         prompt1 = prompt1 & "Did it BEEP?"
         confirm1 = InputBox(prompt1, "Enter (Y / y / N / n)", "Y / N")  
         result = (confirm1 = "y" Or confirm1 = "Y")
      end if
   End If
dl.addcomment vbcrlf
dl.addcomment "ViVOtech card: "
PrintMyResult(result)

   confirm = MsgBox ("Click OK then tap VISA card.")  
   dl.resetreceivecounter
   r1 = DL.WaitForSequence("burst mode data 1", 1, 4000)
   r2 = DL.WaitForSequence("burst mode data 2", 1, 1000)
   r3 = DL.WaitForSequence("burst mode data 3", 1, 1000)
   r4 = DL.WaitForSequence("transaction data", 1, 4000)
   If r1 = 1 or r2 = 1 or r3 = 1 or r4 = 1 Then
      result = 0
   else 
      result = 1
   end if
dl.pause 2000
   if result <> 0 then 
      prompt1 = prompt1 & "Did it BEEP?"
      confirm1 = InputBox(prompt1, "Enter (Y / y / N / n)", "Y / N")  
      result = (confirm1 = "y" Or confirm1 = "Y")
   else
      confirm = MsgBox ("Do u see RX has data AND that is burst mode data?", vbyesno) 
      if confirm = 6 then 
      elseif confirm = 7 then
         prompt1 = prompt1 & "Did it BEEP?"
         confirm1 = InputBox(prompt1, "Enter (Y / y / N / n)", "Y / N")  
         result = (confirm1 = "y" Or confirm1 = "Y")
      end if
   End If
dl.addcomment vbcrlf
dl.addcomment "VISA card: "
PrintMyResult(result)

   confirm = MsgBox ("Click OK then tap MasterCard card.")  
   dl.resetreceivecounter
   r1 = DL.WaitForSequence("burst mode data 1", 1, 4000)
   r2 = DL.WaitForSequence("burst mode data 2", 1, 1000)
   r3 = DL.WaitForSequence("burst mode data 3", 1, 1000)
   r4 = DL.WaitForSequence("transaction data", 1, 4000)
   If r1 = 1 or r2 = 1 or r3 = 1 or r4 = 1 Then
      result = 0
   else 
      result = 1
   end if
dl.pause 2000
   if result <> 0 then 
      prompt1 = prompt1 & "Did it BEEP?"
      confirm1 = InputBox(prompt1, "Enter (Y / y / N / n)", "Y / N")  
      result = (confirm1 = "y" Or confirm1 = "Y")
   else
      confirm = MsgBox ("Do u see RX has data AND that is burst mode data?", vbyesno) 
      if confirm = 6 then 
      elseif confirm = 7 then
         prompt1 = prompt1 & "Did it BEEP?"
         confirm1 = InputBox(prompt1, "Enter (Y / y / N / n)", "Y / N")  
         result = (confirm1 = "y" Or confirm1 = "Y")
      end if
   End If
dl.addcomment vbcrlf
dl.addcomment "MasterCard card: "
PrintMyResult(result)

end if
'------------------------------------------------------------
dl.addcomment vbcrlf
dl.addcomment "FAIL card: " & count
if count <> 0 then
   result = 0
else
   result = 1
end if

DL.AddComment vbCrLf
PrintMyResult(result)

DL.AddComment "---------- END OF TEST ----------" & vbCrLf
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""

'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.pause 1000

If result = 0 then
  DL.AddComment Chr(13) & "Result = FAILED"
Else
  DL.AddComment Chr(13) & "Result = PASSED"
End If

If Prompting(0) = "ON" Then
  If result = 0 then
    MsgBox "Result = FAILED", VBOKOnly, "Result"
  Else 
    MsgBox "Result = PASSED", VBOKOnly, "Result"
  End If
End If

'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------

If MasterResult = 1 Then
      MasterVerdict = "PASSED"
ElseIf MasterResult = 0 Then
      MasterVerdict = "FAILED"
End If
result = MasterResult
DL.AddComment vbCrLf
DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 

Sub DL_OnSend()
    usDataLen = DL.OnSend_GetSize() - 2
    If usDataLen > 0 Then
        crcStr = DL.CalcChecksum("CRC-CCITT", DL.OnSend_GetData("H"), "H", 1, usDataLen) 
        ' Write result to the last two bytes of the sequence
        DL.OnSend_Poke usDataLen + 1, CInt("&h" + Right(crcStr, 2)) ' low byte
        DL.OnSend_Poke usDataLen + 2, CInt("&h" + Left(crcStr, 2)) ' high byte
    End If
End Sub
