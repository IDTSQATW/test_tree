DL_SCRIPTVERSION
1
33911

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "DTX014" ' !!!!! EDIT THIS !!!!!
'+++
' This is to verify a string can be "replaced" with another string
'---

'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)
Dim ControlID
Dim Global_Verdict
DebuggerOption = 1
Global_Verdict = "INCONCLUSIVE"

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result
      
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
      
End Sub

'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0

result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication

'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON " Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub


Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function

'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function

'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
'------------------------------------------------------------
 MyInput = MsgBox ("Are you testing 8100 Series of readers?", VBYesNo, "Test Step")
 DL.SendSequence "Clear Display"
 result =  DL.WaitForSequence ("List Directory OK", 1,3000)
 DL.SendSequence "Enable Custom Display Mode"
 result = DL.WaitForSequence ("List Directory OK", 1,3000)
 DL.Pause 400


'____________________________________________________________
If MyInput = 6 Then
	If result <> 0 Then
 		 DL.AddComment "--- Wordwrap 1"
 		 DL.SendSequence "Wordwrap 1"
  		 result = DL.WaitForSequence ("Display Control OK", 1,3000)
             Debugger "ControlID", ControlID
             DL.SendSequence "Change text to 'Hello World!!!'", ControlID, "H"
             result = DL.WaitForSequence ("List Directory OK", 1,3000)

	End If
'------------------------------------------------------------
	If result <> 0 Then
   		prompt = prompt & "This test is specific to the 8100 but can run on all platforms. As long as the charcters are displayed on the 8600 and 8800 the test passes.  On the 8100 Does the LCD display 'Hello World'?"
   		confirm = InputBox(prompt, "Enter (Y / y / N / n)", "Y / N")  
   		result = (confirm = "y" Or confirm = "Y")
	End If

	If result <> 0 Then
 		 DL.AddComment "--- Disable Custom Display Mode"
 		 DL.SendSequence "Disable Custom Display Mode"
  		 result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	End If

'--------------------------------------------------------------
'_____________________________________________________________
ElseIf MyInput = 7 Then
	If result <> 0 Then
 		 DL.AddComment "--- Wordwrap 1"
 		 DL.SendSequence "Wordwrap 1"
  		 result = DL.WaitForSequence ("Display Control OK", 1,3000)
             Debugger "ControlID", ControlID
		 DL.Pause 1200
             DL.SendSequence "Change text to 'Hello World!!!'", ControlID, "H"
             result = DL.WaitForSequence ("List Directory OK", 1,3000)

	End If
'------------------------------------------------------------
	If result <> 0 Then
   		prompt = prompt & "Do you see a previously displayed string is replaced with 'Hello World'?"
   		confirm = InputBox(prompt, "Enter (Y / y / N / n)", "Y / N")  
   		result = (confirm = "y" Or confirm = "Y")
	End If

	'If result <> 0 Then
 		 'DL.AddComment "--- Disable Custom Display Mode"
 		 'DL.SendSequence "Disable Custom Display Mode"
  		 'result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	'End If

End If
'--------------------------------------------------------------
DL.AddComment vbCrLf
PrintMyResult(result)

DL.AddComment "---------- END OF TEST ----------" & vbCrLf
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""

'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.pause 1000

If result = 0 then
  DL.AddComment Chr(13) & "Result = FAILED"
Else
  DL.AddComment Chr(13) & "Result = PASSED"
End If

If Prompting(0) = "ON" Then
  If result = 0 then
    MsgBox "Result = FAILED", VBOKOnly, "Result"
  Else 
    MsgBox "Result = PASSED", VBOKOnly, "Result"
  End If
End If

'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------

If MasterResult = 1 Then
      MasterVerdict = "PASSED"
ElseIf MasterResult = 0 Then
      MasterVerdict = "FAILED"
End If
result = MasterResult
DL.AddComment vbCrLf
DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 

'------------------------------------------------------------
' Get 4 Byte ID (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Sub DL_OnReceive()
resultName = DL.OnReceive_GetName()
DL.AddComment "resultName = " & resultName

Select Case resultName
	Case "Display Control OK"
		result = DL.OnReceive_GetData("H")	' get the result as string of Hex-values
		DL.AddComment result	
		' one possible solution to get single characters
		MyArray = Split(result , " ", -1, 1)

		' ### Prints each byte in array
		'For i = 0 to UBound(MyArray)
   		'	DL.AddComment "i = " & i & "Array - " & (MyArray(i))
		'Next
		' ### Extracts 4 byte Control ID
		ControlID = MyArray(14) & " " & MyArray(15) & " " & MyArray(16) & " " & MyArray(17)
		' ### Prints 4 byte Control ID
		DL.AddComment "Control ID = " & ControlID
	Case "ENTER Key PRESSED"
		ENTER_Key_Pressed = 1
End Select
End Sub

'------------------------------------------------------------
' CRC Function (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------

Sub DL_OnSend()
    ' For all Send Sequences with minimum 3 bytes length (one byte user data,
    ' two bytes CRC, perform the following manipulation:
    ' - Calculate a 16 bit crc value on the characters 1 .. (DL.OnSend_Size() - 2)
    ' - Write the low byte to character no. DL.OnSend_GetSize()-1
    ' - Write the high byte to character no. DL.OnSend_GetSize()
    ' Example:
    ' Send Sequence name: MyCommand
    ' Send Sequence in HEX representation: 02 04 00 00 00 01 00 00
    ' --> Data transmitted by Docklight:   02 04 00 00 00 01 31 F9
    '     (with "31" as the low byte CRC, "F9" as the high byte)

    ' Check if there is at least one byte of user data
    usDataLen = DL.OnSend_GetSize() - 2
    If usDataLen > 0 Then
        crcStr = DL.CalcChecksum("CRC-CCITT", DL.OnSend_GetData("H"), "H", 1, usDataLen) 
        ' Write result to the last two bytes of the sequence
        DL.OnSend_Poke usDataLen + 1, CInt("&h" + Right(crcStr, 2)) ' low byte
        DL.OnSend_Poke usDataLen + 2, CInt("&h" + Left(crcStr, 2)) ' high byte
    End If
End Sub

'========================================
'= Debugger
'========================================
Function Debugger(itemNameString, itemName)
	If DebuggerOption = 0 Then
	ElseIf DebuggerOption = 1 Then
		If itemName = "" Then
			DL.AddComment "Debugger: " & itemNameString
		Else
			DL.AddComment "Debugger: " & itemNameString & " = " & itemName
		End If
	End If
End Function

'========================================
'= Verdict Function
'========================================
Function verdict(result)
	If result = 1 Then
		verdict = "PASS"
		Debugger "TEST VERDICT IS", verdict
		If Global_Verdict = "FAIL" Then
			Global_Verdict = "FAIL"
   			MasterResult = 0
		ElseIf Global_Verdict = "INCONCLUSIVE" Then
			Global_Verdict = "PASS"
  			MasterResult = 1
			'DL.AddComment "Debug - IN HERE 111!!!"
			'DL.Pause 3000
		ElseIf Global_Verdict = "PASS" Then
			Global_Verdict = "PASS"
  			MasterResult = 1
			'DL.AddComment "Debug - IN HERE 222!!!"
			'DL.Pause 3000
		End If
		'DL.AddComment vbCrLf & "Global V = " & Global_Verdict
		Debugger "Global_Verdict", Global_Verdict
	ElseIf result = 0 Then
		verdict = "FAIL"
		Debugger "TEST VERDICT IS", verdict
		Global_Verdict = "FAIL"
 		MasterResult = 0
		'DL.AddComment vbCrLf & "Global V = " & Global_Verdict
		Debugger "Global_Verdict", Global_Verdict
		
	End If
End Function


