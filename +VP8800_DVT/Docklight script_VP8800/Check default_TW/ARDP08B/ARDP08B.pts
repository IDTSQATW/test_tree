DL_SCRIPTVERSION
1
63515

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "ARDP08B" ' !!!!! EDIT THIS !!!!!
'+++
' This test case was modified from GRDP101.
' This test case is intended to verify the default TLV settings against NEO 1.0.0
' By searching the word "missing" in the log file, you will find out where and what the error is.
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)
DebuggerOption = 1
Dim ControlID

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result
      
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
      
End Sub

'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
'DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0
result = 1
errorCounter = 0

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication

'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub

Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function

'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function


Sub DL_OnSend()
    ' For all Send Sequences with minimum 3 bytes length (one byte user data,
    ' two bytes CRC, perform the following manipulation:
    ' - Calculate a 16 bit crc value on the characters 1 .. (DL.OnSend_Size() - 2)
    ' - Write the low byte to character no. DL.OnSend_GetSize()-1
    ' - Write the high byte to character no. DL.OnSend_GetSize()
    ' Example:
    ' Send Sequence name: MyCommand
    ' Send Sequence in HEX representation: 02 04 00 00 00 01 00 00
    ' --> Data transmitted by Docklight:   02 04 00 00 00 01 31 F9
    '     (with "31" as the low byte CRC, "F9" as the high byte)

    ' Check if there is at least one byte of user data
    usDataLen = DL.OnSend_GetSize() - 2
    If usDataLen > 0 Then
        crcStr = DL.CalcChecksum("CRC-CCITT", DL.OnSend_GetData("H"), "H", 1, usDataLen) 
        ' Write result to the last two bytes of the sequence
        DL.OnSend_Poke usDataLen + 2, CInt("&h" + Left(crcStr, 2)) ' high byte
        DL.OnSend_Poke usDataLen + 1, CInt("&h" + Right(crcStr, 2)) ' low byte
    End If
End Sub


'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------

'-----------------------------------------------------------------------------
' check Get Configuration (03-02)common Global params '-----------------------------------------------------------------------------
notify = msgbox ("Must load F/W via J-Link before running this case. Click OK to start test.", vbokonly)

'--- check Global params -----------------------------------------------------------------------------
'------------------------------------------------------------------------------------------------------
  	DL.ResetReceiveCounter
      dl.addcomment vbcrlf
  	DL.AddComment "--- Reset to default (04-09)"
  	DL.SendSequence "Reset to default (04-09)"
      dl.pause 3000
      result = DL.WaitForSequence ("Reset successfully", 1,300)
'------------------------------------------------------------
  	DL.ResetReceiveCounter
      dl.addcomment vbcrlf
  	DL.AddComment "--- Get Dataset (03-06)_8A"
  	DL.SendSequence "Get Dataset (03-06)_8A"
      result = DL.WaitForSequence ("Byte number", 1,300)
      If result = 0 Then
         DL.AddComment vbCrLf & "***Byte number is missing match."
         errorCounter = errorCounter + 1
      End If

      dl.pause 1000
'------------------------------------------------------------
  	result = DL.WaitForSequence ("Tag 5F57 resp", 1,300)
      If result = 0 Then
         DL.AddComment vbCrLf & "***Parameter Tag 5F57 is missing match."
         errorCounter = errorCounter + 1
      else
         dl.addcomment vbcrlf & "Tag 5F57: PASS"
      End If
'------------------------------------------------------------
  	result = DL.WaitForSequence ("Tag 5F2A resp", 1,300)
      If result = 0 Then
         DL.AddComment vbCrLf & "***Parameter Tag 5F2A is missing match."
         errorCounter = errorCounter + 1
      else
         dl.addcomment vbcrlf & "Tag 5F2A: PASS"
      End If
'------------------------------------------------------------
  	result = DL.WaitForSequence ("Tag 9F09 resp", 1,300)
      If result = 0 Then
         DL.AddComment vbCrLf & "***Parameter Tag 9F09 is missing match."
         errorCounter = errorCounter + 1
      else
         dl.addcomment vbcrlf & "Tag 9F09: PASS"
      End If
'------------------------------------------------------------
  	result = DL.WaitForSequence ("Tag 5F36 resp", 1,300)
      If result = 0 Then
         DL.AddComment vbCrLf & "***Parameter Tag 5F36 is missing match."
         errorCounter = errorCounter + 1
      else
         dl.addcomment vbcrlf & "Tag 5F36: PASS"
      End If
'------------------------------------------------------------
  	result = DL.WaitForSequence ("Tag 9F1B resp", 1,300)
      If result = 0 Then
         DL.AddComment vbCrLf & "***Parameter Tag 9F1B is missing match."
         errorCounter = errorCounter + 1
      else
         dl.addcomment vbcrlf & "Tag 9F1B: PASS"
      End If
'------------------------------------------------------------
  	result = DL.WaitForSequence ("Tag DFEE0E resp", 1,300)
      If result = 0 Then
         DL.AddComment vbCrLf & "***Parameter Tag DFEE0E is missing match."
         errorCounter = errorCounter + 1
      else
         dl.addcomment vbcrlf & "Tag DFEE0E: PASS"
      End If
'------------------------------------------------------------
  	result = DL.WaitForSequence ("Tag DFEE3F resp", 1,300)
      If result = 0 Then
         DL.AddComment vbCrLf & "***Parameter Tag DFEE3F is missing match."
         errorCounter = errorCounter + 1
      else
         dl.addcomment vbcrlf & "Tag DFEE3F: PASS"
      End If
'------------------------------------------------------------
  	result = DL.WaitForSequence ("Tag DFEE13 resp", 1,300)
      If result = 0 Then
         DL.AddComment vbCrLf & "***Parameter Tag DFEE13 is missing match."
         errorCounter = errorCounter + 1
      else
         dl.addcomment vbcrlf & "Tag DFEE13: PASS"
      End If
'------------------------------------------------------------
  	result = DL.WaitForSequence ("Tag DFEE14 resp", 1,300)
      If result = 0 Then
         DL.AddComment vbCrLf & "***Parameter Tag DFEE14 is missing match."
         errorCounter = errorCounter + 1
      else
         dl.addcomment vbcrlf & "Tag DFEE14: PASS"
      End If
'------------------------------------------------------------
  	result = DL.WaitForSequence ("Tag DFEE04 resp", 1,300)
      If result = 0 Then
         DL.AddComment vbCrLf & "***Parameter Tag DFEE04 is missing match."
         errorCounter = errorCounter + 1
      else
         dl.addcomment vbcrlf & "Tag DFEE04: PASS"
      End If
'------------------------------------------------------------
  	result = DL.WaitForSequence ("Tag DFEE06 resp", 1,300)
      If result = 0 Then
         DL.AddComment vbCrLf & "***Parameter Tag DFEE06 is missing match."
         errorCounter = errorCounter + 1
      else
         dl.addcomment vbcrlf & "Tag DFEE06: PASS"
      End If
'------------------------------------------------------------
  	result = DL.WaitForSequence ("Tag DFEE05 resp", 1,300)
      If result = 0 Then
         DL.AddComment vbCrLf & "***Parameter Tag DFEE05 is missing match."
         errorCounter = errorCounter + 1
      else
         dl.addcomment vbcrlf & "Tag DFEE05: PASS"
      End If
'------------------------------------------------------------
  	result = DL.WaitForSequence ("Tag DFEE07 resp", 1,300)
      If result = 0 Then
         DL.AddComment vbCrLf & "***Parameter Tag DFEE07 is missing match."
         errorCounter = errorCounter + 1
      else
         dl.addcomment vbcrlf & "Tag DFEE07: PASS"
      End If
'------------------------------------------------------------
If errorCounter <> 0 Then
   DL.AddComment vbCrLf & vbCrLf & "Found " & errorCounter & " errors in testing. Please check the log file for details."
   result = 0
End If
'------------------------------------------------------------
DL.AddComment vbcrlf & "---------- END OF TEST ----------" & vbCrLf
PrintMyResult(result)

Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""

'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'DL.pause 1000

'If 0 Then
' If result = 0 then
'  DL.AddComment Chr(13) & "Result = FAILED"
' Else
'  DL.AddComment Chr(13) & "Result = PASSED"
' End If
'End If

'If Prompting(0) = "ON" Then
'  If result = 0 then
'    MsgBox "Result = FAILED", VBOKOnly, "Result"
'  Else 
'    MsgBox "Result = PASSED", VBOKOnly, "Result"
'  End If
'End If

'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------

If MasterResult = 1 Then
      MasterVerdict = "PASSED"
ElseIf MasterResult = 0 Then
      MasterVerdict = "FAILED"
End If
result = MasterResult
DL.AddComment vbCrLf
DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 



