DL_SCRIPTVERSION
1
61107

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "VL101" ' !!!!! EDIT THIS !!!!!
'+++
' Looping w/ vend basic functions

'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result
      
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
      
End Sub

'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0

result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication

'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON " Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub


Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function

'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function

'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
MyInput = MsgBox ("Are you testing a Vend reader?", VBYesNo, "Test Step")

'------------------------------------------------------------
If MyInput = 6 Then

  DL.SendSequence "Disable blue LED"
  DL.Pause 1000

  DL.SendSequence "Set Blue LED"
  DL.Pause 1000

  DL.SendSequence "set Done&Swipe buttons"
  DL.Pause 1000

  DL.SendSequence "get button cfg"
  DL.Pause 1000

  DL.SendSequence "Clear Vend Display"
  DL.Pause 1000

  MyInput = MsgBox("Press click OK and the present cards by following prompt on LCD.", VBOKOnly, "Test: button")

 Do

  DL.SendSequence " yellow led off"
  DL.Pause 600
  DL.SendSequence " LCD Line2 (... test vend ...)"
  DL.Pause 600
  DL.AddComment "--- LCD Line1 (Please tap card)"
  DL.SendSequence " LCD Line1 (Please tap card)"
  DL.ResetReceiveCounter
  result = DL.WaitForSequence("card burst resp ", 1, 5000)

  If result <> 0 Then
     DL.AddComment "--- LCD Line1 (Card is read OK)"
     DL.SendSequence " LCD Line1 (Card is read OK)"
     DL.Pause 1000

     DL.AddComment "--- LCD Line1 (Push DONE Button)"
     DL.SendSequence " LCD Line1 (Push DONE Button)"
     DL.ResetReceiveCounter
     result = DL.WaitForSequence("Done button resp", 1, 5000)
     
     If result <> 0 Then
       DL.AddComment "--- LCD Line1 (Button is OK)"
       DL.SendSequence " LCD Line1 (Button is OK)"
       DL.Pause 1000
     Else
       DL.AddComment "--- LCD Line1 (No button read)"
       DL.SendSequence " LCD Line1 (No button read)"
       DL.Pause 1000
     End If

  Else 
     DL.AddComment "--- LCD Line1 (No card is read)"
     DL.SendSequence " LCD Line1 (No card is read)"
     DL.Pause 200

     DL.SendSequence "", "56 69 56 4F 74 65 63 68 32 00 F0 FE 00 00 F9 03", "H"
     DL.Pause 300
     DL.SendSequence "", "56 69 56 4F 74 65 63 68 32 00 F0 FE 00 00 F9 03", "H"
     DL.Pause 1000
  End If

  DL.SendSequence " LCD Line2 (... run vend ...)"
  DL.Pause 600

  DL.AddComment "--- LCD Line1 (Push SWIPE Butn)"
  DL.SendSequence " LCD Line1 (Push SWIPE Butn)"
  DL.ResetReceiveCounter
  result = DL.WaitForSequence("Swipe button resp", 1, 5000)

  If result <> 0 Then
     DL.AddComment "--- LCD Line1 (Button is OK)"
     DL.SendSequence " LCD Line1 (Button is OK)"
     DL.Pause 200
     DL.SendSequence " yellow led on"
     DL.Pause 1000
  Else
     DL.AddComment "--- LCD Line1 (No button read)"
     DL.SendSequence " LCD Line1 (No button read)"
     DL.Pause 1000
  End If

  DL.AddComment "--- LCD Line1 (Pls swipe card)"
  DL.SendSequence " LCD Line1 (Pls swipe card)"
  DL.ResetReceiveCounter
  result = DL.WaitForSequence("card burst resp", 1, 5000)

  If result <> 0 Then
     DL.AddComment "--- LCD Line1 (Card is read OK)"
     DL.SendSequence " LCD Line1 (Card is read OK)"
     DL.Pause 1000

     DL.AddComment "--- LCD Line1 (Push DONE Button)"
     DL.SendSequence " LCD Line1 (Push DONE Button)"
     DL.ResetReceiveCounter
     result = DL.WaitForSequence("Done button resp", 1, 5000)
     
     If result <> 0 Then
       DL.AddComment "--- LCD Line1 (Button is OK)"
       DL.SendSequence " LCD Line1 (Button is OK)"
       DL.Pause 1000
     Else
       DL.AddComment "--- LCD Line1 (No button read)"
       DL.SendSequence " LCD Line1 (No button read)"
       DL.Pause 1000
     End If

  Else 
     DL.AddComment "--- LCD Line1 (No card is read)"
     DL.SendSequence " LCD Line1 (No card is read)"
     DL.Pause 200

     DL.SendSequence "", "56 69 56 4F 74 65 63 68 32 00 F0 FE 00 00 F9 03", "H"
     DL.Pause 300
     DL.SendSequence "", "56 69 56 4F 74 65 63 68 32 00 F0 FE 00 00 F9 03", "H"
     DL.Pause 1000
  End If

 Loop While 1

ElseIf MyInput = 7 Then
   DL.SendSequence "Set Both Lines LCD Display"
   DL.AddComment vbCrLf & "User selected 'No'" & vbCrLf
   result = DL.WaitForSequence("Error Response", 1, 5000)
End If

'------------------------------------------------------------
DL.SendSequence "Disable blue LED"

DL.Pause 1500

DL.AddComment vbCrLf
PrintMyResult(result)

DL.AddComment "---------- END OF TEST ----------" & vbCrLf
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""

'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.pause 1000

If result = 0 then
  DL.AddComment Chr(13) & "Result = FAILED"
Else
  DL.AddComment Chr(13) & "Result = PASSED"
End If

If Prompting(0) = "ON" Then
  If result = 0 then
    MsgBox "Result = FAILED", VBOKOnly, "Result"
  Else 
    MsgBox "Result = PASSED", VBOKOnly, "Result"
  End If
End If

'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------

If MasterResult = 1 Then
      MasterVerdict = "PASSED"
ElseIf MasterResult = 0 Then
      MasterVerdict = "FAILED"
End If
result = MasterResult
DL.AddComment vbCrLf
DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 



