DL_SCRIPTVERSION
1
52091

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "FWD00108" ' !!!!! EDIT THIS !!!!!
' This test case verifies
' 1. the text display locations
' 2. the uniqueness of graphic Ids for different text messages
' 3. the correctness of changing a text display, which is specified by its unique graphic Id.

'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)
Dim ControlID
Dim Global_Verdict
DebuggerOption = 1
Global_Verdict = "INCONCLUSIVE"

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result
      
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
      
End Sub

'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
'DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0

result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication

'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON " Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub


Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function

'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function

'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
'------------------------------------------------------------

  If result <> 0  Then
   DL.ResetReceiveCounter
   DL.AddComment "Clear Event Queue"
   DL.SendSequence "Clear Event Queue"
   result = DL.WaitForSequence("Clear Event Success", 1, 6000)
End If   
   DL.Pause 500
  
If result <> 0  Then
   DL.ResetReceiveCounter
   DL.AddComment "Clear Display"
   DL.SendSequence "Clear Display"
   result = DL.WaitForSequence("Clear Display Success", 1, 6000)
End If   
   DL.Pause 500
   
If result <> 0  Then  
   DL.ResetReceiveCounter
   DL.AddComment "Start Custom Display Mode"
   DL.SendSequence "Start Custom Display Mode"
   result = DL.WaitForSequence("Start Custom Display Mode Success", 1, 6000)
End If   
   DL.Pause 500
'------------------------------------------------------------
If result <> 0  Then
  DL.ResetReceiveCounter
  DL.AddComment vbCrLf & vbCrLf & "Display Radio Button (Radio1-1)"
  DL.SendSequence "Display Radio Button (Radio1-1)"
  result = DL.WaitForSequence ("Display Radio Button Success", 1,3000)
  Debugger "ControlID", ControlID
  GID01 = ControlID
End If   
   DL.Pause 500

If result <> 0  Then
  DL.ResetReceiveCounter
  DL.AddComment vbCrLf & vbCrLf & "Display Radio Button (Radio1-2)"
  DL.SendSequence "Display Radio Button (Radio1-2)"
  result = DL.WaitForSequence ("Display Radio Button Success", 1,3000)
  Debugger "ControlID", ControlID
  GID02 = ControlID
End If   
   DL.Pause 500

If result <> 0  Then
  DL.ResetReceiveCounter
  DL.AddComment vbCrLf & vbCrLf & "Display Radio Button (Radio1-3)"
  DL.SendSequence "Display Radio Button (Radio1-3)"
  result = DL.WaitForSequence ("Display Radio Button Success", 1,3000)
  Debugger "ControlID", ControlID
  GID03 = ControlID
End If   
   DL.Pause 500

If result <> 0  Then
  DL.ResetReceiveCounter
  DL.AddComment vbCrLf & vbCrLf & "Display Radio Button (Radio2-1)"
  DL.SendSequence "Display Radio Button (Radio2-1)"
  result = DL.WaitForSequence ("Display Radio Button Success", 1,3000)
  Debugger "ControlID", ControlID
  GID04 = ControlID
End If   
   DL.Pause 500
  
If result <> 0  Then
  DL.ResetReceiveCounter
  DL.AddComment vbCrLf & vbCrLf & "Display Radio Button (Radio2-2)"
  DL.SendSequence "Display Radio Button (Radio2-2)"
  result = DL.WaitForSequence ("Display Radio Button Success", 1,3000)
  Debugger "ControlID", ControlID
  GID05 = ControlID
End If   
   DL.Pause 500
  
If result <> 0  Then  
  DL.ResetReceiveCounter
  DL.AddComment vbCrLf & vbCrLf & "Display Radio Button (Radio2-3)"
  DL.SendSequence "Display Radio Button (Radio2-3)"
  result = DL.WaitForSequence ("Display Radio Button Success", 1,3000)
  Debugger "ControlID", ControlID
  GID06 = ControlID
End If   
   DL.Pause 500
   
'If result <> 0  Then  
   'prompt = "GID01 = " & GID01 &  vbCrLf
   'prompt = prompt & "GID02 = " & GID02 &  vbCrLf
   'prompt = prompt & "GID03 = " & GID03 &  vbCrLf
   'prompt = prompt & "GID04 = " & GID04 &  vbCrLf
   'prompt = prompt & "GID05 = " & GID05 &  vbCrLf
   'prompt = prompt & "GID06 = " & GID06 &  vbCrLf & vbCrLf
   'prompt = prompt & "Are the Graphic Ids above different?" 
   'MyInput1 = MsgBox (prompt, VBYesNo, "Test Step")
   'If MyInput1 = 6 Then
     'result = 1
   'Else
     'result = 0
   'End If     
'End If
 'DL.Pause 500 

If result <> 0  Then  
  DL.ResetReceiveCounter
  DL.AddComment vbCrLf & vbCrLf & "Get Input Event(0s)"
  DL.SendSequence "Get Input Event(0s)"
  result = DL.WaitForSequence ("Get Event Failed(Failed)", 1,3000)
End If
 DL.Pause 500

  
If result <> 0  Then  
  DL.ResetReceiveCounter
  MyInput1 = MsgBox ("Select Radio Button1-1, Then Press OK", vbOKOnly, "Test Step")
  DL.AddComment vbCrLf & vbCrLf & "Get Input Event(0s)"
  DL.SendSequence "Get Input Event(0s)"
  result = DL.WaitForSequence ("Radio1-1 Event Response", 1,3000)
  Debugger "ControlID", ControlID
  GID07 = ControlID
  DL.AddComment GID07
  
  If GID07 = GID01 Then
    result = 1
  Else
    result = 0
  End If
End If 
DL.Pause 500   


If result <> 0  Then  
  DL.ResetReceiveCounter
  MyInput1 = MsgBox ("Select Radio Button1-1, Then Press OK", vbOKOnly, "Test Step")
  DL.AddComment vbCrLf & vbCrLf & "Get Input Event(0s)"
  DL.SendSequence "Get Input Event(0s)"
  result = DL.WaitForSequence ("Radio1-1 Event Response", 1,3000)
  Debugger "ControlID", ControlID
  EID01 = ControlID
  DL.AddComment EID01
  
  If EID01 = GID01 Then
    result = 1
  Else
    result = 0
  End If
End If 
DL.Pause 500   


If result <> 0  Then  
  DL.ResetReceiveCounter
  MyInput1 = MsgBox ("Select Radio Button1-2, Then Press OK", vbOKOnly, "Test Step")
  DL.AddComment vbCrLf & vbCrLf & "Get Input Event(0s)"
  DL.SendSequence "Get Input Event(0s)"
  result = DL.WaitForSequence ("Radio1-2 Event Response", 1,3000)
  Debugger "ControlID", ControlID
  EID02 = ControlID
  DL.AddComment EID02
  
  If EID02 = GID02 Then
    result = 1
  Else
    result = 0
  End If
End If 
DL.Pause 500   


If result <> 0  Then  
  DL.ResetReceiveCounter
  MyInput1 = MsgBox ("Select Radio Button1-3, Then Press OK", vbOKOnly, "Test Step")
  DL.AddComment vbCrLf & vbCrLf & "Get Input Event(0s)"
  DL.SendSequence "Get Input Event(0s)"
  result = DL.WaitForSequence ("Radio1-3 Event Response", 1,3000)
  Debugger "ControlID", ControlID
  EID03 = ControlID
  DL.AddComment EID03
  
  If EID03 = GID03 Then
    result = 1
  Else
    result = 0
  End If
End If 
DL.Pause 500   


If result <> 0  Then  
  DL.ResetReceiveCounter
  MyInput1 = MsgBox ("Select Radio Button2-1, Then Press OK", vbOKOnly, "Test Step")
  DL.AddComment vbCrLf & vbCrLf & "Get Input Event(0s)"
  DL.SendSequence "Get Input Event(0s)"
  result = DL.WaitForSequence ("Radio2-1 Event Response", 1,3000)
  Debugger "ControlID", ControlID
  EID04 = ControlID
  DL.AddComment EID04
  
  If EID04 = GID04 Then
    result = 1
  Else
    result = 0
  End If
End If 
DL.Pause 500   


If result <> 0  Then  
  DL.ResetReceiveCounter
  MyInput1 = MsgBox ("Select Radio Button2-2, Then Press OK", vbOKOnly, "Test Step")
  DL.AddComment vbCrLf & vbCrLf & "Get Input Event(0s)"
  DL.SendSequence "Get Input Event(0s)"
  result = DL.WaitForSequence ("Radio2-2 Event Response", 1,3000)
  Debugger "ControlID", ControlID
  EID05 = ControlID
  DL.AddComment EID05
  
  If EID05 = GID05 Then
    result = 1
  Else
    result = 0
  End If
End If 
DL.Pause 500   


If result <> 0  Then  
  DL.ResetReceiveCounter
  MyInput1 = MsgBox ("Select Radio Button2-3, Then Press OK", vbOKOnly, "Test Step")
  DL.AddComment vbCrLf & vbCrLf & "Get Input Event(0s)"
  DL.SendSequence "Get Input Event(0s)"
  result = DL.WaitForSequence ("Radio2-3 Event Response", 1,3000)
  Debugger "ControlID", ControlID
  EID06 = ControlID
  DL.AddComment EID06
  
  If EID06 = GID06 Then
    result = 1
  Else
    result = 0
  End If
End If 
DL.Pause 500   


'--------------------------------------------------------------
DL.AddComment vbCrLf
PrintMyResult(result)

DL.AddComment "---------- END OF TEST ----------" & vbCrLf
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""

'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.pause 1000

If result = 0 then
  DL.AddComment Chr(13) & "Result = FAILED"
Else
  DL.AddComment Chr(13) & "Result = PASSED"
End If

If Prompting(0) = "ON" Then
  If result = 0 then
    MsgBox "Result = FAILED", VBOKOnly, "Result"
  Else 
    MsgBox "Result = PASSED", VBOKOnly, "Result"
  End If
End If

'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------

If MasterResult = 1 Then
      MasterVerdict = "PASSED"
ElseIf MasterResult = 0 Then
      MasterVerdict = "FAILED"
End If
result = MasterResult
DL.AddComment vbCrLf
DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 

'------------------------------------------------------------
' Get 4 Byte ID (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Sub DL_OnReceive()
resultName = DL.OnReceive_GetName()
DL.AddComment "resultName = " & resultName

Select Case resultName




	Case "Display Radio Button Success"
		resultTemp = DL.OnReceive_GetData("H")	' get the result as string of Hex-values
		'DL.AddComment resultTemp	
		' one possible solution to get single characters
		MyArray = Split(resultTemp , " ", -1, 1)

		' ### Prints each byte in array
		'For i = 0 to UBound(MyArray)
   		'	DL.AddComment "i = " & i & "Array - " & (MyArray(i))
		'Next
		' ### Extracts 4 byte Control ID
		ControlID = MyArray(15) & " " & MyArray(16) & " " & MyArray(17) & " " & MyArray(18)
		' ### Prints 4 byte Control ID
		DL.AddComment "Control ID = " & ControlID
		
	Case "Radio1-1 Event Response"
		resultTemp = DL.OnReceive_GetData("H")	' get the result as string of Hex-values
		'DL.AddComment resultTemp	
		' one possible solution to get single characters
		MyArray = Split(resultTemp , " ", -1, 1)

		' ### Prints each byte in array
		'For i = 0 to UBound(MyArray)
   		'	DL.AddComment "i = " & i & "Array - " & (MyArray(i))
		'Next
		' ### Extracts 4 byte Control ID		
		ControlID = MyArray(19) & " " & MyArray(20) & " " & MyArray(21) & " " & MyArray(22)
		' ### Prints 4 byte Control ID		
		DL.AddComment "Control ID = " & ControlID
		
		
	Case "Radio1-2 Event Response"
		resultTemp = DL.OnReceive_GetData("H")	' get the result as string of Hex-values
		'DL.AddComment resultTemp	
		' one possible solution to get single characters
		MyArray = Split(resultTemp , " ", -1, 1)

		' ### Prints each byte in array
		'For i = 0 to UBound(MyArray)
   		'	DL.AddComment "i = " & i & "Array - " & (MyArray(i))
		'Next
		' ### Extracts 4 byte Control ID		
		ControlID = MyArray(19) & " " & MyArray(20) & " " & MyArray(21) & " " & MyArray(22)
		' ### Prints 4 byte Control ID		
		DL.AddComment "Control ID = " & ControlID
		
	Case "Radio1-3 Event Response"
		resultTemp = DL.OnReceive_GetData("H")	' get the result as string of Hex-values
		'DL.AddComment resultTemp	
		' one possible solution to get single characters
		MyArray = Split(resultTemp , " ", -1, 1)

		' ### Prints each byte in array
		'For i = 0 to UBound(MyArray)
   		'	DL.AddComment "i = " & i & "Array - " & (MyArray(i))
		'Next
		' ### Extracts 4 byte Control ID		
		ControlID = MyArray(19) & " " & MyArray(20) & " " & MyArray(21) & " " & MyArray(22)
		' ### Prints 4 byte Control ID		
		DL.AddComment "Control ID = " & ControlID
		
	Case "Radio2-1 Event Response"
		resultTemp = DL.OnReceive_GetData("H")	' get the result as string of Hex-values
		'DL.AddComment resultTemp	
		' one possible solution to get single characters
		MyArray = Split(resultTemp , " ", -1, 1)

		' ### Prints each byte in array
		'For i = 0 to UBound(MyArray)
   		'	DL.AddComment "i = " & i & "Array - " & (MyArray(i))
		'Next
		' ### Extracts 4 byte Control ID		
		ControlID = MyArray(19) & " " & MyArray(20) & " " & MyArray(21) & " " & MyArray(22)
		' ### Prints 4 byte Control ID		
		DL.AddComment "Control ID = " & ControlID
		
	Case "Radio2-2 Event Response"
		resultTemp = DL.OnReceive_GetData("H")	' get the result as string of Hex-values
		'DL.AddComment resultTemp	
		' one possible solution to get single characters
		MyArray = Split(resultTemp , " ", -1, 1)

		' ### Prints each byte in array
		'For i = 0 to UBound(MyArray)
   		'	DL.AddComment "i = " & i & "Array - " & (MyArray(i))
		'Next
		' ### Extracts 4 byte Control ID		
		ControlID = MyArray(19) & " " & MyArray(20) & " " & MyArray(21) & " " & MyArray(22)
		' ### Prints 4 byte Control ID		
		DL.AddComment "Control ID = " & ControlID
		
	Case "Radio2-3 Event Response"
		resultTemp = DL.OnReceive_GetData("H")	' get the result as string of Hex-values
		'DL.AddComment resultTemp	
		' one possible solution to get single characters
		MyArray = Split(resultTemp , " ", -1, 1)

		' ### Prints each byte in array
		'For i = 0 to UBound(MyArray)
   		'	DL.AddComment "i = " & i & "Array - " & (MyArray(i))
		'Next
		' ### Extracts 4 byte Control ID		
		ControlID = MyArray(19) & " " & MyArray(20) & " " & MyArray(21) & " " & MyArray(22)
		' ### Prints 4 byte Control ID		
		DL.AddComment "Control ID = " & ControlID
		
		
End Select
End Sub

'------------------------------------------------------------
' CRC Function (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------

Sub DL_OnSend()
    ' For all Send Sequences with minimum 3 bytes length (one byte user data,
    ' two bytes CRC, perform the following manipulation:
    ' - Calculate a 16 bit crc value on the characters 1 .. (DL.OnSend_Size() - 2)
    ' - Write the low byte to character no. DL.OnSend_GetSize()-1
    ' - Write the high byte to character no. DL.OnSend_GetSize()
    ' Example:
    ' Send Sequence name: MyCommand
    ' Send Sequence in HEX representation: 02 04 00 00 00 01 00 00
    ' --> Data transmitted by Docklight:   02 04 00 00 00 01 31 F9
    '     (with "31" as the low byte CRC, "F9" as the high byte)

    ' Check if there is at least one byte of user data
    usDataLen = DL.OnSend_GetSize() - 2
    If usDataLen > 0 Then
        crcStr = DL.CalcChecksum("CRC-CCITT", DL.OnSend_GetData("H"), "H", 1, usDataLen) 
        ' Write result to the last two bytes of the sequence
        DL.OnSend_Poke usDataLen + 1, CInt("&h" + Right(crcStr, 2)) ' low byte
        DL.OnSend_Poke usDataLen + 2, CInt("&h" + Left(crcStr, 2)) ' high byte
    End If
End Sub

'========================================
'= Debugger
'========================================
Function Debugger(itemNameString, itemName)
	If DebuggerOption = 0 Then
	ElseIf DebuggerOption = 1 Then
		If itemName = "" Then
			DL.AddComment "Debugger: " & itemNameString
		Else
			DL.AddComment "Debugger: " & itemNameString & " = " & itemName
		End If
	End If
End Function

'========================================
'= Verdict Function
'========================================
Function verdict(result)
	If result = 1 Then
		verdict = "PASS"
		Debugger "TEST VERDICT IS", verdict
		If Global_Verdict = "FAIL" Then
			Global_Verdict = "FAIL"
   			MasterResult = 0
		ElseIf Global_Verdict = "INCONCLUSIVE" Then
			Global_Verdict = "PASS"
  			MasterResult = 1
			'DL.AddComment "Debug - IN HERE 111!!!"
			'DL.Pause 3000
		ElseIf Global_Verdict = "PASS" Then
			Global_Verdict = "PASS"
  			MasterResult = 1
			'DL.AddComment "Debug - IN HERE 222!!!"
			'DL.Pause 3000
		End If
		'DL.AddComment vbCrLf & "Global V = " & Global_Verdict
		Debugger "Global_Verdict", Global_Verdict
	ElseIf result = 0 Then
		verdict = "FAIL"
		Debugger "TEST VERDICT IS", verdict
		Global_Verdict = "FAIL"
 		MasterResult = 0
		'DL.AddComment vbCrLf & "Global V = " & Global_Verdict
		Debugger "Global_Verdict", Global_Verdict
		
	End If
End Function


