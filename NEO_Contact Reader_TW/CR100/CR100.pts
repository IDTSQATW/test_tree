DL_SCRIPTVERSION
1
21412

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "CR100" ' !!!!! EDIT THIS !!!!!
' Objective: JIRA @ CS-1522
' 4 tags are blank in CT transaction, 9F01, 5F20, 5F24, 5F25.
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result

  'Set Reader Type
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerType = result

  'Set Reader Model
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerModel = result

  'Set Reader FW version
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwVersion = result

  'Set Reader FW build
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwBuild = result    

  'Set Reader General Flag
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  GeneralFlag = result     
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
End Sub
'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
'DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0

result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""
'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
if POSBaudRate(1) = 0 then 
   DL.SetChannelSettings(COM_Port(1))
else
   DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
end if

DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication
'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub

Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function
'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function
'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
if readerType = "NEO2" then
   DL.SendSequence "60-06 Contact Set Terminal Data"
   dl.pause 500
   DL.SendSequence "60-03 Contact Set Application Data (VISA)"
   dl.pause 500
   DL.SendSequence "60-0A Contact Set CA Public Key"
   dl.pause 500
   If result <> 0 Then
      dl.resetreceivecounter
      dl.addcomment vbcrlf
      DL.AddComment "--- DFED59 =  00 (Send First Response 0x63)"
      DL.SendSequence "DFED59 =  00 (Send First Response 0x63)"
      result = DL.WaitForSequence("04 00", 1, 10000)
   End If
end if

If result <> 0 Then
   dl.resetreceivecounter
   DL.AddComment "--- Contact ICS 4C (60-16)"
   DL.SendSequence "Contact ICS 4C (60-16)"
   result = DL.WaitForSequence("60 00", 1, 3000)
   dl.pause 500
End If

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Contact ICS (60-15)"
   DL.SendSequence "Contact ICS (60-15)"
   result = DL.WaitForSequence("60-15 resp (04)", 1, 3000)
End If

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Contact Set Terminal Data 4C_Issue CS-1522 (60-06)"
   DL.SendSequence "Contact Set Terminal Data 4C_Issue CS-1522 (60-06)"
   result = DL.WaitForSequence("60 00", 1, 3000)
   dl.pause 500
End If
'------------------------------------------------------------
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Contact Start Transaction (60-10) w/ 9F01, 5F20, 5F24, 5F25"
   DL.SendSequence "Contact Start Transaction (60-10) w/ 9F01, 5F20, 5F24, 5F25"
   result = DL.WaitForSequence("60 63", 1, 5000)
   if result <> 0 then
      msgbox "Insert card (EMV Test Card, T=0) -> Click OK", vbokonly
      dl.pause 800
      r1 = DL.WaitForSequence("9F01", 1, 3000)
      r2 = DL.WaitForSequence("5F25", 1, 3000)
      r3 = DL.WaitForSequence("5F24", 1, 3000)
      r4 = DL.WaitForSequence("5F20", 1, 3000)
      if r1 = 0 or r2 = 0 or r3 = 0 or r4 = 0 then result = 0
   end if
end if

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Contact Authenticate Transaction (60-11) w/ DFEE1A"
   DL.SendSequence "Contact Authenticate Transaction (60-11) w/ DFEE1A"
   result = DL.WaitForSequence("60 63", 1, 5000)
   if result <> 0 then
      dl.pause 800
      r1 = DL.WaitForSequence("9F01", 1, 3000)
      r2 = DL.WaitForSequence("5F25", 1, 3000)
      r3 = DL.WaitForSequence("5F24", 1, 3000)
      r4 = DL.WaitForSequence("5F20", 1, 3000)
      if r1 = 0 or r2 = 0 or r3 = 0 or r4 = 0 then result = 0
   end if
end if

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Contact Apply Host Response (60-12) w/ DFEE1A"
   DL.SendSequence "Contact Apply Host Response (60-12) w/ DFEE1A"
   result = DL.WaitForSequence("60 63", 1, 5000)
   if result <> 0 then
      dl.pause 800
      r1 = DL.WaitForSequence("9F01", 1, 3000)
      r2 = DL.WaitForSequence("5F25", 1, 3000)
      r3 = DL.WaitForSequence("5F24", 1, 3000)
      r4 = DL.WaitForSequence("5F20", 1, 3000)
      if r1 = 0 or r2 = 0 or r3 = 0 or r4 = 0 then result = 0
   end if
end if

if result = 0 then
   DL.SendSequence "05-01"
   dl.pause 2000
end if

DL.SendSequence "Contact ICS 2C (60-16)"
dl.pause 1000
DL.SendSequence "04-09"
dl.pause 4000

DL.AddComment vbCrLf
DL.AddComment "---------- END OF TEST ----------" & vbCrLf
PrintMyResult(result)
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""
'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'DL.pause 1000

'If result = 0 then
'  DL.AddComment Chr(13) & "Result = FAILED"
'Else
'  DL.AddComment Chr(13) & "Result = PASSED"
'End If

'If Prompting(0) = "ON" Then
'  If result = 0 then
'    MsgBox "Result = FAILED", VBOKOnly, "Result"
'  Else 
'    MsgBox "Result = PASSED", VBOKOnly, "Result"
'  End If
'End If
'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------
'If MasterResult = 1 Then
'      MasterVerdict = "PASSED"
'ElseIf MasterResult = 0 Then
'      MasterVerdict = "FAILED"
'End If
'result = MasterResult
'DL.AddComment vbCrLf
'DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 
