DL_SCRIPTVERSION
1
63680

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "ULTR101" ' !!!!! EDIT THIS !!!!!
'Objective: To verify AT cmd can detect Mifare Ultralight C card and then auto switch to Pass-through mode to communicate the card (K4 design)
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result

  'Set Reader Type
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerType = result

  'Set Reader Model
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerModel = result

  'Set Reader FW version
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwVersion = result

  'Set Reader FW build
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwBuild = result

  'Set Reader General Flag
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  genFlag = result
Loop

Sub StepPrompt(PromptString)
	DL.AddComment PromptString
	If Prompting(1) = "ON" Then
		MsgBox PromptString, VBOKOnly, "Test Step"
	Else
	End If
	
End Sub

'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
'DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0
result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication

'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub

Function ReverseResult(ResultParam)
	If ResultParam = 1 Then
		result = 0
	ElseIf ResultParam = 0 Then
		result = 1
	End If
End Function

'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
	DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
	MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function

'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
DL.StartCommunication
Pass = 0
Fail = 0
j = 1
k = 0
result = 1

DL.SendSequence "", "56 69 56 4F 74 65 63 68 32 00 2C 01 00 01 00 0D 38","H"
DL.Pause 1000

DL.SendSequence "Set Configuration Global On (NEO2)"
result = DL.WaitForSequence("04 00", 1, 2000)

atcmd = msgbox ("Does reader support cmd 02-01?", vbyesno)
if atcmd = 6 then
If result <> 0 Then
   msgbox "Place Mifare Ultralight C card on reader and then click OK", vbyesonly
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- cmd 02-01 =================================================================="
   DL.SendSequence "CLT 02-01"
   result = DL.WaitForSequence("02-01 resp", 1, 4000)
   if result <> 0 then result = DL.WaitForSequence("Tag DFEC0F (02)", 1, 4000)
   dl.pause 500
   if result <> 0 then ReadBlock()
   if result <> 0 then WriteBlock()
End If
end if

atcmd = msgbox ("Does reader support cmd 02-40?", vbyesno)
if atcmd = 6 then
If result <> 0 Then
   msgbox "Place Mifare Ultralight card C on reader and then click OK", vbyesonly
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- cmd 02-40 =================================================================="
   DL.SendSequence "CLT 02-40"
   if readerType <> "NEO2" then result = DL.WaitForSequence("02-40 resp", 1, 4000)
   if readerType = "NEO2" then result = DL.WaitForSequence("02-40 resp (NEO3)", 1, 4000)
   if result <> 0 then result = DL.WaitForSequence("Tag DFEC0F (02)", 1, 4000)
   dl.pause 500
   if result <> 0 then ReadBlock()
   if result <> 0 then WriteBlock()
End If
end if

Sub ReadBlock()
dl.addcomment vbcrlf
DL.AddComment "---------- READ ALL BLOCKS ----------"
For i = 0 to 39
    DL.ResetReceiveCounter
    DL.AddComment vbCrLf & "--- Read Block #" & i & " ---"
    If i <= 9 Then
	i = "00" & i
    Else
	i = "0" & i
    End If
    dl.pause 100
    DL.SendSequence "Read Block", i, "D"
    result = DL.WaitForSequence("Read Block OK" , 1, 2000)
    PrintMyResult(result)

    If result = 1 Then
	Pass = Pass + 1
    Else
	Fail = Fail + 1
    End If
Next
DL.AddComment vbCrLf & "PASSED = " & Pass & vbCrLf & "FAILED = " & Fail
End Sub

sub WriteBlock()
If result <> 0 Then
   dl.pause 300
   DL.AddComment vbCrLf
   DL.AddComment "---------- WRITE BLOCKS ----------"
   DL.AddComment vbCrLf
  DL.ResetReceiveCounter
  DL.AddComment "---Write Block #2"
  DL.SendSequence "Write Block #2"
  result = DL.WaitForSequence("PT command (OK)", 1, 10000)
End If
'------------------------------------------------------------
If result <> 0 Then
   dl.pause 300
   DL.AddComment vbCrLf
  DL.ResetReceiveCounter
  DL.AddComment "---Write Block #3"
  DL.SendSequence "Write Block #3"
  result = DL.WaitForSequence("PT command (OK)", 1, 10000)
End If
'------------------------------------------------------------
If result <> 0 Then
   dl.pause 300
   DL.AddComment vbCrLf
  DL.ResetReceiveCounter
  DL.AddComment "---Write Block #5"
  DL.SendSequence "Write Block #5"
  result = DL.WaitForSequence("PT command (OK)", 1, 10000)
End If
'------------------------------------------------------------
If result <> 0 Then
   dl.pause 300
   DL.AddComment vbCrLf
  DL.ResetReceiveCounter
  DL.AddComment "---Write Block #6"
  DL.SendSequence "Write Block #6"
  result = DL.WaitForSequence("PT command (OK)", 1, 10000)
End If
'------------------------------------------------------------
If result <> 0 Then
   dl.pause 300
   DL.AddComment vbCrLf
  DL.ResetReceiveCounter
  DL.AddComment "---Write Block #7"
  DL.SendSequence "Write Block #7"
  result = DL.WaitForSequence("PT command (OK)", 1, 10000)
End If
'------------------------------------------------------------
If result <> 0 Then
   dl.pause 300
   DL.AddComment vbCrLf
  DL.ResetReceiveCounter
  DL.AddComment "---Write Block #9"
  DL.SendSequence "Write Block #9"
  result = DL.WaitForSequence("PT command (OK)", 1, 10000)
End If
'------------------------------------------------------------
If result <> 0 Then
   dl.pause 300
   DL.AddComment vbCrLf
  DL.ResetReceiveCounter
  DL.AddComment "---Write Block #10"
  DL.SendSequence "Write Block #10"
  result = DL.WaitForSequence("PT command (OK)", 1, 10000)
End If
'------------------------------------------------------------
If result <> 0 Then
   dl.pause 300
   DL.AddComment vbCrLf
  DL.ResetReceiveCounter
  DL.AddComment "---Write Block #11"
  DL.SendSequence "Write Block #11"
  result = DL.WaitForSequence("PT command (OK)", 1, 10000)
End If
'------------------------------------------------------------
If result <> 0 Then
   dl.pause 300
   DL.AddComment vbCrLf
  DL.ResetReceiveCounter
  DL.AddComment "---Write Block #13"
  DL.SendSequence "Write Block #13"
  result = DL.WaitForSequence("PT command (OK)", 1, 10000)
End If
'------------------------------------------------------------
If result <> 0 Then
   dl.pause 300
   DL.AddComment vbCrLf
  DL.ResetReceiveCounter
  DL.AddComment "---Write Block #14"
  DL.SendSequence "Write Block #14"
  result = DL.WaitForSequence("PT command (OK)", 1, 10000)
End If
'------------------------------------------------------------
If result <> 0 Then
   dl.pause 300
   DL.AddComment vbCrLf
  DL.ResetReceiveCounter
  DL.AddComment "---Write Block #15"
  DL.SendSequence "Write Block #15"
  result = DL.WaitForSequence("PT command (OK)", 1, 10000)
End If
'------------------------------------------------------------
If result <> 0 Then
   dl.pause 300
   DL.AddComment vbCrLf
  DL.ResetReceiveCounter
  DL.AddComment "---Write Block #17"
  DL.SendSequence "Write Block #17"
  result = DL.WaitForSequence("PT command (OK)", 1, 10000)
End If
'------------------------------------------------------------
If result <> 0 Then
   dl.pause 300
   DL.AddComment vbCrLf
  DL.ResetReceiveCounter
  DL.AddComment "---Write Block #18"
  DL.SendSequence "Write Block #18"
  result = DL.WaitForSequence("PT command (OK)", 1, 10000)
End If
'------------------------------------------------------------
msgbox "Remove the card", vbyesonly
If result <> 0 Then
   dl.pause 300
   DL.AddComment vbCrLf
  DL.ResetReceiveCounter
  DL.AddComment "---PT Stop"
  DL.SendSequence "PT Stop"
  result = DL.WaitForSequence("PT command (OK)", 1, 10000)
End If
end sub
'====================================================================================
If result = 0 Then
  DL.AddComment vbCrLf
  DL.ResetReceiveCounter
  DL.AddComment "---PT Stop"
  DL.SendSequence "PT Stop"
  dl.pause 1000
End If

DL.SendSequence "Set Configuration Global Off (NEO2)"
resultignore = DL.WaitForSequence("04 00", 1, 3000)

DL.AddComment vbCrLf
DL.AddComment "---------- END OF TEST ----------" & vbCrLf
if Fail <> 0 then result = 0
PrintMyResult(result)

Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""

'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'DL.pause 1000

'If 0 Then
'If result = 0 then
'  DL.AddComment Chr(13) & "Result = FAILED"
'Else
'  DL.AddComment Chr(13) & "Result = PASSED"
'End If
'End If

'If Prompting(0) = "ON" Then
'  If result = 0 then
'    MsgBox "Result = FAILED", VBOKOnly, "Result"
'  Else 
'    MsgBox "Result = PASSED", VBOKOnly, "Result"
'  End If
'End If
'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------
'If MasterResult = 1 Then
'	MasterVerdict = "PASSED"
'ElseIf MasterResult = 0 Then
'	MasterVerdict = "FAILED"
'End If
'result = MasterResult
'DL.AddComment vbCrLf
'DL.AddComment "MASTER RESULT = " & MasterVerdict
'------------------------------------------------------------
' WRITE FINAL VERDICT FILE(!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 

Sub DL_OnSend()
    usDataLen = DL.OnSend_GetSize() - 2
    If usDataLen > 0 Then
        crcStr = DL.CalcChecksum("CRC-CCITT", DL.OnSend_GetData("H"), "H", 1, usDataLen) 
        ' Write result to the last two bytes of the sequence
        DL.OnSend_Poke usDataLen + 1, CInt("&h" + Left(crcStr, 2)) ' low byte
        DL.OnSend_Poke usDataLen + 2, CInt("&h" + Right(crcStr, 2)) ' high byte
    End If
End Sub
