DL_SCRIPTVERSION
1
1244

'DL.SendSequence "WHITE foreground, RED3 Background"
'------------------------------------------------------------
' SCRIPT SETUP
'------------------------------------------------------------

DL.StartCommunication
DL.ClearCommWindows 

DL.AddComment "Date and Time: " & Month(Now) & "-" & Day(Now) & "-" & Year(Now) & "_" & Hour(Now) & "h" & Minute(Now) & "m" & Second(Now) & "s"
DL.AddComment "Logfile name: " & "DOCKLIGHT_LOG_" & Month(Now) & "-" & Day(Now) & "-" & Year(Now) & "_" & Hour(Now) & "h" & Minute(Now) & "m" & Second(Now) & "s" & ".txt"
DL.StartLogging "DOCKLIGHT_LOG_" & Month(Now) & "-" & Day(Now) & "-" & Year(Now) & "_" & Hour(Now) & "h" & Minute(Now) & "m" & Second(Now) & "s",False, "H"


'### Global Variables
Dim ControlID
Dim Global_Verdict
Dim ENTER_Key_Pressed

Global_Verdict = "INCONCLUSIVE"
DebuggerOption = 1

Main

'========================================
'= Main
'========================================
Sub Main()
'### Setup Initializations
	DL.ClearCommWindows

'DL.AddComment "The Global is " & Global_Verdict
'DL.Pause 5000
'Global_Verdict = "INCONCLUSIVE"

'### Tests to run
	'ResetToInitialState
	'DefaultSigCap
	'CustSigCap
	'ChkBox '-FB4
	'UIProperty
	DispText
	'ClearDisplay
	'ForeBackGRND  '-FB4
	'DispAmount
	'KeypadCal
	'KeysTest("DUKPT")
	'KeysTest("Master")
	'DispButton 'FAILS STILL
	'ReadString
	'InputField
	'LineItems '-FB4
	'CheckFreeSpace
	'ListDirectoryRecursive
	'FileManagement
	'ImageSupport 'Bob says "0A" command returned for VP8100 OK
	'FuncAndNumKeys
	'CustomActTrans
'### Global Verdict
	DL.AddComment "FINAL::: Global Verdict is - " & Global_Verdict
End Sub

'========================================
'= Debugger
'========================================
Function Debugger(itemNameString, itemName)
	If DebuggerOption = 0 Then
	ElseIf DebuggerOption = 1 Then
		If itemName = "" Then
			DL.AddComment "Debugger: " & itemNameString
		Else
			DL.AddComment "Debugger: " & itemNameString & " = " & itemName
		End If
	End If
End Function

'========================================
'= Reset to Initial State
'========================================
Function ResetToInitialState()
	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "Reset Initial State (83-01)"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)
	DL.AddComment "********** Done with 'ResetToInitialState' **********"
End Function

'========================================
'= Check Free Space
'========================================
Function CheckFreeSpace()
	DL.ResetReceiveCounter "FREE SPACE OK"
	DL.SendSequence "Check Free Space on Drive (83-23)"
	result = DL.WaitForSequence ("FREE SPACE OK", 1,3000)
	verdict(result)
	DL.AddComment "********** Done with 'CheckFreeSpace' **********"
End Function

'========================================
'= List Directory Recursive
'========================================
Function ListDirectoryRecursive()
	DL.ResetReceiveCounter "List Directory OK"
	DL.SendSequence "List Directory (83-22) - Recursive"
	result = DL.WaitForSequence ("List Directory OK", 1,3000)
	verdict(result)
	DL.AddComment "********** Done with 'ListDirectoryRecursive' **********"
End Function

'========================================
'= Function Keys and Number Keys
'========================================
Function FuncAndNumKeys()
	'###Place holder - Need to update add these tests.
	DL.AddComment "********** Done with 'FuncAndNumKeys' **********"
End Function

'========================================
'= Negative Image Support Tests
'========================================
Function ImageSupport()
	'### Display Images
	MsgBox "Please load files 'greece.bmp', 'isreal.bmp' and 'bfly.bmp' to ROOT directory first. Then press OK.", VBOKOnly, "Test Step"
	result = MsgBox ("Have you loaded files 'greece.bmp', 'isreal.bmp' and 'bfly.bmp' to ROOT directory yet?", VBYesNo, "Test Step")
	MsgBoxResult result,6
	If result = 6 Then
		CmdRejectedTest "Display greece.bmp", ""
		CmdRejectedTest "Display isreal.bmp", ""
		CmdRejectedTest "Display bfly.bmp", ""
	ElseIf result = 7 Then
		MsgBox "Sorry you can not run this test until files 'greece.bmp', 'isreal.bmp' and 'bfly.bmp' are loaded to ROOT directory.", VBOKOnly, "Test Step"

	End If

	'### Slideshow
	CmdRejectedTest "Slideshow 5 loops", ""
	CmdRejectedTest "Terminate Slideshow", ""

	DL.AddComment "********** Done with 'ImageSupport' **********"
End Function

'========================================
'= Negative Line Item Tests
'========================================
Function LineItems()
	'### Create List
	CmdRejectedTest "Line Item (0,0)", ""

	'### Add Item 1 to List
	CmdRejectedTest "Item 1", ControlID
	'### Add Item 2 to List
	CmdRejectedTest "Item 2", ControlID
	'### Add Item 3 to List
	CmdRejectedTest "Item 3", ControlID

	'### Display List Info
	CmdRejectedTest "Display List Info", ControlID

	'### Delete List
	CmdRejectedTest "Delete List", ControlID
	
	'### Get Selected Item
	CmdRejectedTest "Get Selected Item", ControlID
	
	DL.AddComment "********** Done with 'LineItems' **********"
End Function

'========================================
'= File Mangement
'========================================
Function FileManagement()
	PauseTime = 3000
	DL.Pause PauseTime

	'### testfile.x File Download - Part 1 of 2
	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "File Download - part 1 - testfile.x:20bytes"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)
	DL.Pause PauseTime
	DL.AddComment vbCrLf & "********** testfile.x File Download - Part 1 of 2"

	'### testfile.x File Download - Part 2 of 2
	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "File Download - part 2 - testfile.x:20bytes"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)
	DL.Pause PauseTime
	DL.AddComment vbCrLf & "********** testfile.x File Download - Part 2 of 2"
	
	'### Verify testfile.x uploaded successfully
	DL.ResetReceiveCounter "testfile.x uploaded OK"
	DL.SendSequence "List Directory (83-22) - Recursive"
	result = DL.WaitForSequence ("testfile.x uploaded OK", 1,3000)
	verdict(result)
	DL.Pause PauseTime
	DL.AddComment vbCrLf & "********** Verify testfile.x uploaded successfully"

	'### Create 'apple' directory
	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "Create Directory 'apple' (83-25)"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)
	DL.Pause PauseTime
	DL.AddComment vbCrLf & "********** Create 'apple' directory"

	'### Verify .\apple directory created successfully
	DL.ResetReceiveCounter ".\apple directory created OK"
	DL.SendSequence "List Directory (83-22) - Recursive"
	result = DL.WaitForSequence (".\apple directory created OK", 1,3000)
	verdict(result)
	DL.Pause PauseTime
	DL.AddComment vbCrLf & "********** Verify .\apple directory created successfully"

	'### apple/applefile.x File Download - Part 1 of 3
	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "File Download - part 1 - apple/applefile.x:30bytes"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)
	DL.Pause PauseTime
	DL.AddComment vbCrLf & "********** apple/applefile.x File Download - Part 1 of 3"

	'### apple/applefile.x File Download - Part 2 of 3
	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "File Download - part 2 - apple/applefile.x:30bytes"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)
	DL.Pause PauseTime
	DL.AddComment vbCrLf & "********** apple/applefile.x File Download - Part 2 of 3"

	'### apple/applefile.x File Download - Part 3 of 3
	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "File Download - part 3 - apple/applefile.x:30bytes"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)
	DL.Pause PauseTime
	DL.AddComment vbCrLf & "********** apple/applefile.x File Download - Part 3 of 3"

	'### Verify applefile.x uploaded successfully
	DL.ResetReceiveCounter "applefile.x uploaded OK"
	DL.SendSequence "List Directory (83-22) - Recursive"
	result = DL.WaitForSequence ("applefile.x uploaded OK", 1,3000)
	verdict(result)
	DL.Pause PauseTime
	DL.AddComment vbCrLf & "********** Verify applefile.x uploaded successfully"

	'### Delete testfile.x
	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "Delete File - testfile.x in ROOT"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)
	DL.Pause PauseTime
	DL.AddComment vbCrLf & "********** Delete testfile.x"
	
	'### Delete applefilex in ROOT/apple
	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "Delete File - applefile.x in ROOT/apple"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)
	DL.Pause PauseTime
	DL.AddComment vbCrLf & "********** Delete applefilex in ROOT/apple"
	
	'### Delete apple directory
	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "Delete Directory - apple"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)
	DL.Pause PauseTime
	DL.AddComment vbCrLf & "********** Delete apple directory"
	
	ListDirectoryRecursive
	DL.Pause PauseTime
	
	DL.AddComment "********** Done with 'FileManagement' **********"
End Function

'========================================
'= Input Field
'========================================
Function InputField()
	DL.SendSequence "Cancel Command"
	DL.SendSequence "Clear Display"
	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "Disable Custom Display Mode"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)
	
	DL.ResetReceiveCounter "Display Control OK"
	DL.SendSequence "Display Text: Please enter tip"
	result = DL.WaitForSequence ("Display Control OK", 1,3000)
	verdict(result)

	DL.ResetReceiveCounter "Display Control OK"
	DL.SendSequence "Input Field Formatting 1"
	result = DL.WaitForSequence ("Display Control OK", 1,3000)
	verdict(result)
	MsgBox "Press OK, then enter 123.45 as the tip.", VBOKOnly, "Test Step"
	
	ENTER_Key_Pressed = 0
	DL.SendSequence "UI Event Queue Clear"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)
	While ENTER_Key_Pressed = 0
		DL.ResetReceiveCounter "KEY WAS PRESSED"
		DL.SendSequence "Read Event Request"
		DL.WaitForSequence "KEY WAS PRESSED"
		'result = DL.WaitForSequence ("Display Control OK", 1,15000)
	Wend
	DL.SendSequence "Cancel Command"
	DL.Pause 1000
	'verdict(result)
	DL.SendSequence "Get Input Field Value (83-1D)", ControlID, "H"
	
	result = DL.WaitForSequence ("12345 was ENTERED", 1,3000)
	verdict(result)
	result = MsgBox("Did you enter '$123.45'?", VBYesNO, "Test Step")
	MsgBoxResult result,6

	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "Clear Input Field (83-1E)", ControlID, "H"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)
	result = MsgBox("Did the Input Field clear?", VBYesNO, "Test Step")
	MsgBoxResult result,6

	DL.AddComment "********** Done with 'InputField' **********"
End Function
'========================================
'= Keypad Calibration
'========================================
Function KeypadCal()
	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "Keypad Calibration - 83-C3"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,5000)
	verdict(result)
	DL.AddComment "********** Done with 'KeypadCal' **********"
End Function

'========================================
'= Custom Act Trans
'========================================
Function CustomActTrans()
	DL.ResetReceiveCounter "Card TAPPED OK"
	DL.SendSequence "New Custom Act Trans COMMAND _ VP8100 TEST1"
	result = DL.WaitForSequence ("Card TAPPED OK", 1,5000)
	verdict(result)

	DL.ResetReceiveCounter "Card TAPPED OK"
	DL.SendSequence "New Custom Act Trans COMMAND _ VP8100 TEST2"
	result = DL.WaitForSequence ("Card TAPPED OK", 1,5000)
	verdict(result)

	DL.ResetReceiveCounter "Card TAPPED OK"
	DL.SendSequence "New Custom Act Trans COMMAND _ VP8100 TEST3"
	result = DL.WaitForSequence ("Card TAPPED OK", 1,5000)
	verdict(result)

	DL.ResetReceiveCounter "Card TAPPED OK"
	DL.SendSequence "New Custom Act Trans COMMAND _ VP8100 TEST4"
	result = DL.WaitForSequence ("Card TAPPED OK", 1,5000)
	verdict(result)

	DL.ResetReceiveCounter "Card TAPPED OK"
	DL.SendSequence "New Custom Act Trans COMMAND _ VP8100 TEST5"
	result = DL.WaitForSequence ("Card TAPPED OK", 1,5000)
	verdict(result)
	DL.AddComment "********** Done with 'CustomActTrans' **********"
End Function

'========================================
'= Negative Read String
'========================================
Function ReadString()
	DL.ResetReceiveCounter "Read String - Unknown Command OK"
	DL.SendSequence "Read String (83-07)"
	result = DL.WaitForSequence ("Read String - Unknown Command OK", 1,3000)
	verdict(result)
	DL.AddComment "********** Done with 'ReadString' **********"
End Function


'========================================
'= Negative Default Sig Cap Tests
'========================================
Function DefaultSigCap()
	CmdRejectedTest "Signature Request - Bitmap (01)", ""
	CmdRejectedTest "Signature Request - PNG (02)", ""
	CmdRejectedTest "Signature Request - RAW (03)", ""
	DL.AddComment "********** Done with 'DefaultSigCap' **********"
End Function

'========================================
'= Negative Display Button
'========================================
Function DispButton()
DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "Enable Custom Display Mode"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)
	DL.SendSequence "Clear Display"
	CmdRejectedTest "VP8100 Negative Test - No Button", ""

	DL.AddComment "********** Done with 'DispButton' **********"
End Function

'========================================
'= Negative Custom Sig Cap Tests
'========================================
Function CustSigCap
	CmdRejectedTest "Start Sig Cap (83-19) BMP", ""
	CmdRejectedTest "Start Sig Cap (83-19) PNG", ""
	CmdRejectedTest "Start Sig Cap (83-19) RAW", ""
	CmdRejectedTest "Clear Signature Capture (83-1B)", "11 22 33 44"
	CmdRejectedTest "Get Signature Capture Data (83-1A)", "55 66 77 88"

	DL.AddComment "********** Done with 'CustSigCap' **********"
End Function

'========================================
'= Negative Checkbox Tests
'========================================
Function ChkBox()
	CmdRejectedTest "Checkbox 1 - Checked",""
	CmdRejectedTest "Checkbox 1 - Unchecked",""
	
	DL.AddComment "********** Done with 'ChkBox' **********"
End Function

'========================================
'= Negative Foreground and Background Tests
'========================================
Function ForeBackGRND()
	CmdRejectedTest "WHITE foreground, RED3 Background",""
	CmdRejectedTest "BLACK foreground, WHITE Background",""
	CmdRejectedTest "BLACK foreground, Macys' Background",""
	
	DL.AddComment "********** Done with 'ForeBackGRND' **********"
End Function

'========================================
'= Keys Test
'========================================
Function KeysTest(PINSessionType)
	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "Erase keys"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)
	
	DL.ResetReceiveCounter "Set KLK OK"
	DL.SendSequence "Set Unencrypted KLK, Component 0"
	result = DL.WaitForSequence ("Set KLK OK", 1,3000)
	verdict(result)
	
	DL.ResetReceiveCounter "Set KLK OK"
	DL.SendSequence "Set Unencrypted KLK, Component 1"
	result = DL.WaitForSequence ("Set KLK OK", 1,3000)
	verdict(result)

	DL.ResetReceiveCounter "Set KLK OK"
	DL.SendSequence "Replace encrypted KLK"
	result = DL.WaitForSequence ("Set KLK OK", 1,3000)
	verdict(result)

	DL.ResetReceiveCounter "Load DUKPT OK"
	DL.SendSequence "Load Initial DUKPT key"
	result = DL.WaitForSequence ("Load DUKPT OK", 1,3000)
	verdict(result)

	DL.ResetReceiveCounter "Set KLK OK"
	DL.SendSequence "Load master key 5"
	result = DL.WaitForSequence ("Set KLK OK", 1,3000)
	verdict(result)
	
	DL.SendSequence "Disable Custom Display Mode"
	
	MsgBox "Please get ready to ENTER your PIN.", VBOKOnly, "Test Step"
	If PINSessionType = "DUKPT" Then
	DL.ResetReceiveCounter "DUKPT PIN ENTERED OK"
	DL.SendSequence "DUKPT PIN Entry"
	result = DL.WaitForSequence ("DUKPT PIN ENTERED OK", 1,30000)
		If result = 0 Then
			DL.SendSequence "Cancel Command"
			DL.Pause 3000
			'DL.AddComment "here we go!!!"
		End If
	ElseIf PINSessionType = "Master" Then
	DL.ResetReceiveCounter "MASTER SESSION PIN ENTERED OK"
	DL.SendSequence "Master Session PIN Entry"
	result = DL.WaitForSequence ("MASTER SESSION PIN ENTERED OK", 1,30000)
		If result = 0 Then
			DL.SendSequence "Cancel Command"
			DL.Pause 3000
			'DL.AddComment "here we go!!!"
		End If
	End If
		
	verdict(result)
	
	DL.AddComment "********** Done with 'KeysTest' **********"	
	
End Function



'========================================
'= Display Amount Tests
'========================================
Function DispAmount()

Dim ControlID2

	'### Line 1 display
	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "Enable Custom Display Mode"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)
	DL.SendSequence "Clear Display"
	DL.SendSequence "VP8100: Display Amount $55.66 - Line 1"
	result = MsgBox("Does the LCD display Line 1 - '$55.66'?", VBYesNO, "Test Step")
	MsgBoxResult result,6

	' ### Change Amount Line 1 - Part 1
	Debugger "ControlID", ControlID
	ControlID2 = ControlID
	DL.SendSequence "VP8100: Change Amount - Line 1 - Part 1", ControlID, "H"
	result = MsgBox("Has amount on LCD Line 1 been changed to '$11.22' ?", VBYesNO, "Test Step")
	MsgBoxResult result,6

	' ### Change Amount Line 1 - Part 2
	Debugger "ControlID", ControlID
	DL.SendSequence "VP8100: Change Amount - Line 1 - Part 2", ControlID, "H"
	result = MsgBox("Has amount on LCD Line 1 been changed to '$5,555.55' ?", VBYesNO, "Test Step")
	MsgBoxResult result,6

	'### Line 2 display
	'DL.SendSequence "Clear Display"
	DL.SendSequence "VP8100: Display Amount $77.88 - Line 2"
	result = MsgBox("Does the LCD display Line 2 - '$77.88'?", VBYesNO, "Test Step")
	MsgBoxResult result,6

	' ### Change Amount Line 2 - Part 1
	Debugger "ControlID", ControlID
	DL.SendSequence "VP8100: Change Amount - Line 2 - Part 1", ControlID, "H"
	result = MsgBox("Has amount on LCD Line 2 been changed to '$99.00' ?", VBYesNO, "Test Step")
	MsgBoxResult result,6

' ### Change Amount Line 2 - Part 2
	Debugger "ControlID", ControlID
	DL.SendSequence "VP8100: Change Amount - Line 2 - Part 2", ControlID, "H"
	result = MsgBox("Has amount on LCD Line 2 been changed to '$8,888,888.88' ?", VBYesNO, "Test Step")
	MsgBoxResult result,6

	' ### Change Amount Line 1 - Part 1.1
	Debugger "ControlID2", ControlID2
	DL.SendSequence "VP8100: Change Amount - Line 1 - Part 1", ControlID2, "H"
	result = MsgBox("Has amount on LCD Line 1 been changed to '$11.22' ?", VBYesNO, "Test Step")
	MsgBoxResult result,6

	' ### Change Amount Line 1 - Part 1.2
	Debugger "ControlID2", ControlID2
	DL.SendSequence "Change amount to $()-./8", ControlID2, "H"
	result = MsgBox("Has amount on LCD Line 1 been changed to '$()-./8' ?", VBYesNO, "Test Step")
	MsgBoxResult result,6

	DL.AddComment "********** Done with 'DispAmount' **********"

End Function

'========================================
'= Compute MsgBoxResult
'========================================
Function MsgBoxResult(result,expectedResult)
	If result = 6 Then
		If expectedResult = 6 Then
			Debugger "expectedResult", expectedResult	
			Debugger "result", result
			verdict(1)
		ElseIf expectedResult = 7 Then
			Debugger "expectedResult", expectedResult	
			Debugger "result", result
			verdict(0)
		End If
	ElseIf result = 7 Then
		If expectedResult = 7 Then
			Debugger "expectedResult", expectedResult	
			Debugger "result", result	
			verdict(1)
		ElseIf expectedResult = 6 Then
			Debugger "expectedResult", expectedResult	
			Debugger "result", result	
			verdict(0)
		End If
	End If
Debugger "Out of MsgBoxResult Function.",""
End Function


'========================================
'= Clear Display
'========================================
Function ClearDisplay()
	'### Clear Display when Custom Display Mode ENABLED
	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "Enable Custom Display Mode"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)

	DL.ResetReceiveCounter "Display Control OK"
	DL.SendSequence "Display Text: Lemons and Limes"
	result = DL.WaitForSequence ("Display Control OK", 1,3000)
	verdict(result)
	result = MsgBox("Is 'Lemons and Limes' displayed on LCD?", VBYesNO, "Test Step")
	MsgBoxResult result,6
	
	MsgBox "Get ready to clear display.", VBOKOnly, "Test Step"
	DL.SendSequence "Clear Display"
	result = MsgBox("Is LCD cleared?", VBYesNO, "Test Step")
	MsgBoxResult result,6
	
	'### Clear Display when Custom Display Mode DISABLED
	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "Disable Custom Display Mode"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)

	DL.ResetReceiveCounter "Display Text REJECTED"
	DL.SendSequence "Display Text: Apples and Oranges"
	result = DL.WaitForSequence ("Display Text REJECTED", 1,3000)
	verdict(result)
	result = MsgBox("Is 'Apples and Oranges' displayed on LCD?", VBYesNO, "Test Step")
	MsgBoxResult result,7
	
	MsgBox "Get ready to clear display.", VBOKOnly, "Test Step"
	DL.SendSequence "Clear Display"
	result = MsgBox("Is LCD cleared?", VBYesNO, "Test Step")
	MsgBoxResult result,6
End Function

'========================================
'= Display Text Tests
'========================================
Function DispText()

' ### Enable Custom Display Mode Tests
	DL.AddComment vbCrLf & "===== Enable Custom Display Mode ====="
	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "Enable Custom Display Mode"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)
	DL.SendSequence "Display Text: Hello EARTH!"
	result = DL.WaitForSequence ("Display Control OK", 1,3000)
	verdict(result)
	result = MsgBox("Is 'Hello EARTH!' displayed on LCD?", VBYesNO, "Test Step")
	MsgBoxResult result,6
	DL.AddComment vbCrLf & "========================="

' ### Change Text
	Debugger "ControlID", ControlID
	DL.SendSequence "Change text to 'Hello World!!!'", ControlID, "H"
	result = MsgBox("Has text on LCD been changed to 'Hello World!!!' ?", VBYesNO, "Test Step")
	MsgBoxResult result,6

' ### Disable Custom Display Mode Tests
	DL.AddComment vbCrLf & "===== Disable Custom Display Mode ====="
	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "Disable Custom Display Mode"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)
	DL.SendSequence "Display Text: Hello EARTH!"
	result = DL.WaitForSequence ("Display Text REJECTED", 1,3000)
	verdict(result)
	result = MsgBox("Is 'Hello EARTH!' displayed on LCD?", VBYesNO, "Test Step")
	MsgBoxResult result,7
	
	DL.ResetReceiveCounter "Display Control OK"
	DL.SendSequence "Display Text: Singleshot Patch Mode"
	result = DL.WaitForSequence ("Display Control OK", 1,3000)
	verdict(result)
	result = MsgBox("Is 'Singleshot Patch Mode' displayed on LCD?", VBYesNO, "Test Step")
	MsgBoxResult result,6

	DL.ResetReceiveCounter "Display Control OK"
	DL.SendSequence "Display Text: Please use other VISA Card"
	result = DL.WaitForSequence ("Display Control OK", 1,3000)
	verdict(result)
	result = MsgBox("Is 'Please use other VISA Card' displayed on LCD?", VBYesNO, "Test Step")
	MsgBoxResult result,6

	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "Enable Custom Display Mode"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)

	DL.ResetReceiveCounter "Display Control OK"
	DL.SendSequence "Display Text: Offline available fund"
	result = DL.WaitForSequence ("Display Control OK", 1,3000)
	verdict(result)
	result = MsgBox("Is 'Offline available fund' displayed on LCD?", VBYesNO, "Test Step")
	MsgBoxResult result,6

	DL.ResetReceiveCounter "Display Control OK"
	DL.SendSequence "Display Text: Call your bank"
	result = DL.WaitForSequence ("Display Control OK", 1,3000)
	verdict(result)
	result = MsgBox("Is 'Call your bank' displayed on LCD?", VBYesNO, "Test Step")
	MsgBoxResult result,6

	DL.ResetReceiveCounter "Display Control OK"
	DL.SendSequence "Display Text: Apples and Oranges"
	result = DL.WaitForSequence ("Display Control OK", 1,3000)
	verdict(result)
	result = MsgBox("Is 'Apples and Oranges' displayed on LCD?", VBYesNO, "Test Step")
	MsgBoxResult result,6

	DL.AddComment vbCrLf & "========================="

	'### Line 1 display
	DL.ResetReceiveCounter "Display CUSTOM MODE OK"
	DL.SendSequence "Enable Custom Display Mode"
	result = DL.WaitForSequence ("Display CUSTOM MODE OK", 1,3000)
	verdict(result)
	DL.SendSequence "Clear Display"
	DL.SendSequence "Display Text: Line 1 MAX"
	result = MsgBox("Does the LCD display Line 1 - '1234567890123456'?", VBYesNO, "Test Step")
	MsgBoxResult result,6

	'### Line 2 display
	DL.SendSequence "Clear Display"
	DL.SendSequence "Display Text: Line 2 MAX"
	result = MsgBox("Does the LCD display Line 2 - 'ABCDEFGhijklmnop'?", VBYesNO, "Test Step")
	MsgBoxResult result,6

	'### Wordwrap 1 - Will display with space breakpoint
	DL.SendSequence "Clear Display"
	DL.SendSequence "Wordwrap 1"
	result = MsgBox("Does the LCD display Line 1 -'ABCDEFGhijklmnop', Line 2 -  '123456'?", VBYesNO, "Test Step")
	MsgBoxResult result,6

	'### Wordwrap 2 - Will NOT display without space breakpoint
DL.SendSequence "Clear Display"
	DL.SendSequence "Wordwrap 2"
	result = MsgBox("Does the LCD display 'ABCDEFGhijklmnop123456'?", VBYesNO, "Test Step")
	MsgBoxResult result,7

	'### Wordwrap 3 - Will display with space breakpoint - All lines filled
	DL.SendSequence "Clear Display"
	DL.SendSequence "Wordwrap 3"
	result = MsgBox("Does the LCD display Line 1 - 'ABCDEFGhijklmnop', Line 2 - '1234567890123456'?", VBYesNO, "Test Step")
	MsgBoxResult result,6

	'### Wordwrap 4 - With break point and 1 char overflow
	DL.SendSequence "Clear Display"
	DL.SendSequence "Wordwrap 4"
	result = MsgBox("Does the LCD display 'ABCDEFGhijklmnop', '12345678901234567'?", VBYesNO, "Test Step")
	MsgBoxResult result,7

	DL.AddComment "********** Done with 'DispText' **********"
End Function

'========================================
'= Negative Set UI Property Tests
'========================================
Function UIProperty()
	CmdRejectedTest "Set UI Property",""
	
	DL.AddComment "********** Done with 'UIProperty' **********"
End Function

'========================================
'= Negative Command Rejected Test Function
'========================================
Function CmdRejectedTest(Command_Name, HexParams)
	DL.AddComment vbCrLf & "===== " & Command_Name & " ====="
	DL.SendSequence Command_Name, HexParams, "H"
	result = DL.WaitForSequence ("REJECTED - Sub Command not Allowed", 1, 3000)
	Debugger "Command_Name", Command_Name 
	Debugger "result verdict", verdict(result) 
	DL.ResetReceiveCounter "REJECTED - Sub Command not Allowed"
	DL.AddComment vbCrLf & "========================="
End Function

'========================================
'= Verdict Function
'========================================
Function verdict(result)
	If result = 1 Then
		verdict = "PASS"
		Debugger "TEST VERDICT IS", verdict
		If Global_Verdict = "FAIL" Then
			Global_Verdict = "FAIL"
		ElseIf Global_Verdict = "INCONCLUSIVE" Then
			Global_Verdict = "PASS"
			'DL.AddComment "Debug - IN HERE 111!!!"
			'DL.Pause 3000
		ElseIf Global_Verdict = "PASS" Then
			Global_Verdict = "PASS"
			'DL.AddComment "Debug - IN HERE 222!!!"
			'DL.Pause 3000
		End If
		'DL.AddComment vbCrLf & "Global V = " & Global_Verdict
		Debugger "Global_Verdict", Global_Verdict
	ElseIf result = 0 Then
		verdict = "FAIL"
		Debugger "TEST VERDICT IS", verdict
		Global_Verdict = "FAIL"
		'DL.AddComment vbCrLf & "Global V = " & Global_Verdict
		Debugger "Global_Verdict", Global_Verdict
	End If
End Function


'========================================
'= XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX =
'========================================
Sub Main2()
'- Test 1
Command_Name = "Signature Request - Bitmap (01)"
DL.AddComment vbCrLf & "===== " & Command_Name & " ====="
DL.SendSequence Command_Name
result = DL.WaitForSequence ("REJECTED - Sub Command not Allowed", 1, 3000)
DL.AddComment Command_Name & " - Result = " & verdict(result) 
DL.ResetReceiveCounter "REJECTED - Sub Command not Allowed"
DL.AddComment vbCrLf & "========================="

'- Test 2
Command_Name = "Signature Request - PNG (02)"
DL.AddComment vbCrLf & "===== " & Command_Name & " ====="
DL.SendSequence Command_Name
result = DL.WaitForSequence ("REJECTED - Sub Command not Allowed", 1, 3000)
DL.AddComment Command_Name & " - Result = " & verdict(result) 
DL.ResetReceiveCounter "REJECTED - Sub Command not Allowed"
DL.AddComment vbCrLf & "=================================================="

'- Test 3
Command_Name = "Signature Request - RAW (03)"
DL.AddComment vbCrLf & "===== " & Command_Name & " ====="
DL.SendSequence Command_Name
result = DL.WaitForSequence ("REJECTED - Sub Command not Allowed", 1, 3000)
DL.AddComment Command_Name & " - Result = " & verdict(result) 
DL.ResetReceiveCounter "REJECTED - Sub Command not Allowed"
DL.AddComment vbCrLf & "========================="
End Sub



Sub Main3()
DL.SendSequence "Set UI Property", "11 22 33 44", "H"
result = DL.GetReceiveCounter ("REJECTED - Sub Command not Allowed")
DL.AddComment "result1 = " & result
DL.WaitForSequence "REJECTED - Sub Command not Allowed"
result = DL.GetReceiveCounter ("REJECTED - Sub Command not Allowed")
DL.AddComment "result2 = " & result
DL.ResetReceiveCounter "REJECTED - Sub Command not Allowed"
result = DL.GetReceiveCounter ("REJECTED - Sub Command not Allowed")
DL.AddComment "result3 = " & result
End Sub
' ModbusCrcScript.pts
' Automatically calculating a two-byte CRC value for Send Sequences.
' Date: 2006-09-15
' Author: Heggelbacher
' This example makes use of the DL.CalcChecksum() function available
' in Docklight Scripting V1.7. It has been cross-checked against the
' CRC reference algorithm listed in the MODBUS specification
' "MODBUS over serial line specification and implementation guide V1.0"
' (see www.modbus.org) 

DL.StartCommunication
' Endless loop until stopped by user
Do
    DL.Pause 1 ' (the pause reduces CPU load while idle)
Loop

Sub DL_OnSend()
    ' For all Send Sequences with minimum 3 bytes length (one byte user data,
    ' two bytes CRC, perform the following manipulation:
    ' - Calculate a 16 bit crc value on the characters 1 .. (DL.OnSend_Size() - 2)
    ' - Write the low byte to character no. DL.OnSend_GetSize()-1
    ' - Write the high byte to character no. DL.OnSend_GetSize()
    ' Example:
    ' Send Sequence name: MyCommand
    ' Send Sequence in HEX representation: 02 04 00 00 00 01 00 00
    ' --> Data transmitted by Docklight:   02 04 00 00 00 01 31 F9
    '     (with "31" as the low byte CRC, "F9" as the high byte)

    ' Check if there is at least one byte of user data
    usDataLen = DL.OnSend_GetSize() - 2
    If usDataLen > 0 Then
        crcStr = DL.CalcChecksum("CRC-CCITT", DL.OnSend_GetData("H"), "H", 1, usDataLen) 
        ' Write result to the last two bytes of the sequence
        DL.OnSend_Poke usDataLen + 1, CInt("&h" + Right(crcStr, 2)) ' low byte
        DL.OnSend_Poke usDataLen + 2, CInt("&h" + Left(crcStr, 2)) ' high byte
    End If
End Sub

Sub DL_OnReceive()
resultName = DL.OnReceive_GetName()
DL.AddComment "resultName = " & resultName

Select Case resultName
	Case "Display Control OK"
		result = DL.OnReceive_GetData("H")	' get the result as string of Hex-values
		DL.AddComment result	
		' one possible solution to get single characters
		MyArray = Split(result , " ", -1, 1)

		' ### Prints each byte in array
		'For i = 0 to UBound(MyArray)
   		'	DL.AddComment "i = " & i & "Array - " & (MyArray(i))
		'Next
		' ### Extracts 4 byte Control ID
		ControlID = MyArray(14) & " " & MyArray(15) & " " & MyArray(16) & " " & MyArray(17)
		' ### Prints 4 byte Control ID
		DL.AddComment "Control ID = " & ControlID
	Case "ENTER Key PRESSED"
		ENTER_Key_Pressed = 1
End Select
End Sub
