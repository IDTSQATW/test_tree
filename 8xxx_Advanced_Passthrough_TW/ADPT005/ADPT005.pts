DL_SCRIPTVERSION
1
52488

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
' Objective: To verify Mifare DESFire EV1 2K card -- write/ read data.
'------------------------------------------------------------
Dim ProjectName
ProjectName = "ADPT005" ' !!!!! EDIT THIS !!!!!
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result

  'Set Reader Type
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerType = result

  'Set Reader Model
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerModel = result

  'Set Reader FW version
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwVersion = result

  'Set Reader FW build
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwBuild = result

  'Set Reader General Flag
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  genFlag = result
Loop

Sub StepPrompt(PromptString)
    DL.AddComment PromptString
    If Prompting(1) = "ON" Then
       MsgBox PromptString, VBOKOnly, "Test Step"
    Else
    End If  
End Sub

'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0
result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication

'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
    If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
       MasterResult = 1
       DL.AddComment "Result = PASSED"
    Else
       MasterResult = 0
       DL.AddComment "Result = FAILED"
    End If
End Sub

Function ReverseResult(ResultParam)
         If ResultParam = 1 Then
            result = 0
         ElseIf ResultParam = 0 Then
                result = 1
         End If
End Function

'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
         DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
         MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function

'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
If result <> 0 Then
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- PassThrough Start"
   DL.SendSequence ">>>>> Set PT mode ON >>>>>>>>>>>>>>>"
   result = DL.WaitForSequence("pt resp", 1, 2000)
End If
'------------------------------------------------------------
msgbox "Place Mifare DESFire EV1 2K card on reader and then click OK", vbyesonly

If result <> 0 Then
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Poll for token"
   DL.SendSequence "Step 2. Poll for token"
   if readerType = "GR" or readerType = "NEO1" then result = DL.WaitForSequence("poll token resp", 1, 2000)
   if readerType = "NEO2" or readerType = "USAT" or readerType = "USAT_SRED" then result = DL.WaitForSequence("poll token resp (NEO2)", 1, 2000)
End If
'------------------------------------------------------------
If result <> 0 Then
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- GetVersion 1"
   DL.SendSequence "Step 3. GetVersion 1"
   result = DL.WaitForSequence("2c cmd 00 resp", 1, 2000)
   dl.pause 300
End If
If result <> 0 Then
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- GetVersion 2"
   DL.SendSequence "Step 4. GetVersion 2"
   result = DL.WaitForSequence("2c cmd 00 resp", 1, 2000)
   dl.pause 300
End If
If result <> 0 Then
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- GetVersion 3"
   DL.SendSequence "Step 5. GetVersion 3"
   result = DL.WaitForSequence("2c cmd 00 resp", 1, 2000)
   dl.pause 300
End If
'------------------------------------------------------------
If result <> 0 Then
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Select default AID"
   DL.SendSequence "Step 6. Select default AID"
   result = DL.WaitForSequence("2c cmd 00 resp", 1, 2000)
   dl.pause 300
End If
'------------------------------------------------------------
If result <> 0 Then
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Auth 1 Get RandA"
   DL.SendSequence "Step 7. Auth 1 Get RandA"
   result = DL.WaitForSequence("2c cmd 00 resp", 1, 2000)
   dl.pause 300
End If
'------------------------------------------------------------
If result <> 0 Then
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Authenticate"
   DL.SendSequence "Step 8. Authenticate"
   result = DL.WaitForSequence("2c cmd 00 resp", 1, 2000)
   dl.pause 300
End If
'------------------------------------------------------------
If result <> 0 Then
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Select APP 000000"
   DL.SendSequence "Step 9. Select APP 000000"
   result = DL.WaitForSequence("2c cmd 00 resp", 1, 2000)
   dl.pause 300
End If
'------------------------------------------------------------
If result <> 0 Then
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Create App 000111 with KeySetting 0F and 01 Key"
   DL.SendSequence "Step 10. Create App 000111 with KeySetting 0F and 01 Key"
   result = DL.WaitForSequence("2c cmd 00 resp", 1, 2000)
   dl.pause 300
End If
'------------------------------------------------------------
If result <> 0 Then
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Select APP 000111"
   DL.SendSequence "Step 11. Select APP 000111"
   result = DL.WaitForSequence("2c cmd 00 resp", 1, 2000)
   dl.pause 300
End If
'------------------------------------------------------------
If result <> 0 Then
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Create a Plain Text with ID 01, size 100000"
   DL.SendSequence "Step 12. Create a Plain Text with ID 01, size 100000"
   result = DL.WaitForSequence("2c cmd 00 resp", 1, 2000)
   dl.pause 300
End If
'------------------------------------------------------------
If result <> 0 Then
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Write Data  AA AA BB BB CC CC DD DD AA AA BB BB CC CC DD DD"
   DL.SendSequence "Step 13. Write Data  AA AA BB BB CC CC DD DD AA AA BB BB CC CC DD DD"
   result = DL.WaitForSequence("write data resp", 1, 2000)
   dl.pause 300
End If
'------------------------------------------------------------
If result <> 0 Then
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Read file 01, no offset , no size"
   DL.SendSequence "Step 14. Read file 01, no offset , no size"
   result = DL.WaitForSequence("read data resp", 1, 2000)
   dl.pause 300
End If
'------------------------------------------------------------
If result <> 0 Then
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- PassThrough Stop"
   DL.SendSequence ">>>>> Set PT mode OFF >>>>>>>>>>>>>>>"
   result = DL.WaitForSequence("pt resp", 1, 10000)
else
   DL.ResetReceiveCounter
   dl.addcomment vbcrlf
   DL.AddComment "--- PassThrough Stop"
   DL.SendSequence ">>>>> Set PT mode OFF >>>>>>>>>>>>>>>"
   dl.pause 1000
End If
'------------------------------------------------------------
DL.AddComment vbCrLf
PrintMyResult(result)

DL.AddComment "---------- END OF TEST ----------" & vbCrLf
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""

'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.pause 1000

If 0 Then
   If result = 0 then
      DL.AddComment Chr(13) & "Result = FAILED"
   Else
      DL.AddComment Chr(13) & "Result = PASSED"
   End If
End If

If Prompting(0) = "ON" Then
   If result = 0 then
      MsgBox "Result = FAILED", VBOKOnly, "Result"
   Else 
      MsgBox "Result = PASSED", VBOKOnly, "Result"
   End If
End If
'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------
If MasterResult = 1 Then
   MasterVerdict = "PASSED"
ElseIf MasterResult = 0 Then
       MasterVerdict = "FAILED"
End If
result = MasterResult
DL.AddComment vbCrLf
DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'   FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	  FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
   FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
       FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile
