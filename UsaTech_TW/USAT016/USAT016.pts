DL_SCRIPTVERSION
1
24035

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "USAT016" ' !!!!! EDIT THIS !!!!!
' Objective: JIRA issue -- TS-8167
' TTQ 20 00 40 00 -> F0-F6 -> 02-40 -> F0-F7, card data was incorrect.
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result

  'Set Reader Type
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerType = result

  'Set Reader Model
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerModel = result

  'Set Reader FW version
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwVersion = result

  'Set Reader FW build
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwBuild = result

  'Set Reader General Flag
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  genFlag = result
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
         MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If    
End Sub
'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
'DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0

result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""
'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication
'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
    If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
       MasterResult = 1
       DL.AddComment "Result = PASSED"
    Else
       MasterResult = 0
       DL.AddComment "Result = FAILED"
    End If
End Sub

Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function
'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
         DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
         MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function
'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
readercheck = msgbox("Does reader has data key & encryption ON?", vbyesno)
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Burst OFF mode"
   if readerType <> "NEO2" then 
      DL.SendSequence "Burst OFF mode"
   else
      DL.SendSequence "Burst OFF mode (NEO2)"
   end if
   result = DL.WaitForSequence("04 00", 1, 3000)
   dl.pause 500
End If

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- Poll on demand"
   DL.SendSequence "Poll on demand"
   result = DL.WaitForSequence("01 00", 1, 3000)
   dl.pause 500
End If

if readerType <> "NEO2" then
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- TTQ 20 00 40 00"
   DL.SendSequence "04-00 TTQ 20 00 40 00"
   result = DL.WaitForSequence("04 00", 1, 3000)
   dl.pause 500
   DL.ClearCommWindows
End If
end if
'------------------------------------------------------------Blue off->ON->0240
For K = 1 to 2
if readercheck = 6 then k = k + 1
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- F0-F6 Disable Blue LED"
   DL.SendSequence "F0-F6 Disable Blue LED"
   result = DL.WaitForSequence("F0 00", 1, 3000)
   dl.pause 500
End If

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- F0-F7 Enable Blue LED"
   DL.SendSequence "F0-F7 Enable Blue LED"
   result = DL.WaitForSequence("F0 00", 1, 3000)
   dl.pause 500
End If

if k = 1 then 
If result <> 0 Then
   msgbox "Click OK -> Tap VISA qVSDC", vbokonly
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 02-01"
   DL.SendSequence "02-01"
   r1 = DL.WaitForSequence("02 23", 1, 3000)
   if readerType <> "NEO2" then 
      r2 = DL.WaitForSequence("card data", 1, 3000)
   else
      r2 = DL.WaitForSequence("card data (NEO2)", 1, 3000)
   end if
   if r1 = 0 or r2 = 0 then result = 0
   dl.pause 1500
End If
end if

if k = 2 then
If result <> 0 Then
   msgbox "Click OK -> Tap VISA qVSDC", vbokonly
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 02-40"
   DL.SendSequence "02-40"
   dl.pause 1000
   r1 = DL.WaitForSequence("02 23", 1, 3000)
   if readerType <> "NEO2" then 
      r2 = DL.WaitForSequence("card data", 1, 3000)
   else
      r2 = DL.WaitForSequence("card data (NEO2)", 1, 3000)
   end if
   if r1 = 0 or r2 = 0 then result = 0
   dl.pause 1500
End If
end if
next
'------------------------------------------------------------Blue off->0240->ON
for m = 1 to 2
if readercheck = 6 then m = m + 1
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- F0-F6 Disable Blue LED"
   DL.SendSequence "F0-F6 Disable Blue LED"
   result = DL.WaitForSequence("F0 00", 1, 3000)
   dl.pause 500
End If

if m = 1 then 
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 02-01"
   DL.SendSequence "02-01"
   dl.pause 1000
   dl.addcomment vbcrlf
   DL.AddComment "--- F0-F7 Enable Blue LED"
   DL.SendSequence "F0-F7 Enable Blue LED"
   result = DL.WaitForSequence("F0 00", 1, 3000)
   dl.pause 500

   if result <> 0 then
      msgbox "Click OK -> Tap VISA qVSDC", vbokonly
      dl.pause 1000
      r1 = DL.WaitForSequence("02 23", 1, 5000)
      if readerType <> "NEO2" then 
         r2 = DL.WaitForSequence("card data", 1, 3000)
      else
         r2 = DL.WaitForSequence("card data (NEO2)", 1, 3000)
      end if
      if r1 = 0 or r2 = 0 then result = 0
      dl.pause 1500
   end if
End If
end if

if m = 2 then
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 02-40"
   DL.SendSequence "02-40"

   dl.addcomment vbcrlf
   DL.AddComment "--- F0-F7 Enable Blue LED"
   DL.SendSequence "F0-F7 Enable Blue LED"
   result = DL.WaitForSequence("F0 00", 1, 3000)
   dl.pause 500

   if result <> 0 then
      msgbox "Click OK -> Tap VISA qVSDC", vbokonly
      dl.pause 1000
      r1 = DL.WaitForSequence("02 23", 1, 5000)
      if readerType <> "NEO2" then 
         r2 = DL.WaitForSequence("card data", 1, 3000)
      else
         r2 = DL.WaitForSequence("card data (NEO2)", 1, 3000)
      end if
      if r1 = 0 or r2 = 0 then result = 0
      dl.pause 1500
   end if
End If
end if
next
'------------------------------------------------------------
DL.AddComment vbCrLf
DL.AddComment "---------- END OF TEST ----------" & vbCrLf
PrintMyResult(result)
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""
'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'DL.pause 1000
'If result = 0 then
'  DL.AddComment Chr(13) & "Result = FAILED"
'Else
'  DL.AddComment Chr(13) & "Result = PASSED"
'End If
'If Prompting(0) = "ON" Then
'  If result = 0 then
'    MsgBox "Result = FAILED", VBOKOnly, "Result"
'  Else 
'    MsgBox "Result = PASSED", VBOKOnly, "Result"
'  End If
'End If
'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------
'If MasterResult = 1 Then
'      MasterVerdict = "PASSED"
'ElseIf MasterResult = 0 Then
'      MasterVerdict = "FAILED"
'End If
'result = MasterResult
'DL.AddComment vbCrLf
'DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If
FileOutput.CreateFile "FINAL_VERDICT.txt"
If MasterResult = 0 Then 
   FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
       FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 

Sub DL_OnSend()
    usDataLen = DL.OnSend_GetSize() - 2
    If usDataLen > 0 Then
        crcStr = DL.CalcChecksum("CRC-CCITT", DL.OnSend_GetData("H"), "H", 1, usDataLen) 
        ' Write result to the last two bytes of the sequence
        DL.OnSend_Poke usDataLen + 1, CInt("&h" + Right(crcStr, 2)) ' low byte
        DL.OnSend_Poke usDataLen + 2, CInt("&h" + Left(crcStr, 2)) ' high byte
    End If
End Sub
