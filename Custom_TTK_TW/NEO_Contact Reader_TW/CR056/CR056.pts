DL_SCRIPTVERSION
1
3357

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "CR056" ' !!!!! EDIT THIS !!!!!
' Objective: to verify cmd 60-06 v.s. 60-16
' spec v1.05, cmd 60-06 "Contact Common EMV L2 approved 4 configurations of certification. 7 major tags can't do major change"
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result

  'Set Reader Type
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerType = result

  'Set Reader Model
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerModel = result

  'Set Reader FW version
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwVersion = result

  'Set Reader FW build
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwBuild = result      
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
End Sub
'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
'DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0

result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""
'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication
'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub

Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function
'---
sub t1a()
    If result <> 0 Then
       dl.resetreceivecounter
       dl.addcomment vbcrlf
       DL.AddComment "--- 60-06 (9F33 = 60 F8 C8)"
       DL.SendSequence "60-06 (9F33 = 60 F8 C8)"
       result = DL.WaitForSequence("60 05", 1, 2000)
       dl.pause 500
    End If
end sub

sub t1b()
    If result <> 0 Then
       dl.resetreceivecounter
       dl.addcomment vbcrlf
       DL.AddComment "--- 60-06 (9F33 = 60 28 C8)"
       DL.SendSequence "60-06 (9F33 = 60 28 C8)"
       result = DL.WaitForSequence("60 05", 1, 2000)
       dl.pause 500
    End If
end sub
'---
sub t2a()
    If result <> 0 Then
       dl.resetreceivecounter
       dl.addcomment vbcrlf
       DL.AddComment "--- 60-06 (9F35 = 22)"
       DL.SendSequence "60-06 (9F35 = 22)"
       result = DL.WaitForSequence("60 05", 1, 2000)
       dl.pause 500
    End If
end sub

sub t2b()
    If result <> 0 Then
       dl.resetreceivecounter
       dl.addcomment vbcrlf
       DL.AddComment "--- 60-06 (9F35 = 21)"
       DL.SendSequence "60-06 (9F35 = 21)"
       result = DL.WaitForSequence("60 05", 1, 2000)
       dl.pause 500
    End If
end sub
'---
sub t3a()
    If result <> 0 Then
       dl.resetreceivecounter
       dl.addcomment vbcrlf
       DL.AddComment "--- 60-06 (9F40 = F0 00 F0 A0 01)"
       DL.SendSequence "60-06 (9F40 = F0 00 F0 A0 01)"
       result = DL.WaitForSequence("60 05", 1, 2000)
       dl.pause 500
    End If
end sub

sub t3b()
    If result <> 0 Then
       dl.resetreceivecounter
       dl.addcomment vbcrlf
       DL.AddComment "--- 60-06 (9F40 = 60 00 F0 50 01)"
       DL.SendSequence "60-06 (9F40 = 60 00 F0 50 01)"
       result = DL.WaitForSequence("60 05", 1, 2000)
       dl.pause 500
    End If
end sub
'---
sub t4a()
    If result <> 0 Then
       dl.resetreceivecounter
       dl.addcomment vbcrlf
       DL.AddComment "--- 60-06 (DF11 = 01)"
       DL.SendSequence "60-06 (DF11 = 01)"
       result = DL.WaitForSequence("60 05", 1, 2000)
       dl.pause 500
    End If
end sub

sub t4b()
    If result <> 0 Then
       dl.resetreceivecounter
       dl.addcomment vbcrlf
       DL.AddComment "--- 60-06 (DF11 = 00)"
       DL.SendSequence "60-06 (DF11 = 00)"
       result = DL.WaitForSequence("60 05", 1, 2000)
       dl.pause 500
    End If
end sub
'---
sub t5a()
    If result <> 0 Then
       dl.resetreceivecounter
       dl.addcomment vbcrlf
       DL.AddComment "--- 60-06 (DF26 = 00)"
       DL.SendSequence "60-06 (DF26 = 00)"
       result = DL.WaitForSequence("60 05", 1, 2000)
       dl.pause 500
    End If
end sub

sub t5b()
    If result <> 0 Then
       dl.resetreceivecounter
       dl.addcomment vbcrlf
       DL.AddComment "--- 60-06 (DF26 = 01)"
       DL.SendSequence "60-06 (DF26 = 01)"
       result = DL.WaitForSequence("60 05", 1, 2000)
       dl.pause 500
    End If
end sub
'---
sub t6a()
    If result <> 0 Then
       dl.resetreceivecounter
       dl.addcomment vbcrlf
       DL.AddComment "--- 60-06 (DF27 = 01)"
       DL.SendSequence "60-06 (DF27 = 01)"
       result = DL.WaitForSequence("60 05", 1, 2000)
       dl.pause 500
    End If
end sub

sub t6b()
    If result <> 0 Then
       dl.resetreceivecounter
       dl.addcomment vbcrlf
       DL.AddComment "--- 60-06 (DF27 = 00)"
       DL.SendSequence "60-06 (DF27 = 00)"
       result = DL.WaitForSequence("60 05", 1, 2000)
       dl.pause 500
    End If
end sub
'---
sub t7a()
    If result <> 0 Then
       dl.resetreceivecounter
       dl.addcomment vbcrlf
       DL.AddComment "--- 60-06 (DFEE1E = F0 DC 3C F0 C2 9E 96 00)"
       DL.SendSequence "60-06 (DFEE1E = F0 DC 3C F0 C2 9E 96 00)"
       result = DL.WaitForSequence("60 05", 1, 2000)
       dl.pause 500
    End If
end sub

sub t7b()
    If result <> 0 Then
       dl.resetreceivecounter
       dl.addcomment vbcrlf
       DL.AddComment "--- 60-06 (DFEE1E = D0 DC 20 D0 C4 1E 16 00)"
       DL.SendSequence "60-06 (DFEE1E = D0 DC 20 D0 C4 1E 16 00)"
       result = DL.WaitForSequence("60 05", 1, 2000)
       dl.pause 500
    End If
end sub
'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function
'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
If result <> 0 Then
   dl.resetreceivecounter
   DL.AddComment "--- 60-16 Contact Set ICS Identification (01)"
   DL.SendSequence "60-16 Contact Set ICS Identification (01)"
   result = DL.WaitForSequence("60-16 resp ok", 1, 2000)
   dl.pause 500
End If

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 60-06 Contact Set Terminal Data >> 1C"
   DL.SendSequence "60-06 1C"
   result = DL.WaitForSequence("60-16 resp ok", 1, 2000)
   dl.pause 500
End If

t1b()
t2b()
t3b()
t4b()
t5a()
t6a()
t7b()
'------------------------------------------------------------
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 60-16 Contact Set ICS Identification (02 = Default)"
   DL.SendSequence "60-16 Contact Set ICS Identification (02 = Default)"
   result = DL.WaitForSequence("60-16 resp ok", 1, 2000)
   dl.pause 500
End If

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 60-06 Contact Set Terminal Data >> 2C"
   DL.SendSequence "60-06 2C"
   result = DL.WaitForSequence("60-16 resp ok", 1, 2000)
   dl.pause 500
End If

t1a()
t2a()
t3b()
t4a()
t5a()
t6a()
t7a()
'------------------------------------------------------------
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 60-16 Contact Set ICS Identification (03)"
   DL.SendSequence "60-16 Contact Set ICS Identification (03)"
   result = DL.WaitForSequence("60-16 resp ok", 1, 2000)
   dl.pause 500
End If

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 60-06 Contact Set Terminal Data >> 3C"
   DL.SendSequence "60-06 3C"
   result = DL.WaitForSequence("60-16 resp ok", 1, 2000)
   dl.pause 500
End If

t1a()
t2a()
t3a()
t4b()
t5a()
t6a()
t7b()
'------------------------------------------------------------
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 60-16 Contact Set ICS Identification (04)"
   DL.SendSequence "60-16 Contact Set ICS Identification (04)"
   result = DL.WaitForSequence("60-16 resp ok", 1, 2000)
   dl.pause 500
End If

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 60-06 Contact Set Terminal Data >> 4C"
   DL.SendSequence "60-06 4C"
   result = DL.WaitForSequence("60-16 resp ok", 1, 2000)
   dl.pause 500
End If

t1a()
t2a()
t3a()
t4b()
t5a()
t6a()
t7a()
'------------------------------------------------------------
If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 60-16 Contact Set ICS Identification (05)"
   DL.SendSequence "60-16 Contact Set ICS Identification (05)"
   result = DL.WaitForSequence("60-16 resp ok", 1, 2000)
   dl.pause 500
End If

If result <> 0 Then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 60-06 Contact Set Terminal Data >> 5C"
   DL.SendSequence "60-06 5C"
   result = DL.WaitForSequence("60-16 resp ok", 1, 2000)
   dl.pause 500
End If

t1a()
t2a()
t3b()
t4a()
t5a()
t6a()
t7a()
'------------------------------------------------------------
DL.AddComment vbCrLf
PrintMyResult(result)

DL.AddComment "---------- END OF TEST ----------" & vbCrLf
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""
'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.pause 1000

If result = 0 then
  DL.AddComment Chr(13) & "Result = FAILED"
Else
  DL.AddComment Chr(13) & "Result = PASSED"
End If

If Prompting(0) = "ON" Then
  If result = 0 then
    MsgBox "Result = FAILED", VBOKOnly, "Result"
  Else 
    MsgBox "Result = PASSED", VBOKOnly, "Result"
  End If
End If

'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------

If MasterResult = 1 Then
      MasterVerdict = "PASSED"
ElseIf MasterResult = 0 Then
      MasterVerdict = "FAILED"
End If
result = MasterResult
DL.AddComment vbCrLf
DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 
