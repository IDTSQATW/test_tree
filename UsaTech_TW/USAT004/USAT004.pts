DL_SCRIPTVERSION
1
27811

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "USAT004" ' !!!!! EDIT THIS !!!!!
'+++
' This test case is to verify CL card read from DISC Tyte A test card (D001)
' Modify from USAT018
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result

  'Set Reader Type
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerType = result

  'Set Reader Model
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerModel = result

  'Set Reader FW version
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwVersion = result

  'Set Reader FW build
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwBuild = result

  'Set Reader FW build
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwGF = result
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
      
End Sub

'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0
result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication

'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub

Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function


'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function

'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
If readerType = "AR" Then

'============================================================
MyInput = MsgBox ("Are you testing AR2.x.x USA Tech functions?", VBYesNo, "Test Step")
'------------------------------------------------------------
If MyInput = 6 Then

  DL.SendSequence "", "F6 F6 F6", "H"
  DL.Pause 1000

  DL.SendSequence "", "F7 F7 F7", "H"
  DL.Pause 1000

  DL.SendSequence "", "F9 F9 F9", "H"
  DL.Pause 1000

  DL.SendSequence "", "FE FE FE", "H"
  DL.Pause 1000

  MyInput = MsgBox("Press click OK and then tap DISC type A (D001) test card.", VBOKOnly, "Test: button")

  DL.AddComment "--- USA Tech (Please tap card)"
  DL.SendSequence " USA Tech (Please tap card)"
  result = DL.WaitForSequence("USAT CL DISC type A test card (D001) resp", 1, 10000)

  DL.Pause 1000

Else
   DL.AddComment vbCrLf & "User selected 'No'. It is not for testing USA Tech functions." & vbCrLf
   result = 0
End If
'============================================================

elseif readerType = "GR" or readerType = "NEO2" Then

'============================================================
MyInput = MsgBox ("Are you testing AR2.x.x USA Tech functions?", VBYesNo, "Test Step")
'------------------------------------------------------------
If MyInput = 6 Then

   dl.addcomment resetreceivecounter
   dl.addcomment "--- Auto poll"
   dl.sendsequence "auto poll"
   result = dl.waitforsequence("poll resp ok", 1, 2000)

   if result <> 0 then

      dl.addcomment vbcrlf
      dl.addcomment "--- OFF->ON blue LED, clear LCD, beep once"
      DL.SendSequence "", "F6 F6 F6", "H"
      DL.Pause 1000
      DL.SendSequence "", "F7 F7 F7", "H"
      DL.Pause 1000
      DL.SendSequence "", "F9 F9 F9", "H"
      DL.Pause 1000
      DL.SendSequence "", "FE FE FE", "H"
      DL.Pause 1000
      MyInput = MsgBox("Click OK --> Tap Discover (ANY) card", VBOKOnly, "Test: button")

      dl.addcomment resetreceivecounter
      dl.addcomment vbcrlf
      DL.AddComment "--- USA Tech (Please tap card )"
      DL.SendSequence " USA Tech (Please tap card)"
      result = DL.WaitForSequence("USAT CL DISC type A test card (D001) resp", 1, 10000)
      DL.Pause 1000

      dl.addcomment resetreceivecounter
      dl.addcomment vbcrlf
      dl.addcomment "--- Poll on demand"
      dl.sendsequence "poll on demand"
      dl.pause 2000

   end if

Else

   DL.AddComment vbCrLf & "User selected 'No'. It is not for testing USA Tech functions." & vbCrLf
   result = 0

End If
'============================================================

end if

DL.Pause 1500
DL.AddComment vbCrLf
PrintMyResult(result)

DL.AddComment "---------- END OF TEST ----------" & vbCrLf
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""

'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.pause 1000

If 0 Then
If result = 0 then
  DL.AddComment Chr(13) & "Result = FAILED"
Else
  DL.AddComment Chr(13) & "Result = PASSED"
End If
End If

If Prompting(0) = "ON" Then
  If result = 0 then
    MsgBox "Result = FAILED", VBOKOnly, "Result"
  Else 
    MsgBox "Result = PASSED", VBOKOnly, "Result"
  End If
End If

'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------

If MasterResult = 1 Then
      MasterVerdict = "PASSED"
ElseIf MasterResult = 0 Then
      MasterVerdict = "FAILED"
End If
result = MasterResult
DL.AddComment vbCrLf
DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 



