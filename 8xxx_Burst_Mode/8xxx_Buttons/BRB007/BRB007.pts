DL_SCRIPTVERSION
1
51136

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "BRB007" ' !!!!! EDIT THIS !!!!!

'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)
DebuggerOption = 1
Dim ControlID

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result
      
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
      
End Sub

'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0

result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication

'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON " Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub


Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function

'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function




'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
'------------------------------------------------------------
MyInput = MsgBox ("Are you testing 8100?", VBYesNo, "Test Step")
If MyInput = 6 Then
  DL.AddComment "--- Clear display"
  DL.SendSequence "Clear display"
  result = DL.WaitForSequence ("Clear display Response", 1,3000)
  
'------------------------------------------------------------
If result <> 0 Then
  DL.ResetReceiveCounter "Clear display Response"
  DL.AddComment "--- Event queue clear"
  DL.SendSequence "Event queue clear"
  result = DL.WaitForSequence ("Clear display Response", 1,3000)
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.ResetReceiveCounter
  DL.AddComment "--- Radio button, grouip 1, Bryce"
  DL.SendSequence "Radio button, grouip 1, Bryce"
  result = DL.WaitForSequence ("Command Ignored", 1,3000)
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.ResetReceiveCounter
  DL.AddComment "--- Radio button, grouip 1, Monica"
  DL.SendSequence "Radio button, grouip 1, Monica"
  result = DL.WaitForSequence ("Command Ignored", 1,3000)
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.ResetReceiveCounter
  DL.AddComment "--- Radio button, grouip 1, Buff"
  DL.SendSequence "Radio button, grouip 1, Buff"
  result = DL.WaitForSequence ("Command Ignored", 1,3000)
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.ResetReceiveCounter
  DL.AddComment "--- Radio button, grouip 1, Bob"
  DL.SendSequence "Radio button, grouip 1, Bob"
  result = DL.WaitForSequence ("Command Ignored", 1,3000)
End If
'------------------------------------------------------------



Else

MyInput = MsgBox ("Are you testing AR 2.1 and Above?", VBYesNo, "Test Step")
If MyInput = 6 Then
  DL.AddComment "--- Clear display"
  DL.SendSequence "Clear display"
  result = DL.WaitForSequence ("Clear display Response", 1,3000)

  DL.AddComment "--- Custom mode"
  DL.SendSequence "Custom mode"
  result = DL.WaitForSequence ("Clear display Response", 1,3000)

'------------------------------------------------------------
If result <> 0 Then
  DL.Pause 100
  DL.ResetReceiveCounter
  DL.AddComment "--- Event queue clear"
  DL.SendSequence "Event queue clear"
  result = DL.WaitForSequence ("Clear display Response", 1,3000)
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.Pause 100
  DL.ResetReceiveCounter
  DL.AddComment "--- Radio button, grouip 1, Bryce rev"
  DL.SendSequence "Radio button, grouip 1, Bryce rev"
  result = DL.WaitForSequence ("General Response", 1,3000)
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.Pause 100
  DL.ResetReceiveCounter
  DL.AddComment "--- Radio button, grouip 1, Monica rev"
  DL.SendSequence "Radio button, grouip 1, Monica rev"
  result = DL.WaitForSequence ("General Response", 1,3000)
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.Pause 100
  DL.ResetReceiveCounter
  DL.AddComment "--- Radio button, grouip 1, Buff rev"
  DL.SendSequence "Radio button, grouip 1, Buff rev"
  result = DL.WaitForSequence ("General Response", 1,3000)
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.Pause 100
  DL.ResetReceiveCounter
  DL.AddComment "--- Radio button, grouip 1, Bob rev"
  DL.SendSequence "Radio button, grouip 1, Bob rev"
  result = DL.WaitForSequence ("General Response", 1,3000)
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.Pause 100
  DL.ResetReceiveCounter
  DL.AddComment "--- Radio button, grouip 2, Buy More Memory rev"
  DL.SendSequence "Radio button, grouip 2, Buy More Memory rev"
  result = DL.WaitForSequence ("General Response", 1,3000)
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.Pause 100
  DL.ResetReceiveCounter
  DL.AddComment "--- Radio button, grouip 2, label multiple processors rev"
  DL.SendSequence "Radio button, grouip 2, label multiple processors rev"
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.Pause 100
  DL.ResetReceiveCounter
  DL.AddComment "--- Radio button, grouip 2, More Food rev"
  DL.SendSequence "Radio button, grouip 2, More Food rev"
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.Pause 100
  DL.ResetReceiveCounter
  DL.AddComment "---Radio button, grouip 2, label More Employees rev"
  DL.SendSequence "Radio button, grouip 2, label More Employees rev"
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.Pause 100
  DL.ResetReceiveCounter
  DL.AddComment "--- Radio button, grouip 2, More Stock rev"
  DL.SendSequence "Radio button, grouip 2, More Stock rev"
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.Pause 100
  DL.ResetReceiveCounter
  DL.AddComment "--- Radio button, grouip 2, label More Money rev"
  DL.SendSequence "Radio button, grouip 2, label More Money rev"
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.Pause 100
  MsgBox "Click Ok and then select Monica.", VBOKOnly, "Test Step"
  DL.ResetReceiveCounter "Good Box Response"
  DL.AddComment "--- Get event"
  DL.SendSequence "Get event"
  result = DL.WaitForSequence ("Monica Check 2", 1,13000)
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.Pause 100
  MsgBox "Click Ok and then select More Memory", VBOKOnly, "Test Step"
  DL.ResetReceiveCounter "Good Box Response"
  DL.AddComment "--- Get event"
  DL.SendSequence "Get event"
  result = DL.WaitForSequence ("More Memory Check", 1,13000)
End If
Else
  DL.AddComment "--- Clear display"
  DL.SendSequence "Clear display"
  result = DL.WaitForSequence ("Clear display Response", 1,3000)
'------------------------------------------------------------
If result <> 0 Then
  DL.ResetReceiveCounter "Clear display Response"
  DL.AddComment "--- Event queue clear"
  DL.SendSequence "Event queue clear"
  result = DL.WaitForSequence ("Clear display Response", 1,3000)
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.ResetReceiveCounter "Clear display Response"
  DL.AddComment "--- Radio button, grouip 1, Bryce"
  DL.SendSequence "Radio button, grouip 1, Bryce"
  result = DL.WaitForSequence ("General Response", 1,3000)
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.ResetReceiveCounter "General Response"
  DL.AddComment "--- Radio button, grouip 1, Monica"
  DL.SendSequence "Radio button, grouip 1, Monica"
  result = DL.WaitForSequence ("General Response", 1,3000)
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.ResetReceiveCounter "General Response"
  DL.AddComment "--- Radio button, grouip 1, Buff"
  DL.SendSequence "Radio button, grouip 1, Buff"
  result = DL.WaitForSequence ("General Response", 1,3000)
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.ResetReceiveCounter "General Response"
  DL.AddComment "--- Radio button, grouip 1, Bob"
  DL.SendSequence "Radio button, grouip 1, Bob"
  result = DL.WaitForSequence ("General Response", 1,3000)
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.ResetReceiveCounter "General Response"
  DL.AddComment "--- Radio button, grouip 2, Buy More Memory"
  DL.SendSequence "Radio button, grouip 2, Buy More Memory"
  result = DL.WaitForSequence ("General Response", 1,3000)
End If
'------------------------------------------------------------
If result <> 0 Then
  DL.ResetReceiveCounter "General Response"
  DL.AddComment "--- Radio button, grouip 2, label multiple processors"
  DL.SendSequence "Radio button, grouip 2, label multiple processors"
End If
'------------------------------------------------------------
If result <> 0 Then
  MsgBox "Select Monica.", VBOKOnly, "Test Step"
  DL.ResetReceiveCounter "Good Box Response"
  DL.AddComment "--- Get event"
  DL.SendSequence "Get event"
  result = DL.WaitForSequence ("Monica Check", 1,13000)
End If
'------------------------------------------------------------
If result <> 0 Then
  MsgBox "Select Multi Processing.", VBOKOnly, "Test Step"
  DL.ResetReceiveCounter "Good Box Response"
  DL.AddComment "--- Get event"
  DL.SendSequence "Get event"
  result = DL.WaitForSequence ("Multi Processing", 1,13000)
End If

End If
End If

DL.AddComment "--- Disable Custom Mode"
DL.SendSequence "Disable Custom Mode"
'------------------------------------------------------------
DL.AddComment vbCrLf
PrintMyResult(result)

DL.AddComment "---------- END OF TEST ----------" & vbCrLf
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""

'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.pause 1000

If result = 0 then
  DL.AddComment Chr(13) & "Result = FAILED"
Else
  DL.AddComment Chr(13) & "Result = PASSED"
End If

If Prompting(0) = "ON" Then
  If result = 0 then
    MsgBox "Result = FAILED", VBOKOnly, "Result"
  Else 
    MsgBox "Result = PASSED", VBOKOnly, "Result"
  End If
End If

'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------

If MasterResult = 1 Then
      MasterVerdict = "PASSED"
ElseIf MasterResult = 0 Then
      MasterVerdict = "FAILED"
End If
result = MasterResult
DL.AddComment vbCrLf
DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 



