DL_SCRIPTVERSION
1
53996

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "BT016" ' !!!!! EDIT THIS !!!!!
'Objective: NEO3-15458, add sub cmd 05 in cmd 7786 to select BLE FW
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
   'Display Test Case Number and Description     
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()
   Prompting(0) = result
      
   'Display Test Steps   
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   Prompting(1) = result

   'Set Docklight COM Port     
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   COM_Port(1) = result

   'Set Reader Baud Rate
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   POSBaudRate(1) = result

   'Set Reader Type
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   readerType = result

   'Set Reader Model
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   readerModel = result

   'Set Reader FW version
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   fwVersion = result

   'Set Reader FW build
   result = FileInput.GetLine() 'by pass variable name
   result = FileInput.GetLine()      
   fwBuild = result   

  'Set Reader General Flag
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  genFlag = result
Loop

Sub StepPrompt(PromptString)
    DL.AddComment PromptString
    If Prompting(1) = "ON" Then
       MsgBox PromptString, VBOKOnly, "Test Step"
    Else
    End If  
End Sub
'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
'DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0

result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication
'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
    If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
       MasterResult = 1
       DL.AddComment "Result = PASSED"
    Else
       MasterResult = 0
       DL.AddComment "Result = FAILED"
    End If
End Sub

Function ReverseResult(ResultParam)
      If ResultParam = 1 Then
            result = 0
      ElseIf ResultParam = 0 Then
            result = 1
      End If
End Function
'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
         DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
         MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function
'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------default check
if result <> 0 then
   dl.resetreceivecounter
   DL.AddComment "--- 77-81 (reset to default)"
   DL.SendSequence "77-81 (reset to default)"
   result = DL.WaitForSequence("77-xx resp 00", 1, 5000)
   if result <> 0 then DL.SendSequence "77-05"
   dl.pause 11000
End If

if result <> 0 then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 77-86 read config of ble fw option, 0 = sps only; 1 = sps + hid"
   DL.SendSequence "77-86 read config of ble fw option, 0 = sps only; 1 = sps + hid"
   result = DL.WaitForSequence("0 is sps only", 1, 2000)
End If

if result <> 0 then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 01-0B check the ble fw version"
   DL.SendSequence "01-0B check the ble fw version"
   result = DL.WaitForSequence("support SPS only", 1, 2000)
End If

'------------------------------------------------------------set sps + hid
if result <> 0 then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 77-86 set sps + hid ble fw"
   DL.SendSequence "77-86 set sps + hid ble fw"
   result = DL.WaitForSequence("77-xx resp 00", 1, 5000)
   if result <> 0 then DL.SendSequence "77-05"
   dl.pause 11000
End If

if result <> 0 then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 77-86 read config of ble fw option, 0 = sps only; 1 = sps + hid"
   DL.SendSequence "77-86 read config of ble fw option, 0 = sps only; 1 = sps + hid"
   result = DL.WaitForSequence("1 is sps + hid service", 1, 2000)
End If

if result <> 0 then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 01-0B check the ble fw version"
   DL.SendSequence "01-0B check the ble fw version"
   result = DL.WaitForSequence("support SPS + HID", 1, 2000)
End If

if result <> 0 then
   usercheck = msgbox ("Please use mobile phone to pair w/ the reader via Bluetooth, user can see HID service, right?", vbyesno)
   if usercheck = 7 then result = 0
   msgbox "Please unpair the reader from mobile phone UI --> Click OK", vbokonly
End If

'------------------------------------------------------------set sps only
if result <> 0 then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 77-86 set sps only ble fw"
   DL.SendSequence "77-86 set sps only ble fw"
   result = DL.WaitForSequence("77-xx resp 00", 1, 5000)
   if result <> 0 then DL.SendSequence "77-05"
   dl.pause 11000
End If

if result <> 0 then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 77-86 read config of ble fw option, 0 = sps only; 1 = sps + hid"
   DL.SendSequence "77-86 read config of ble fw option, 0 = sps only; 1 = sps + hid"
   result = DL.WaitForSequence("0 is sps only", 1, 2000)
End If

if result <> 0 then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   DL.AddComment "--- 01-0B check the ble fw version"
   DL.SendSequence "01-0B check the ble fw version"
   result = DL.WaitForSequence("support SPS only", 1, 2000)
End If

if result <> 0 then
   usercheck = msgbox ("Please use mobile phone to pair w/ the reader via Bluetooth, user can NOT see HID service, right?", vbyesno)
   if usercheck = 7 then result = 0
   msgbox "Please unpair the reader from mobile phone UI --> Click OK", vbokonly
End If

'------------------------------------------------------------
DL.AddComment vbCrLf
DL.AddComment "---------- END OF TEST ----------" & vbCrLf
PrintMyResult(result)

Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""
'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'DL.pause 1000

'If result = 0 then
'   DL.AddComment Chr(13) & "Result = FAILED"
'Else
'   DL.AddComment Chr(13) & "Result = PASSED"
'End If

'If Prompting(0) = "ON" Then
'   If result = 0 then
'      MsgBox "Result = FAILED", VBOKOnly, "Result"
'   Else 
'      MsgBox "Result = PASSED", VBOKOnly, "Result"
'   End If
'End If
'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------
'If MasterResult = 1 Then
'   MasterVerdict = "PASSED"
'ElseIf MasterResult = 0 Then
'       MasterVerdict = "FAILED"
'End If
'result = MasterResult
'DL.AddComment vbCrLf
'DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'   FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	  FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
   FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
       FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile
