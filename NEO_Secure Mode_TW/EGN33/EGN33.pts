DL_SCRIPTVERSION
1
11007

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "EGN33" ' !!!!! EDIT THIS !!!!!
' Objective: to verify the encryption info. (ex. N, M, E) on start-up screen (Vendi)
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result

  'Set Reader Type
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerType = result

  'Set Reader Model
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerModel = result

  'Set Reader FW version
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwVersion = result

  'Set Reader FW build
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwBuild = result

  'Set Reader General Flag
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  genFlag = result
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
            MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If
      
End Sub

'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
'DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0
result = 1
msgcheck = 0

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication

'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub

sub screencheck()
    if result <> 0 then
       for i = 0 to 3
           if result <> 0 then
              dl.resetreceivecounter
              dl.addcomment vbcrlf
              DL.AddComment "--- c7-36 0" & i
              DL.SendSequence "c7-36 0" & i
              if i = 0 or i = 2 or i = 3 then result = DL.WaitForSequence("c7 00", 1, 2000)
              if i = 1 then 
                 result = DL.WaitForSequence("c7 00", 1, 1000)
                 if result = 1 then result = 0
                 if result = 0 then result = 1
              end if

              if result <> 0 and i <> 1 then
                 if i = 0 then msgcheck = msgbox("Power off/ on reader, do you see 'N' on start-up screen?", vbyesno)
                 if i = 2 then msgcheck = msgbox("Power off/ on reader, do you see 'M' on start-up screen?", vbyesno)
                 if i = 3 then msgcheck = msgbox("Power off/ on reader, do you see 'E' on start-up screen?", vbyesno)
                 if msgcheck = 7 then result = 0
              end if
           end if
       next
    end if
end sub
'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
      DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
      MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function

'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------DUT has no key
DL.AddComment "Preset the reader: NO data key & encryption OFF"

hwcheck = msgbox("The reader is 'Vendi'? Or the reader for USAT (NSRED) customer?", vbyesno)
if hwcheck = 6 then
if readerType <> "NEO2" then 
   If result <> 0 Then
      dl.resetreceivecounter
      dl.addcomment vbcrlf
      DL.AddComment "--- 04-F0"
      DL.SendSequence "04-F0"
      result = DL.WaitForSequence("04 00", 1, 2000)
      dl.pause 10000
   end if
else
   readercheck = msgbox ("The reader had no data key & encryption off?", vbyesno)
end if

if readerType <> "NEO2" or readercheck = 6 then screencheck()
'------------------------------------------------------------DUT has key
if readerType <> "NEO2" then 
   If result <> 0 Then
      dl.resetreceivecounter
      dl.addcomment vbcrlf
      DL.AddComment "--- 04-F0"
      DL.SendSequence "04-F0"
      result = DL.WaitForSequence("04 00", 1, 2000)
      dl.pause 10000
   end if

   If result <> 0 Then
      dl.resetreceivecounter
      dl.addcomment vbcrlf
      DL.AddComment "--- Erase All Key (83-00)"
      DL.SendSequence "Erase All Key (83-00)"
      result = DL.WaitForSequence("Erase All Key (83-00)", 1, 2000)
      If result <> 0 Then
         dl.resetreceivecounter
         dl.addcomment vbcrlf
         DL.AddComment "--- Load Plaintext Key - command 1 (80-00)"
         DL.SendSequence "Load Plaintext Key - command 1 (80-00)"
         result = DL.WaitForSequence("80 00", 1, 2000)
      end if
      If result <> 0 Then
         dl.resetreceivecounter
         dl.addcomment vbcrlf
         DL.AddComment "--- Load Plaintext Key - command 2  (80-00)"
         DL.SendSequence "Load Plaintext Key - command 2  (80-00)"
         result = DL.WaitForSequence("80 00", 1, 2000)
      end if
      If result <> 0 Then
         dl.resetreceivecounter
         dl.addcomment vbcrlf
         DL.AddComment "--- Load Encrypted KPK (80-01)"
         DL.SendSequence "Load Encrypted KPK (80-01)"
         result = DL.WaitForSequence("80 00", 1, 2000)
      end if
      If result <> 0 Then
         dl.resetreceivecounter
         dl.addcomment vbcrlf
         DL.AddComment "--- Enter DUKPT Key (81-00)"
         DL.SendSequence "Enter DUKPT Key (81-00)"
         result = DL.WaitForSequence("81 00", 1, 2000)
      end if
   end if
else
   readercheck = msgbox ("The reader had data key & encryption off?", vbyesno)
end if

if readerType <> "NEO2" or readercheck = 6 then screencheck()

else
   dl.addcomment vbcrlf & "Your reader is not suitable (for USAT_NSRED customer), please skip this case"
   result = 0
end if
'------------------------------------------------------------
DL.AddComment vbCrLf
PrintMyResult(result)

DL.AddComment "---------- END OF TEST ----------" & vbCrLf
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""

'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.pause 1000

If 0 Then
If result = 0 then
  DL.AddComment Chr(13) & "Result = FAILED"
Else
  DL.AddComment Chr(13) & "Result = PASSED"
End If
End If

If Prompting(0) = "ON" Then
  If result = 0 then
    MsgBox "Result = FAILED", VBOKOnly, "Result"
  Else 
    MsgBox "Result = PASSED", VBOKOnly, "Result"
  End If
End If

'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------

If MasterResult = 1 Then
      MasterVerdict = "PASSED"
ElseIf MasterResult = 0 Then
      MasterVerdict = "FAILED"
End If
result = MasterResult
DL.AddComment vbCrLf
DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 
