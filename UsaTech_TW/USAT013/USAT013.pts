DL_SCRIPTVERSION
1
22549

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "USAT013" ' !!!!! EDIT THIS !!!!!
' Objective: to verify cmd F0-F2/ F0-F3 W/ poll on demand & burst mode off
' JIRA: VENDI-240
' Refer: Below is the decision from Larry's mail (on 02/May/16)
' 1. Host issues AT command.
' 2. Vendi displays "Present Card" 
' 3. At this point, the device is awaiting a card transaction, and should be in non-blocking mode, and allow the host to put custom messages on the screen.
' 4. When a card transaction is detected, the device should immediately revert to blocking mode, and control the EMV LCD messages until the transaction processing segment is completed.
' 5. Once the unit returns to Idle mode, it should return to non-blocking mode, and await further commands from the host.
'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config2"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
      
  'Display Test Steps   
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  Prompting(1) = result

  'Set Docklight COM Port     
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  POSBaudRate(1) = result

  'Set Reader Type
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerType = result

  'Set Reader Model
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  readerModel = result

  'Set Reader FW version
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwVersion = result

  'Set Reader FW build
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  fwBuild = result

  'Set Reader General Flag
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()      
  genFlag = result
Loop

Sub StepPrompt(PromptString)
      DL.AddComment PromptString
      If Prompting(1) = "ON" Then
         MsgBox PromptString, VBOKOnly, "Test Step"
      Else
      End If    
End Sub
'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0

result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""
'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication
'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
    If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
       MasterResult = 1
       DL.AddComment "Result = PASSED"
    Else
       MasterResult = 0
       DL.AddComment "Result = FAILED"
    End If
End Sub
'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
         DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
         MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function
'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
if result <> 0 then
   dl.resetreceivecounter
   dl.addcomment "--- Poll on Demand"
   DL.SendSequence "Poll on Demand"
   result = dl.waitforsequence("01 00", 1, 2000)
   dl.pause 500
end if

if readerType <> "USAT_SRED" then
if result <> 0 then
   dl.resetreceivecounter
   dl.addcomment vbcrlf
   dl.addcomment "--- Burst Mode OFF"
   if readerType = "GR" or readerType = "NEO1" or readerType = "USAT" then dl.sendsequence "Burst Mode OFF"
   if readerType = "NEO2" then dl.sendsequence "Burst Mode OFF (NEO2)"
   result = dl.waitforsequence("04 00", 1, 2000)
   dl.pause 1000
end if
end if
'------------------------------------------------------------
if result <> 0 then
   for i = 1 to 5
       dl.clearcommwindows
       dl.addcomment vbcrlf & vbcrlf & "Cycle " & i

	   if i <= 3 then
		   if result <> 0 then
			  dl.resetreceivecounter
			  dl.addcomment vbcrlf
			  dl.addcomment "--- LCD Display Line 1 Message (F0-F2)"
			  dl.sendsequence "F0-F2 Rilakkuma"
			  result = dl.waitforsequence("F0 00", 1, 2000)
			  if i = 1 and result = 1 then
				 lcdcheck = msgbox ("Does LCD Line 1 show msg 'Rilakkuma'?", vbyesno)
				 if lcdcheck = 7 then result = 0
			  end if
			  dl.pause 500
		   end if

		   if result <> 0 then
			  dl.resetreceivecounter
			  dl.addcomment vbcrlf
			  dl.addcomment "--- LCD Display Line 2 Message (F0-F3)"
			  dl.sendsequence "F0-F3 Special Sale"
			  result = dl.waitforsequence("F0 00", 1, 2000)
			  if i = 1 and result = 1 then
				 lcdcheck = msgbox ("Does LCD Line 2 show msg 'Special Sale'?", vbyesno)
				 if lcdcheck = 7 then result = 0
			  end if
			  dl.pause 500
		   end if

		   if result <> 0 then
			  dl.resetreceivecounter
			  dl.addcomment vbcrlf
			  dl.addcomment "--- LCD Display Line 1 Message (F0-F2)"
			  dl.sendsequence "F0-F2 Rilakkuma"
			  result = dl.waitforsequence("F0 00", 1, 2000)
			  if i = 1 and result = 1 then
				 lcdcheck = msgbox ("Does LCD Line 1 show msg 'Rilakkuma'?", vbyesno)
				 if lcdcheck = 7 then result = 0
			  end if
			  dl.pause 500
		   end if

		   if result <> 0 then
			  dl.resetreceivecounter
			  dl.addcomment vbcrlf
			  dl.addcomment "--- LCD Display Line 2 Message (F0-F3)"
			  dl.sendsequence "F0-F3 Clear Line 2"
			  result = dl.waitforsequence("F0 00", 1, 2000)
			  if i = 1 and result = 1 then
				 lcdcheck = msgbox ("Does LCD Line 2 show blank msg?", vbyesno)
				 if lcdcheck = 7 then result = 0
			  end if
			  dl.pause 500
		   end if

		   if result <> 0 then
			  dl.resetreceivecounter
			  dl.addcomment vbcrlf
			  dl.addcomment "--- 02-01"
			  dl.sendsequence "02-01"
		   
			  if result <> 0 then
				 dl.resetreceivecounter
				 dl.addcomment vbcrlf
				 dl.addcomment "--- LCD Display Line 1 Message (F0-F2)"
				 dl.sendsequence "F0-F2 Rilakkuma"
				 result = dl.waitforsequence("F0 00", 1, 2000)
				 dl.pause 500
			  end if

			  if result <> 0 then
				 dl.resetreceivecounter
				 dl.addcomment vbcrlf
				 dl.addcomment "--- LCD Display Line 2 Message (F0-F3)"
				 dl.sendsequence "F0-F3 Special Sale"
				 result = dl.waitforsequence("F0 00", 1, 2000)
				 dl.pause 500
			  end if

			  if i = 1 and result = 1 then
				 lcdcheck = msgbox ("Does LCD Line 1 show msg 'Rilakkuma' & Line 2 show msg 'Special Sale'?", vbyesno)
				 if lcdcheck = 7 then result = 0
			  end if       

			  if result <> 0 then
				 result = dl.waitforsequence("02 08", 1, 30000)
			  else
				 dl.sendsequence "05-01"
				 dl.pause 500
			  end if
		   end if
		else
			if i = 4 then
				if result <> 0 then
					msgbox "Click OK -> tap VISA qVSDC card", vbokonly
					dl.resetreceivecounter
					dl.addcomment vbcrlf
					dl.addcomment "--- 02-01"
					dl.sendsequence "02-01"
					result = dl.waitforsequence("02 23", 1, 5000)
					dl.pause 1000
				end if
			end if
		   
			if result <> 0 then
				dl.resetreceivecounter
				dl.addcomment vbcrlf
				dl.addcomment "--- LCD Display Line 1 Message (F0-F2)"
				dl.sendsequence "F0-F2 Rilakkuma"
				result = dl.waitforsequence("F0 0B", 1, 2000)
				dl.pause 500
			end if

			if result <> 0 then
				dl.resetreceivecounter
				dl.addcomment vbcrlf
				dl.addcomment "--- LCD Display Line 2 Message (F0-F3)"
				dl.sendsequence "F0-F3 Special Sale"
				result = dl.waitforsequence("F0 0B", 1, 2000)
				dl.pause 500
			end if
		end if

       if result = 0 then i = 6
   next
end if
'------------------------------------------------------------
DL.Pause 500

DL.AddComment vbCrLf
PrintMyResult(result)

DL.AddComment "---------- END OF TEST ----------" & vbCrLf
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""
'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'DL.pause 1000
'If result = 0 then
'  DL.AddComment Chr(13) & "Result = FAILED"
'Else
'  DL.AddComment Chr(13) & "Result = PASSED"
'End If
'If Prompting(0) = "ON" Then
'  If result = 0 then
'    MsgBox "Result = FAILED", VBOKOnly, "Result"
'  Else 
'    MsgBox "Result = PASSED", VBOKOnly, "Result"
'  End If
'End If
'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------
'If MasterResult = 1 Then
'      MasterVerdict = "PASSED"
'ElseIf MasterResult = 0 Then
'      MasterVerdict = "FAILED"
'End If
'result = MasterResult
'DL.AddComment vbCrLf
'DL.AddComment "MASTER RESULT = " & MasterVerdict
'MasterResult = 0
'------------------------------------------------------------
' WRITE FINAL VERDICT (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
'If MasterResult = 0 Then 
'	FileOutput.CreateFile "MR_FAIL"
'ElseIf MasterResult = 1 Then
'	FileOutput.CreateFile "MR_PASS"
'End If
FileOutput.CreateFile "FINAL_VERDICT.txt"
If MasterResult = 0 Then 
   FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
       FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 

Sub DL_OnSend()
    usDataLen = DL.OnSend_GetSize() - 2
    If usDataLen > 0 Then
        crcStr = DL.CalcChecksum("CRC-CCITT", DL.OnSend_GetData("H"), "H", 1, usDataLen) 
        ' Write result to the last two bytes of the sequence
        DL.OnSend_Poke usDataLen + 1, CInt("&h" + Right(crcStr, 2)) ' low byte
        DL.OnSend_Poke usDataLen + 2, CInt("&h" + Left(crcStr, 2)) ' high byte
    End If
End Sub
