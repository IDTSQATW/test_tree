DL_SCRIPTVERSION
1
21276

'------------------------------------------------------------
' SCRIPT SETUP
' - Assign project name
'------------------------------------------------------------
Dim ProjectName
ProjectName = "MF000100" ' !!!!! EDIT THIS !!!!!
'+++
' This script verifies reader reads all the data blocks w/ positive resp
'---

'------------------------------------------------------------
' Config Variables (!!!!! DO NOT EDIT !!!!!)
#include "..\..\docklight.inc"
' - Set the following:
'   - Enable/disable Test Case Number and Description
'   - Enable/disable Test Step prompting
'   - Assign Docklight COM port
'   - Assign Docklight Baud Rate
'------------------------------------------------------------
FileInput.OpenFile prefix & "Regress.Config"
Dim Prompting(1)
Dim COM_Port(1)
Dim POSBaudRate(1)

Do Until FileInput.EndOfFile
  'Display Test Case Number and Description	
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()
  Prompting(0) = result
	
  'Display Test Steps 	
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()	 
  Prompting(1) = result

  'Set Docklight COM Port	
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()	 
  COM_Port(1) = result

  'Set Reader Baud Rate
  result = FileInput.GetLine() 'by pass variable name
  result = FileInput.GetLine()	 
  POSBaudRate(1) = result
	
Loop

Sub StepPrompt(PromptString)
	DL.AddComment PromptString
	If Prompting(1) = "ON" Then
		MsgBox PromptString, VBOKOnly, "Test Step"
	Else
	End If
	
End Sub

'------------------------------------------------------------
' Definitions and Initializations (!!!!! DO NOT EDIT !!!!!)
' -  
'------------------------------------------------------------
DL.OpenProject ProjectName & ".ptp"
'DL.StartCommunication
DL.ClearCommWindows 
DL.StartLogging "DOCKLIGHT_LOG",False, "H"
', false, true

Dim prompt
Dim confirm
max=1
min=0
Randomize
errCnt = 0
caseValid = 0
result = 1

DL.AddComment "TEST CASE: " & ProjectName & vbCrLf
If authn Then '""

'------------------------------------------------------------
'POS COM port and Baud Rate settings (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.AddComment "--- Set POS COM PORT Settings"
DL.StopCommunication
DL.AddComment "Set POS COM PORT..."
DL.SetChannelSettings(COM_Port(1) & ":" & POSBaudRate(1) & ",NONE,8,1")
DL.AddComment "POS operating on " & COM_Port(1) & " @ " & POSBaudRate(1) & " baud..."
DL.AddComment "Set POS COM PORT - COMPLETE" & vbCrLf
DL.Pause 1000

DL.StartCommunication

'------------------------------------------------------------
'Result reporting (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
MasterResult = 0
If ProjectName <> "" And Prompting(1) = "ON" Then
   caseValid = 1
Else
   caseValid =(Int((max-min+1)*Rnd+min))
   'DL.AddComment "caseValid = " & caseValid
End If

Sub PrintMyResult(ResultX)
      If ResultX <> 0 And errCnt = 0 And caseValid <> 0 Then
            MasterResult = 1
            DL.AddComment "Result = PASSED"
      Else
            MasterResult = 0
            DL.AddComment "Result = FAILED"
      End If
End Sub

Function ReverseResult(ResultParam)
	If ResultParam = 1 Then
		result = 0
	ElseIf ResultParam = 0 Then
		result = 1
	End If
End Function

Sub DL_OnSend()
    usDataLen = DL.OnSend_GetSize() - 2
    If usDataLen > 0 Then
        crcStr = DL.CalcChecksum("CRC-CCITT", DL.OnSend_GetData("H"), "H", 1, usDataLen) 
        ' Write result to the last two bytes of the sequence
        DL.OnSend_Poke usDataLen + 1, CInt("&h" + Left(crcStr, 2)) ' low byte
        DL.OnSend_Poke usDataLen + 2, CInt("&h" + Right(crcStr, 2)) ' high byte
    End If
End Sub

Pass = 0
Fail = 0
Sub The_Test()
 DL.AddComment "---------- READ ALL BLOCKS ----------"
 For i = 0 to 63
       if i = 0 then auth = 0
       if i = auth then 
          if auth = 0 then cmd = "Sector 0"
          if i = 4 then cmd = "Sector 1"
          if i = 8 then cmd = "Sector 2"
          if i = 12 then cmd = "Sector 3"
          if i = 16 then cmd = "Sector 4"
          if i = 20 then cmd = "Sector 5"
          if i = 24 then cmd = "Sector 6"
          if i = 28 then cmd = "Sector 7"
          if i = 32 then cmd = "Sector 8"
          if i = 36 then cmd = "Sector 9"
          if i = 40 then cmd = "Sector 10"
          if i = 44 then cmd = "Sector 11"
          if i = 48 then cmd = "Sector 12"
          if i = 52 then cmd = "Sector 13"
          if i = 56 then cmd = "Sector 14"
          if i = 60 then cmd = "Sector 15"
	   If result <> 0 Then
	      DL.ResetReceiveCounter
	      DL.AddComment vbCrLf & "Mifare auth - " & cmd & vbCrLf
	      DL.SendSequence "Mifare auth - " & cmd
	      result = DL.WaitForSequence("PT command (OK)", 1, 3000)
	   End If
          auth = auth + 4
       end if
	DL.AddComment vbCrLf & "--- Read Block #" & i & " ---" & vbCrLf
	If i <= 9 Then
		i = "00" & i
	Else
		i = "0" & i
	End If
      DL.AddComment vbCrLf
      DL.ResetReceiveCounter
	DL.SendSequence "Read Block", i, "D"
	result = DL.WaitForSequence("Read Block OK" , 1, 3000)

      If result <> 0 Then
		Pass = Pass + 1
	Else
		Fail = Fail + 1
	End If
 Next
 DL.AddComment vbCrLf & "PASSED = " & Pass & vbCrLf & "FAILED = " & Fail
End Sub


'------------------------------------------------------------
'Debugging (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
Function MyDebug(DebugString)
	DL.AddComment  vbCrLf & DebugString & " = " & result & vbCrLf
	MsgBox DebugString & " = " & result, VBOKOnly, "Debug"
End Function

'------------------------------------------------------------
'TEST BEGINS
'------------------------------------------------------------
result = 1

DL.SendSequence "", "56 69 56 4F 74 65 63 68 32 00 2C 01 00 01 00 0D 38","H"
DL.Pause 3000

If result <> 0 Then
 DL.ResetReceiveCounter
 DL.AddComment vbCrLf & "PT Start" & vbCrLf
 DL.SendSequence "PT Start"
 result = DL.WaitForSequence("PT command (OK)", 1, 3000)
End If

If result <> 0 Then
 DL.ResetReceiveCounter
 DL.AddComment vbCrLf & "Antenna Enable" & vbCrLf
 DL.SendSequence "Antenna Enable"
 result = DL.WaitForSequence("Antenna Enable (OK)", 1, 3000)
End If

If result <> 0 Then
 MsgBox "Press OK, then tap your card and leave it on landing zone.", VBOKOnly, "Test step"
 DL.ResetReceiveCounter
 DL.AddComment vbCrLf & "Poll for Token (10 sec)" & vbCrLf
 DL.SendSequence "Poll for Token (10 sec)"
 result = DL.WaitForSequence("Poll for Token (OK)", 1, 3000)
End If

The_Test

If Fail <> 0 Then
   result = 0
Else
   result = 1
End If

DL.SendSequence "", "56 69 56 4F 74 65 63 68 32 00 2C 01 00 01 00 0D 38","H"
DL.Pause 3000

PrintMyResult(result)
DL.Pause 1000

DL.AddComment "---------- END OF TEST ----------" & vbCrLf
Else '""
  DL.AddComment vbCrLf & authnMsg & vbCrLf
End If '""

'------------------------------------------------------------
'Result verdict (!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------
DL.pause 1000

If 0 Then
If result = 0 then
  DL.AddComment Chr(13) & "Result = FAILED"
Else
  DL.AddComment Chr(13) & "Result = PASSED"
End If
End If

If Prompting(0) = "ON" Then
  If result = 0 then
    MsgBox "Result = FAILED", VBOKOnly, "Result"
  Else 
    MsgBox "Result = PASSED", VBOKOnly, "Result"
  End If
End If

'-------------------------------------------------------------
' DETERMINE MASTER VERDICT (!!!!! DO NOT EDIT !!!!!)
'-------------------------------------------------------------

If MasterResult = 1 Then
	MasterVerdict = "PASSED"
ElseIf MasterResult = 0 Then
	MasterVerdict = "FAILED"
End If
result = MasterResult
DL.AddComment vbCrLf
DL.AddComment "MASTER RESULT = " & MasterVerdict


'------------------------------------------------------------
' WRITE FINAL VERDICT FILE(!!!!! DO NOT EDIT !!!!!)
'------------------------------------------------------------

FileOutput.CreateFile "FINAL_VERDICT.txt"

If MasterResult = 0 Then 
	FileOutput.WriteLine "0|FAIL|NOK"
ElseIf MasterResult = 1 Then
	FileOutput.WriteLine "1|PASS|OK"
End If
'FileOutput.WriteLine MasterResult
FileOutput.CloseFile 
